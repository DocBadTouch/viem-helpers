{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isPTP",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAddress",
          "type": "bool"
        }
      ],
      "name": "AddFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "NewDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "NewPtpStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "NewWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "PoolAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PtpClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "callerFee",
          "type": "uint256"
        }
      ],
      "name": "PtpHarvested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "RemoveFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardPaidTo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CALLER_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_CALLER_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ptp",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_staking_ptp",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingStable",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_masterPlatypus",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_masterVtx",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_callerFee",
          "type": "uint256"
        }
      ],
      "name": "__MainStaking_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPTP",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isAddress",
          "type": "bool"
        }
      ],
      "name": "addFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimPTP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimdAndStakePTP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "computeAPR",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "feeInfos",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "max_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPTP",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isAddress",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getDepositTokensForShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getLPTokensForShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPoolInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lp",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sizeLp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receipt",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "rewards_addr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "helper",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getSharesForDepositTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakedPtp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVePtp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isUser",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "verbose",
          "type": "bool"
        }
      ],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "masterPlatypus",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "masterVtx",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lpAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sizeLp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiptToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "rewarder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "helper",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ptp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lpAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "receiptName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "receiptSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "allocPoints",
          "type": "uint256"
        }
      ],
      "name": "registerPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "removeFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "removePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewarder",
          "type": "address"
        }
      ],
      "name": "sendTokenRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setCallerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_computeAPR",
          "type": "address"
        }
      ],
      "name": "setComputeAPR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_xPTP",
          "type": "address"
        }
      ],
      "name": "setXPTP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeAllPtp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stakePTP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingStable",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking_ptp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenToAvaxPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "xPTP",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/ERC20FactoryLib.sol",
    "12": "contracts/MainStaking.sol",
    "15": "contracts/PoolHelperFactoryLib.sol",
    "16": "contracts/poolHelper.sol",
    "18": "contracts/transparent_proxy/ContextUpgradeable.sol",
    "19": "contracts/transparent_proxy/Initializable.sol",
    "20": "contracts/transparent_proxy/OwnableUpgradeable.sol",
    "23": "contracts/utils/Address.sol",
    "25": "contracts/utils/ERC20.sol",
    "29": "contracts/utils/SafeERC20.sol",
    "34": "interfaces/IBaseRewardPool.sol",
    "35": "interfaces/IComputeAPR.sol",
    "36": "interfaces/IERC20.sol",
    "39": "interfaces/IMainStaking.sol",
    "40": "interfaces/IMasterChefVTX.sol",
    "41": "interfaces/IMasterPlatypus.sol",
    "42": "interfaces/IPTPStaking.sol",
    "43": "interfaces/IPoolHelper.sol",
    "44": "interfaces/IStableStaking.sol",
    "45": "interfaces/IxPTP.sol"
  },
  "ast": {
    "absolutePath": "contracts/MainStaking.sol",
    "exportedSymbols": {
      "Address": [7369],
      "AddressUpgradeable": [6539],
      "Context": [7947],
      "ContextUpgradeable": [6581],
      "ERC20": [8532],
      "ERC20FactoryLib": [1240],
      "IBaseRewardPool": [10332],
      "IComputeAPR": [10384],
      "IERC20": [9577],
      "IMainStaking": [10031],
      "IMasterChefVTX": [10239],
      "IMasterPlatypus": [10429],
      "IPTPStaking": [10457],
      "IPoolHelper": [10518],
      "IStableStaking": [10545],
      "Initializable": [6655],
      "IxPTP": [10625],
      "MainStaking": [3233],
      "Ownable": [8794],
      "OwnableUpgradeable": [6774],
      "PoolHelper": [6296],
      "PoolHelperFactoryLib": [5904],
      "SafeERC20": [9018],
      "SafeMath": [9330]
    },
    "id": 3234,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1633,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "32:23:12"
      },
      {
        "absolutePath": "contracts/ERC20FactoryLib.sol",
        "file": "./ERC20FactoryLib.sol",
        "id": 1634,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 1241,
        "src": "57:31:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/PoolHelperFactoryLib.sol",
        "file": "./PoolHelperFactoryLib.sol",
        "id": 1635,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 5905,
        "src": "89:36:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IPTPStaking.sol",
        "file": "../interfaces/IPTPStaking.sol",
        "id": 1636,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 10458,
        "src": "126:39:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 1637,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 9578,
        "src": "166:34:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IStableStaking.sol",
        "file": "../interfaces/IStableStaking.sol",
        "id": 1638,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 10546,
        "src": "201:42:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMasterPlatypus.sol",
        "file": "../interfaces/IMasterPlatypus.sol",
        "id": 1639,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 10430,
        "src": "244:43:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IBaseRewardPool.sol",
        "file": "../interfaces/IBaseRewardPool.sol",
        "id": 1640,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 10333,
        "src": "288:43:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IPoolHelper.sol",
        "file": "../interfaces/IPoolHelper.sol",
        "id": 1641,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 10519,
        "src": "332:39:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMasterChefVTX.sol",
        "file": "../interfaces/IMasterChefVTX.sol",
        "id": 1642,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 10240,
        "src": "373:42:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IxPTP.sol",
        "file": "../interfaces/IxPTP.sol",
        "id": 1643,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 10626,
        "src": "416:33:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IComputeAPR.sol",
        "file": "../interfaces/IComputeAPR.sol",
        "id": 1644,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 10385,
        "src": "450:39:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/transparent_proxy/OwnableUpgradeable.sol",
        "file": "./transparent_proxy/OwnableUpgradeable.sol",
        "id": 1645,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 6775,
        "src": "491:52:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/transparent_proxy/Initializable.sol",
        "file": "./transparent_proxy/Initializable.sol",
        "id": 1646,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3234,
        "sourceUnit": 6656,
        "src": "544:47:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1647,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6655,
              "src": "617:13:12"
            },
            "id": 1648,
            "nodeType": "InheritanceSpecifier",
            "src": "617:13:12"
          },
          {
            "baseName": {
              "id": 1649,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6774,
              "src": "632:18:12"
            },
            "id": 1650,
            "nodeType": "InheritanceSpecifier",
            "src": "632:18:12"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3233,
        "linearizedBaseContracts": [3233, 6774, 6581, 6655],
        "name": "MainStaking",
        "nameLocation": "602:11:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1654,
            "libraryName": {
              "id": 1651,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9018,
              "src": "663:9:12"
            },
            "nodeType": "UsingForDirective",
            "src": "657:27:12",
            "typeName": {
              "id": 1653,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1652,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9577,
                "src": "677:6:12"
              },
              "referencedDeclaration": 9577,
              "src": "677:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$9577",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "ff4de86f",
            "id": 1656,
            "mutability": "mutable",
            "name": "staking_ptp",
            "nameLocation": "722:11:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "707:26:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1655,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "707:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6af66772",
            "id": 1658,
            "mutability": "mutable",
            "name": "ptp",
            "nameLocation": "754:3:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "739:18:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1657,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "739:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "131edc46",
            "id": 1660,
            "mutability": "mutable",
            "name": "xPTP",
            "nameLocation": "778:4:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "763:19:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1659,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "763:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dee91fcb",
            "id": 1662,
            "mutability": "mutable",
            "name": "stakingStable",
            "nameLocation": "803:13:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "788:28:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1661,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "788:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed9a5540",
            "id": 1664,
            "mutability": "mutable",
            "name": "masterPlatypus",
            "nameLocation": "837:14:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "822:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1663,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "822:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a296454f",
            "id": 1666,
            "mutability": "mutable",
            "name": "masterVtx",
            "nameLocation": "872:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "857:24:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1665,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "857:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8525a65a",
            "id": 1668,
            "mutability": "mutable",
            "name": "computeAPR",
            "nameLocation": "921:10:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "906:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1667,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "906:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1671,
            "mutability": "constant",
            "name": "FEE_DENOMINATOR",
            "nameLocation": "966:15:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "949:40:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1669,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "949:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 1670,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "984:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "bc063e1a",
            "id": 1674,
            "mutability": "constant",
            "name": "MAX_FEE",
            "nameLocation": "1019:7:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "995:38:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1672,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "995:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32303030",
              "id": 1673,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1029:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000_by_1",
                "typeString": "int_const 2000"
              },
              "value": "2000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "64a4f078",
            "id": 1676,
            "mutability": "mutable",
            "name": "CALLER_FEE",
            "nameLocation": "1054:10:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "1039:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1675,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1039:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f6a23320",
            "id": 1679,
            "mutability": "constant",
            "name": "MAX_CALLER_FEE",
            "nameLocation": "1094:14:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "1070:44:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1677,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1070:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353030",
              "id": 1678,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1111:3:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1df4ccfc",
            "id": 1681,
            "mutability": "mutable",
            "name": "totalFee",
            "nameLocation": "1135:8:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "1120:23:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1680,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1120:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MainStaking.Pair",
            "id": 1688,
            "members": [
              {
                "constant": false,
                "id": 1683,
                "mutability": "mutable",
                "name": "tokenAmount0",
                "nameLocation": "1180:12:12",
                "nodeType": "VariableDeclaration",
                "scope": 1688,
                "src": "1172:20:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1682,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1172:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1685,
                "mutability": "mutable",
                "name": "tokenAmount1",
                "nameLocation": "1210:12:12",
                "nodeType": "VariableDeclaration",
                "scope": 1688,
                "src": "1202:20:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1684,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1202:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1687,
                "mutability": "mutable",
                "name": "ratio",
                "nameLocation": "1240:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 1688,
                "src": "1232:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1686,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1232:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Pair",
            "nameLocation": "1157:4:12",
            "nodeType": "StructDefinition",
            "scope": 3233,
            "src": "1150:102:12",
            "visibility": "public"
          },
          {
            "canonicalName": "MainStaking.Fees",
            "id": 1703,
            "members": [
              {
                "constant": false,
                "id": 1690,
                "mutability": "mutable",
                "name": "max_value",
                "nameLocation": "1288:9:12",
                "nodeType": "VariableDeclaration",
                "scope": 1703,
                "src": "1280:17:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1689,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1280:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1692,
                "mutability": "mutable",
                "name": "min_value",
                "nameLocation": "1315:9:12",
                "nodeType": "VariableDeclaration",
                "scope": 1703,
                "src": "1307:17:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1691,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1307:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1694,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "1342:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 1703,
                "src": "1334:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1693,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1334:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1696,
                "mutability": "mutable",
                "name": "to",
                "nameLocation": "1365:2:12",
                "nodeType": "VariableDeclaration",
                "scope": 1703,
                "src": "1357:10:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1695,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1357:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1698,
                "mutability": "mutable",
                "name": "isPTP",
                "nameLocation": "1382:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 1703,
                "src": "1377:10:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1697,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1377:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1700,
                "mutability": "mutable",
                "name": "isAddress",
                "nameLocation": "1402:9:12",
                "nodeType": "VariableDeclaration",
                "scope": 1703,
                "src": "1397:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1699,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1397:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1702,
                "mutability": "mutable",
                "name": "isActive",
                "nameLocation": "1426:8:12",
                "nodeType": "VariableDeclaration",
                "scope": 1703,
                "src": "1421:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1701,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1421:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Fees",
            "nameLocation": "1265:4:12",
            "nodeType": "StructDefinition",
            "scope": 3233,
            "src": "1258:183:12",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2c7b09cb",
            "id": 1707,
            "mutability": "mutable",
            "name": "feeInfos",
            "nameLocation": "1461:8:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "1447:22:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Fees_$1703_storage_$dyn_storage",
              "typeString": "struct MainStaking.Fees[]"
            },
            "typeName": {
              "baseType": {
                "id": 1705,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1704,
                  "name": "Fees",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1703,
                  "src": "1447:4:12"
                },
                "referencedDeclaration": 1703,
                "src": "1447:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                  "typeString": "struct MainStaking.Fees"
                }
              },
              "id": 1706,
              "nodeType": "ArrayTypeName",
              "src": "1447:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Fees_$1703_storage_$dyn_storage_ptr",
                "typeString": "struct MainStaking.Fees[]"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MainStaking.Pool",
            "id": 1726,
            "members": [
              {
                "constant": false,
                "id": 1709,
                "mutability": "mutable",
                "name": "pid",
                "nameLocation": "1506:3:12",
                "nodeType": "VariableDeclaration",
                "scope": 1726,
                "src": "1498:11:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1708,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1498:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1711,
                "mutability": "mutable",
                "name": "isActive",
                "nameLocation": "1524:8:12",
                "nodeType": "VariableDeclaration",
                "scope": 1726,
                "src": "1519:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1710,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1519:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1713,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "1550:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 1726,
                "src": "1542:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1712,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1542:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1715,
                "mutability": "mutable",
                "name": "lpAddress",
                "nameLocation": "1573:9:12",
                "nodeType": "VariableDeclaration",
                "scope": 1726,
                "src": "1565:17:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1714,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1565:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1717,
                "mutability": "mutable",
                "name": "sizeLp",
                "nameLocation": "1600:6:12",
                "nodeType": "VariableDeclaration",
                "scope": 1726,
                "src": "1592:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1716,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1592:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1719,
                "mutability": "mutable",
                "name": "size",
                "nameLocation": "1624:4:12",
                "nodeType": "VariableDeclaration",
                "scope": 1726,
                "src": "1616:12:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1718,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1616:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1721,
                "mutability": "mutable",
                "name": "receiptToken",
                "nameLocation": "1646:12:12",
                "nodeType": "VariableDeclaration",
                "scope": 1726,
                "src": "1638:20:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1720,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1638:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1723,
                "mutability": "mutable",
                "name": "rewarder",
                "nameLocation": "1676:8:12",
                "nodeType": "VariableDeclaration",
                "scope": 1726,
                "src": "1668:16:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1722,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1668:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1725,
                "mutability": "mutable",
                "name": "helper",
                "nameLocation": "1702:6:12",
                "nodeType": "VariableDeclaration",
                "scope": 1726,
                "src": "1694:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1724,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1694:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Pool",
            "nameLocation": "1483:4:12",
            "nodeType": "StructDefinition",
            "scope": 3233,
            "src": "1476:239:12",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a4063dbc",
            "id": 1731,
            "mutability": "mutable",
            "name": "pools",
            "nameLocation": "1752:5:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "1720:37:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
              "typeString": "mapping(address => struct MainStaking.Pool)"
            },
            "typeName": {
              "id": 1730,
              "keyType": {
                "id": 1727,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1728:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1720:24:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                "typeString": "mapping(address => struct MainStaking.Pool)"
              },
              "valueType": {
                "id": 1729,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1728,
                  "name": "Pool",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1726,
                  "src": "1739:4:12"
                },
                "referencedDeclaration": 1726,
                "src": "1739:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                  "typeString": "struct MainStaking.Pool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1631b194",
            "id": 1735,
            "mutability": "mutable",
            "name": "tokenToAvaxPool",
            "nameLocation": "1798:15:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "1763:50:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 1734,
              "keyType": {
                "id": 1732,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1771:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1763:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 1733,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1782:7:12",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1745,
            "name": "AddFee",
            "nameLocation": "1826:6:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1737,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1841:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "1833:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1739,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1853:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "1845:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1845:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1741,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isPTP",
                  "nameLocation": "1865:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "1860:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1740,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1860:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1743,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isAddress",
                  "nameLocation": "1877:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "1872:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1742,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1832:55:12"
            },
            "src": "1820:68:12"
          },
          {
            "anonymous": false,
            "id": 1751,
            "name": "SetFee",
            "nameLocation": "1899:6:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1747,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1914:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1751,
                  "src": "1906:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1906:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1749,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1926:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1751,
                  "src": "1918:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1905:27:12"
            },
            "src": "1893:40:12"
          },
          {
            "anonymous": false,
            "id": 1755,
            "name": "RemoveFee",
            "nameLocation": "1944:9:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1753,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1962:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1755,
                  "src": "1954:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1954:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1953:12:12"
            },
            "src": "1938:28:12"
          },
          {
            "anonymous": false,
            "id": 1763,
            "name": "NewDeposit",
            "nameLocation": "1977:10:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1757,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2013:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1763,
                  "src": "1997:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1759,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2043:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1763,
                  "src": "2027:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2027:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1761,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2066:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1763,
                  "src": "2058:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1987:91:12"
            },
            "src": "1971:108:12"
          },
          {
            "anonymous": false,
            "id": 1767,
            "name": "PtpClaimed",
            "nameLocation": "2090:10:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1765,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2109:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1767,
                  "src": "2101:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2101:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2100:16:12"
            },
            "src": "2084:33:12"
          },
          {
            "anonymous": false,
            "id": 1773,
            "name": "PtpHarvested",
            "nameLocation": "2128:12:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1769,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2149:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1773,
                  "src": "2141:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1771,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "callerFee",
                  "nameLocation": "2165:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1773,
                  "src": "2157:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2157:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2140:35:12"
            },
            "src": "2122:54:12"
          },
          {
            "anonymous": false,
            "id": 1781,
            "name": "RewardPaidTo",
            "nameLocation": "2187:12:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1775,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2208:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1781,
                  "src": "2200:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1777,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardToken",
                  "nameLocation": "2220:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1781,
                  "src": "2212:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2212:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1779,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeAmount",
                  "nameLocation": "2241:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1781,
                  "src": "2233:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2233:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2199:52:12"
            },
            "src": "2181:71:12"
          },
          {
            "anonymous": false,
            "id": 1789,
            "name": "NewWithdraw",
            "nameLocation": "2263:11:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1783,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2300:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1789,
                  "src": "2284:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2284:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1785,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2330:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1789,
                  "src": "2314:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2314:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1787,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2353:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1789,
                  "src": "2345:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2345:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2274:91:12"
            },
            "src": "2257:109:12"
          },
          {
            "anonymous": false,
            "id": 1793,
            "name": "NewPtpStaked",
            "nameLocation": "2377:12:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1791,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2398:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "2390:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2389:16:12"
            },
            "src": "2371:35:12"
          },
          {
            "anonymous": false,
            "id": 1797,
            "name": "PoolAdded",
            "nameLocation": "2417:9:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1795,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2435:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1797,
                  "src": "2427:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2427:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2426:22:12"
            },
            "src": "2411:38:12"
          },
          {
            "body": {
              "id": 1845,
              "nodeType": "Block",
              "src": "2681:448:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1814,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6682,
                      "src": "2691:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2691:16:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1816,
                  "nodeType": "ExpressionStatement",
                  "src": "2691:16:12"
                },
                {
                  "expression": {
                    "id": 1819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1817,
                      "name": "staking_ptp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1656,
                      "src": "2717:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1818,
                      "name": "_staking_ptp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1801,
                      "src": "2731:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2717:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1820,
                  "nodeType": "ExpressionStatement",
                  "src": "2717:26:12"
                },
                {
                  "expression": {
                    "id": 1823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1821,
                      "name": "ptp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1658,
                      "src": "2789:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1822,
                      "name": "_ptp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1799,
                      "src": "2795:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2789:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1824,
                  "nodeType": "ExpressionStatement",
                  "src": "2789:10:12"
                },
                {
                  "expression": {
                    "id": 1827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1825,
                      "name": "stakingStable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1662,
                      "src": "2880:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1826,
                      "name": "_stakingStable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1803,
                      "src": "2896:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2880:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1828,
                  "nodeType": "ExpressionStatement",
                  "src": "2880:30:12"
                },
                {
                  "expression": {
                    "id": 1831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1829,
                      "name": "masterPlatypus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1664,
                      "src": "2994:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1830,
                      "name": "_masterPlatypus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1805,
                      "src": "3011:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2994:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1832,
                  "nodeType": "ExpressionStatement",
                  "src": "2994:32:12"
                },
                {
                  "expression": {
                    "id": 1835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1833,
                      "name": "masterVtx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1666,
                      "src": "3036:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1834,
                      "name": "_masterVtx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1807,
                      "src": "3048:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3036:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1836,
                  "nodeType": "ExpressionStatement",
                  "src": "3036:22:12"
                },
                {
                  "expression": {
                    "id": 1839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1837,
                      "name": "CALLER_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1676,
                      "src": "3068:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1838,
                      "name": "_callerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1809,
                      "src": "3081:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3068:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1840,
                  "nodeType": "ExpressionStatement",
                  "src": "3068:23:12"
                },
                {
                  "expression": {
                    "id": 1843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1841,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1681,
                      "src": "3101:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1842,
                      "name": "_callerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1809,
                      "src": "3112:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3101:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1844,
                  "nodeType": "ExpressionStatement",
                  "src": "3101:21:12"
                }
              ]
            },
            "functionSelector": "11c34f91",
            "id": 1846,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1812,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1811,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6629,
                  "src": "2669:11:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2669:11:12"
              }
            ],
            "name": "__MainStaking_init",
            "nameLocation": "2464:18:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1799,
                  "mutability": "mutable",
                  "name": "_ptp",
                  "nameLocation": "2500:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1846,
                  "src": "2492:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2492:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1801,
                  "mutability": "mutable",
                  "name": "_staking_ptp",
                  "nameLocation": "2522:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1846,
                  "src": "2514:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2514:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1803,
                  "mutability": "mutable",
                  "name": "_stakingStable",
                  "nameLocation": "2552:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1846,
                  "src": "2544:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1805,
                  "mutability": "mutable",
                  "name": "_masterPlatypus",
                  "nameLocation": "2584:15:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1846,
                  "src": "2576:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2576:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1807,
                  "mutability": "mutable",
                  "name": "_masterVtx",
                  "nameLocation": "2617:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1846,
                  "src": "2609:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2609:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1809,
                  "mutability": "mutable",
                  "name": "_callerFee",
                  "nameLocation": "2645:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1846,
                  "src": "2637:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2637:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2482:179:12"
            },
            "returnParameters": {
              "id": 1813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2681:0:12"
            },
            "scope": 3233,
            "src": "2455:674:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1867,
              "nodeType": "Block",
              "src": "3186:86:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1854,
                          "name": "xPTP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1660,
                          "src": "3204:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3220:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3212:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1855,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3212:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3212:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3204:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7850545020616c726561647920736574",
                        "id": 1860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3224:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1d707b6e96e04bbfbe886ab9398a8cc56424dc8e87bda4c24a32b93cd169e09",
                          "typeString": "literal_string \"xPTP already set\""
                        },
                        "value": "xPTP already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d1d707b6e96e04bbfbe886ab9398a8cc56424dc8e87bda4c24a32b93cd169e09",
                          "typeString": "literal_string \"xPTP already set\""
                        }
                      ],
                      "id": 1853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3196:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:47:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1862,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:47:12"
                },
                {
                  "expression": {
                    "id": 1865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1863,
                      "name": "xPTP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1660,
                      "src": "3253:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1864,
                      "name": "_xPTP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1848,
                      "src": "3260:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3253:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1866,
                  "nodeType": "ExpressionStatement",
                  "src": "3253:12:12"
                }
              ]
            },
            "functionSelector": "6c1a3085",
            "id": 1868,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1851,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1850,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6715,
                  "src": "3176:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3176:9:12"
              }
            ],
            "name": "setXPTP",
            "nameLocation": "3144:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1848,
                  "mutability": "mutable",
                  "name": "_xPTP",
                  "nameLocation": "3160:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1868,
                  "src": "3152:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3152:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3151:15:12"
            },
            "returnParameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3186:0:12"
            },
            "scope": 3233,
            "src": "3135:137:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1879,
              "nodeType": "Block",
              "src": "3341:41:12",
              "statements": [
                {
                  "expression": {
                    "id": 1877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1875,
                      "name": "computeAPR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1668,
                      "src": "3351:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1876,
                      "name": "_computeAPR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1870,
                      "src": "3364:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3351:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1878,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:24:12"
                }
              ]
            },
            "functionSelector": "66b5f795",
            "id": 1880,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1873,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1872,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6715,
                  "src": "3331:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3331:9:12"
              }
            ],
            "name": "setComputeAPR",
            "nameLocation": "3287:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "_computeAPR",
                  "nameLocation": "3309:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1880,
                  "src": "3301:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3301:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3300:21:12"
            },
            "returnParameters": {
              "id": 1874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3341:0:12"
            },
            "scope": 3233,
            "src": "3278:104:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1942,
              "nodeType": "Block",
              "src": "3558:503:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1898,
                            "name": "totalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1681,
                            "src": "3576:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1899,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1886,
                            "src": "3587:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3576:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1901,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1674,
                          "src": "3596:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3576:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178206665652072656163686564",
                        "id": 1903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3605:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7d3b895f96895f53c96b261d61ef0e8bffccc378779a574311bca199bed4242",
                          "typeString": "literal_string \"Max fee reached\""
                        },
                        "value": "Max fee reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7d3b895f96895f53c96b261d61ef0e8bffccc378779a574311bca199bed4242",
                          "typeString": "literal_string \"Max fee reached\""
                        }
                      ],
                      "id": 1897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3568:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3568:55:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1905,
                  "nodeType": "ExpressionStatement",
                  "src": "3568:55:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1907,
                            "name": "min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1884,
                            "src": "3641:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1908,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1886,
                            "src": "3648:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3641:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1910,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1886,
                            "src": "3657:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1911,
                            "name": "max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1882,
                            "src": "3666:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3657:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3641:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c7565206e6f7420696e2072616e6765",
                        "id": 1914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3671:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfaa6863fd06b34b2ddeaf187a292719b18c52199f7d5ed0175394dd368dcf6e",
                          "typeString": "literal_string \"Value not in range\""
                        },
                        "value": "Value not in range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dfaa6863fd06b34b2ddeaf187a292719b18c52199f7d5ed0175394dd368dcf6e",
                          "typeString": "literal_string \"Value not in range\""
                        }
                      ],
                      "id": 1906,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3633:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3633:59:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1916,
                  "nodeType": "ExpressionStatement",
                  "src": "3633:59:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1921,
                            "name": "max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1882,
                            "src": "3763:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1922,
                            "name": "min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1884,
                            "src": "3795:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1923,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1886,
                            "src": "3823:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1924,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1888,
                            "src": "3850:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1925,
                            "name": "isPTP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1890,
                            "src": "3877:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1926,
                            "name": "isAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1892,
                            "src": "3911:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 1927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3948:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1920,
                          "name": "Fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1703,
                          "src": "3729:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Fees_$1703_storage_ptr_$",
                            "typeString": "type(struct MainStaking.Fees storage pointer)"
                          }
                        },
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": ["max_value", "min_value", "value", "to", "isPTP", "isAddress", "isActive"],
                        "nodeType": "FunctionCall",
                        "src": "3729:238:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fees_$1703_memory_ptr",
                          "typeString": "struct MainStaking.Fees memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fees_$1703_memory_ptr",
                          "typeString": "struct MainStaking.Fees memory"
                        }
                      ],
                      "expression": {
                        "id": 1917,
                        "name": "feeInfos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1707,
                        "src": "3702:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fees_$1703_storage_$dyn_storage",
                          "typeString": "struct MainStaking.Fees storage ref[] storage ref"
                        }
                      },
                      "id": 1919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3702:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Fees_$1703_storage_$dyn_storage_ptr_$_t_struct$_Fees_$1703_storage_$returns$__$bound_to$_t_array$_t_struct$_Fees_$1703_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct MainStaking.Fees storage ref[] storage pointer,struct MainStaking.Fees storage ref)"
                      }
                    },
                    "id": 1929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3702:275:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1930,
                  "nodeType": "ExpressionStatement",
                  "src": "3702:275:12"
                },
                {
                  "expression": {
                    "id": 1933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1931,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1681,
                      "src": "3987:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1932,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1886,
                      "src": "3999:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3987:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1934,
                  "nodeType": "ExpressionStatement",
                  "src": "3987:17:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1936,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1888,
                        "src": "4026:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1937,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "4030:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1938,
                        "name": "isPTP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1890,
                        "src": "4037:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1939,
                        "name": "isAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1892,
                        "src": "4044:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1935,
                      "name": "AddFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1745,
                      "src": "4019:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bool,bool)"
                      }
                    },
                    "id": 1940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4019:35:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1941,
                  "nodeType": "EmitStatement",
                  "src": "4014:40:12"
                }
              ]
            },
            "functionSelector": "7ca20928",
            "id": 1943,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1895,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1894,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6715,
                  "src": "3548:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3548:9:12"
              }
            ],
            "name": "addFee",
            "nameLocation": "3397:6:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1882,
                  "mutability": "mutable",
                  "name": "max",
                  "nameLocation": "3421:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "3413:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1884,
                  "mutability": "mutable",
                  "name": "min",
                  "nameLocation": "3442:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "3434:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3434:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1886,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3463:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "3455:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1888,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3486:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "3478:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3478:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1890,
                  "mutability": "mutable",
                  "name": "isPTP",
                  "nameLocation": "3503:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "3498:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1889,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3498:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1892,
                  "mutability": "mutable",
                  "name": "isAddress",
                  "nameLocation": "3523:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "3518:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1891,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3518:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3403:135:12"
            },
            "returnParameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3558:0:12"
            },
            "scope": 3233,
            "src": "3388:673:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2005,
              "nodeType": "Block",
              "src": "4132:363:12",
              "statements": [
                {
                  "assignments": [1954],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1954,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "4155:3:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2005,
                      "src": "4142:16:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                        "typeString": "struct MainStaking.Fees"
                      },
                      "typeName": {
                        "id": 1953,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1952,
                          "name": "Fees",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1703,
                          "src": "4142:4:12"
                        },
                        "referencedDeclaration": 1703,
                        "src": "4142:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                          "typeString": "struct MainStaking.Fees"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1958,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1955,
                      "name": "feeInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1707,
                      "src": "4161:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Fees_$1703_storage_$dyn_storage",
                        "typeString": "struct MainStaking.Fees storage ref[] storage ref"
                      }
                    },
                    "id": 1957,
                    "indexExpression": {
                      "id": 1956,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1945,
                      "src": "4170:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4161:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fees_$1703_storage",
                      "typeString": "struct MainStaking.Fees storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4142:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1960,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1954,
                              "src": "4207:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                "typeString": "struct MainStaking.Fees storage pointer"
                              }
                            },
                            "id": 1961,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "min_value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1692,
                            "src": "4207:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1962,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1947,
                            "src": "4224:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4207:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1964,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1947,
                            "src": "4233:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 1965,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1954,
                              "src": "4242:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                "typeString": "struct MainStaking.Fees storage pointer"
                              }
                            },
                            "id": 1966,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "max_value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1690,
                            "src": "4242:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4233:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4207:48:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c7565206e6f7420696e2072616e6765",
                        "id": 1969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4269:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfaa6863fd06b34b2ddeaf187a292719b18c52199f7d5ed0175394dd368dcf6e",
                          "typeString": "literal_string \"Value not in range\""
                        },
                        "value": "Value not in range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dfaa6863fd06b34b2ddeaf187a292719b18c52199f7d5ed0175394dd368dcf6e",
                          "typeString": "literal_string \"Value not in range\""
                        }
                      ],
                      "id": 1959,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4186:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4186:113:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1971,
                  "nodeType": "ExpressionStatement",
                  "src": "4186:113:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1973,
                              "name": "totalFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1681,
                              "src": "4317:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1974,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1947,
                              "src": "4328:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4317:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 1976,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1954,
                              "src": "4336:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                "typeString": "struct MainStaking.Fees storage pointer"
                              }
                            },
                            "id": 1977,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1694,
                            "src": "4336:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4317:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1979,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1674,
                          "src": "4349:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4317:39:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178206665652072656163686564",
                        "id": 1981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4358:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7d3b895f96895f53c96b261d61ef0e8bffccc378779a574311bca199bed4242",
                          "typeString": "literal_string \"Max fee reached\""
                        },
                        "value": "Max fee reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7d3b895f96895f53c96b261d61ef0e8bffccc378779a574311bca199bed4242",
                          "typeString": "literal_string \"Max fee reached\""
                        }
                      ],
                      "id": 1972,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4309:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4309:67:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1983,
                  "nodeType": "ExpressionStatement",
                  "src": "4309:67:12"
                },
                {
                  "expression": {
                    "id": 1991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1984,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1681,
                      "src": "4386:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1985,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1681,
                          "src": "4397:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 1986,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1954,
                            "src": "4408:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                              "typeString": "struct MainStaking.Fees storage pointer"
                            }
                          },
                          "id": 1987,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1694,
                          "src": "4408:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4397:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1989,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1947,
                        "src": "4420:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4397:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4386:39:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1992,
                  "nodeType": "ExpressionStatement",
                  "src": "4386:39:12"
                },
                {
                  "expression": {
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1993,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1954,
                        "src": "4435:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                          "typeString": "struct MainStaking.Fees storage pointer"
                        }
                      },
                      "id": 1995,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1694,
                      "src": "4435:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1996,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1947,
                      "src": "4447:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4435:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1998,
                  "nodeType": "ExpressionStatement",
                  "src": "4435:17:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2000,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1954,
                          "src": "4474:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                            "typeString": "struct MainStaking.Fees storage pointer"
                          }
                        },
                        "id": 2001,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "to",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1696,
                        "src": "4474:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2002,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1947,
                        "src": "4482:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1999,
                      "name": "SetFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1751,
                      "src": "4467:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4467:21:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2004,
                  "nodeType": "EmitStatement",
                  "src": "4462:26:12"
                }
              ]
            },
            "functionSelector": "52f7c988",
            "id": 2006,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1950,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1949,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6715,
                  "src": "4122:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "4122:9:12"
              }
            ],
            "name": "setFee",
            "nameLocation": "4076:6:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1945,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "4091:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2006,
                  "src": "4083:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4083:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1947,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "4106:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2006,
                  "src": "4098:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4098:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4082:30:12"
            },
            "returnParameters": {
              "id": 1951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4132:0:12"
            },
            "scope": 3233,
            "src": "4067:428:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2036,
              "nodeType": "Block",
              "src": "4554:144:12",
              "statements": [
                {
                  "assignments": [2015],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2015,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "4577:3:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2036,
                      "src": "4564:16:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                        "typeString": "struct MainStaking.Fees"
                      },
                      "typeName": {
                        "id": 2014,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2013,
                          "name": "Fees",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1703,
                          "src": "4564:4:12"
                        },
                        "referencedDeclaration": 1703,
                        "src": "4564:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                          "typeString": "struct MainStaking.Fees"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2019,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2016,
                      "name": "feeInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1707,
                      "src": "4583:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Fees_$1703_storage_$dyn_storage",
                        "typeString": "struct MainStaking.Fees storage ref[] storage ref"
                      }
                    },
                    "id": 2018,
                    "indexExpression": {
                      "id": 2017,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2008,
                      "src": "4592:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4583:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fees_$1703_storage",
                      "typeString": "struct MainStaking.Fees storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4564:34:12"
                },
                {
                  "expression": {
                    "id": 2023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2020,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1681,
                      "src": "4608:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2021,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "4620:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                          "typeString": "struct MainStaking.Fees storage pointer"
                        }
                      },
                      "id": 2022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1694,
                      "src": "4620:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4608:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2024,
                  "nodeType": "ExpressionStatement",
                  "src": "4608:21:12"
                },
                {
                  "expression": {
                    "id": 2029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2025,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "4639:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                          "typeString": "struct MainStaking.Fees storage pointer"
                        }
                      },
                      "id": 2027,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1702,
                      "src": "4639:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4654:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4639:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2030,
                  "nodeType": "ExpressionStatement",
                  "src": "4639:20:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2032,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2015,
                          "src": "4684:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                            "typeString": "struct MainStaking.Fees storage pointer"
                          }
                        },
                        "id": 2033,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "to",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1696,
                        "src": "4684:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2031,
                      "name": "RemoveFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1755,
                      "src": "4674:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4674:17:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2035,
                  "nodeType": "EmitStatement",
                  "src": "4669:22:12"
                }
              ]
            },
            "functionSelector": "499a2818",
            "id": 2037,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2011,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2010,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6715,
                  "src": "4544:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "4544:9:12"
              }
            ],
            "name": "removeFee",
            "nameLocation": "4510:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2008,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "4528:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2037,
                  "src": "4520:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4520:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4519:15:12"
            },
            "returnParameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4554:0:12"
            },
            "scope": 3233,
            "src": "4501:197:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2070,
              "nodeType": "Block",
              "src": "4760:282:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2045,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2039,
                          "src": "4778:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2046,
                          "name": "MAX_CALLER_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1679,
                          "src": "4787:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4778:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c756520746f6f2068696768",
                        "id": 2048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4803:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb",
                          "typeString": "literal_string \"Value too high\""
                        },
                        "value": "Value too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb",
                          "typeString": "literal_string \"Value too high\""
                        }
                      ],
                      "id": 2044,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4770:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4770:50:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2050,
                  "nodeType": "ExpressionStatement",
                  "src": "4770:50:12"
                },
                {
                  "expression": {
                    "id": 2057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2051,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1681,
                      "src": "4910:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2052,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1681,
                          "src": "4921:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 2053,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2039,
                          "src": "4932:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4921:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2055,
                        "name": "CALLER_FEE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1676,
                        "src": "4940:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4921:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4910:40:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2058,
                  "nodeType": "ExpressionStatement",
                  "src": "4910:40:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2060,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1681,
                          "src": "4968:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2061,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1674,
                          "src": "4980:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4968:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d4158204665652072656163686564",
                        "id": 2063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4989:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8539c6c21b45442c3304a0675ea0314519d0b0b4626e0206b54d46a005bf974",
                          "typeString": "literal_string \"MAX Fee reached\""
                        },
                        "value": "MAX Fee reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8539c6c21b45442c3304a0675ea0314519d0b0b4626e0206b54d46a005bf974",
                          "typeString": "literal_string \"MAX Fee reached\""
                        }
                      ],
                      "id": 2059,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4960:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4960:47:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2065,
                  "nodeType": "ExpressionStatement",
                  "src": "4960:47:12"
                },
                {
                  "expression": {
                    "id": 2068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2066,
                      "name": "CALLER_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1676,
                      "src": "5017:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2067,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "5030:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5017:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2069,
                  "nodeType": "ExpressionStatement",
                  "src": "5017:18:12"
                }
              ]
            },
            "functionSelector": "53aa7dcd",
            "id": 2071,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2042,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2041,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6715,
                  "src": "4750:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "4750:9:12"
              }
            ],
            "name": "setCallerFee",
            "nameLocation": "4713:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2039,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "4734:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2071,
                  "src": "4726:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4726:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4725:15:12"
            },
            "returnParameters": {
              "id": 2043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4760:0:12"
            },
            "scope": 3233,
            "src": "4704:338:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2202,
              "nodeType": "Block",
              "src": "5151:1193:12",
              "statements": [
                {
                  "assignments": [2082],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2082,
                      "mutability": "mutable",
                      "name": "poolInfo",
                      "nameLocation": "5226:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2202,
                      "src": "5213:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                        "typeString": "struct MainStaking.Pool"
                      },
                      "typeName": {
                        "id": 2081,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2080,
                          "name": "Pool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1726,
                          "src": "5213:4:12"
                        },
                        "referencedDeclaration": 1726,
                        "src": "5213:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2086,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2083,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "5237:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                        "typeString": "mapping(address => struct MainStaking.Pool storage ref)"
                      }
                    },
                    "id": 2085,
                    "indexExpression": {
                      "id": 2084,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2073,
                      "src": "5243:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5237:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$1726_storage",
                      "typeString": "struct MainStaking.Pool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5213:36:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2088,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2082,
                          "src": "5290:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                            "typeString": "struct MainStaking.Pool storage pointer"
                          }
                        },
                        "id": 2089,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isActive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1711,
                        "src": "5290:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c206e6f7420616374697665",
                        "id": 2090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5309:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9745817a512994fdb1894be64aa4866cbc12245ad3fba13a53e19dd2a5870f9",
                          "typeString": "literal_string \"Pool not active\""
                        },
                        "value": "Pool not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9745817a512994fdb1894be64aa4866cbc12245ad3fba13a53e19dd2a5870f9",
                          "typeString": "literal_string \"Pool not active\""
                        }
                      ],
                      "id": 2087,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "5282:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5282:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2092,
                  "nodeType": "ExpressionStatement",
                  "src": "5282:45:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2094,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5345:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5345:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2096,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2082,
                            "src": "5359:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                              "typeString": "struct MainStaking.Pool storage pointer"
                            }
                          },
                          "id": 2097,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "helper",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1725,
                          "src": "5359:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5345:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792068656c7065722063616e206465706f736974",
                        "id": 2099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5376:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ebeb48463f9c202a1b05884e9924e3085c4958b4f8011bc482aca0a6250aab0",
                          "typeString": "literal_string \"Only helper can deposit\""
                        },
                        "value": "Only helper can deposit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ebeb48463f9c202a1b05884e9924e3085c4958b4f8011bc482aca0a6250aab0",
                          "typeString": "literal_string \"Only helper can deposit\""
                        }
                      ],
                      "id": 2093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "5337:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5337:65:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2101,
                  "nodeType": "ExpressionStatement",
                  "src": "5337:65:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2106,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2077,
                        "src": "5443:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2109,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5459:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          ],
                          "id": 2108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5451:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2107,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5451:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5451:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2111,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "5466:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2103,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "5419:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2102,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "5412:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5412:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8851,
                      "src": "5412:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$9577_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$9577_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 2112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5412:61:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2113,
                  "nodeType": "ExpressionStatement",
                  "src": "5412:61:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2118,
                        "name": "stakingStable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1662,
                        "src": "5550:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2119,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "5565:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2115,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "5535:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2114,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "5528:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5528:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9532,
                      "src": "5528:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5528:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2121,
                  "nodeType": "ExpressionStatement",
                  "src": "5528:44:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2126,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2073,
                        "src": "5633:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2127,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "5652:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2130,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5680:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          ],
                          "id": 2129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5672:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2128,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5672:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5672:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2132,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5699:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5699:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2123,
                            "name": "stakingStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1662,
                            "src": "5597:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2122,
                          "name": "IStableStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10545,
                          "src": "5582:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableStaking_$10545_$",
                            "typeString": "type(contract IStableStaking)"
                          }
                        },
                        "id": 2124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5582:29:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableStaking_$10545",
                          "typeString": "contract IStableStaking"
                        }
                      },
                      "id": 2125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10531,
                      "src": "5582:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256) external"
                      }
                    },
                    "id": 2134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5582:142:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2135,
                  "nodeType": "ExpressionStatement",
                  "src": "5582:142:12"
                },
                {
                  "assignments": [2137],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2137,
                      "mutability": "mutable",
                      "name": "lpReceived",
                      "nameLocation": "5801:10:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2202,
                      "src": "5793:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2136,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5793:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2148,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2145,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5872:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          ],
                          "id": 2144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5864:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2143,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5864:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5864:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2139,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2082,
                              "src": "5821:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                                "typeString": "struct MainStaking.Pool storage pointer"
                              }
                            },
                            "id": 2140,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1715,
                            "src": "5821:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2138,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "5814:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5814:26:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9492,
                      "src": "5814:36:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5814:73:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5793:94:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2154,
                        "name": "masterPlatypus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1664,
                        "src": "5932:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2155,
                        "name": "lpReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2137,
                        "src": "5948:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2150,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2082,
                              "src": "5904:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                                "typeString": "struct MainStaking.Pool storage pointer"
                              }
                            },
                            "id": 2151,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1715,
                            "src": "5904:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2149,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "5897:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5897:26:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9532,
                      "src": "5897:34:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5897:62:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2157,
                  "nodeType": "ExpressionStatement",
                  "src": "5897:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2162,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2082,
                          "src": "6009:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                            "typeString": "struct MainStaking.Pool storage pointer"
                          }
                        },
                        "id": 2163,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1709,
                        "src": "6009:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2164,
                        "name": "lpReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2137,
                        "src": "6023:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2159,
                            "name": "masterPlatypus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1664,
                            "src": "5985:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2158,
                          "name": "IMasterPlatypus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "5969:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMasterPlatypus_$10429_$",
                            "typeString": "type(contract IMasterPlatypus)"
                          }
                        },
                        "id": 2160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5969:31:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMasterPlatypus_$10429",
                          "typeString": "contract IMasterPlatypus"
                        }
                      },
                      "id": 2161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10393,
                      "src": "5969:39:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5969:65:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "5969:65:12"
                },
                {
                  "assignments": [2168],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2168,
                      "mutability": "mutable",
                      "name": "amountTokenReceipt",
                      "nameLocation": "6080:18:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2202,
                      "src": "6072:26:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6072:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2173,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2170,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "6127:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2171,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2073,
                        "src": "6135:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2169,
                      "name": "getSharesForDepositTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2952,
                      "src": "6101:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256)"
                      }
                    },
                    "id": 2172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6101:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6072:69:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6186:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6186:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2181,
                        "name": "amountTokenReceipt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2168,
                        "src": "6198:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2175,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2082,
                              "src": "6158:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                                "typeString": "struct MainStaking.Pool storage pointer"
                              }
                            },
                            "id": 2176,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receiptToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1721,
                            "src": "6158:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2174,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "6151:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6151:29:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9551,
                      "src": "6151:34:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6151:66:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2183,
                  "nodeType": "ExpressionStatement",
                  "src": "6151:66:12"
                },
                {
                  "expression": {
                    "id": 2188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2184,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2082,
                        "src": "6227:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 2186,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "size",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1719,
                      "src": "6227:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2187,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2075,
                      "src": "6244:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6227:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2189,
                  "nodeType": "ExpressionStatement",
                  "src": "6227:23:12"
                },
                {
                  "expression": {
                    "id": 2194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2190,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2082,
                        "src": "6260:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 2192,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sizeLp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1717,
                      "src": "6260:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2193,
                      "name": "lpReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2137,
                      "src": "6279:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6260:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2195,
                  "nodeType": "ExpressionStatement",
                  "src": "6260:29:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2197,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2077,
                        "src": "6315:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2198,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2073,
                        "src": "6323:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2199,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "6330:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2196,
                      "name": "NewDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1763,
                      "src": "6304:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6304:33:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2201,
                  "nodeType": "EmitStatement",
                  "src": "6299:38:12"
                }
              ]
            },
            "functionSelector": "f45346dc",
            "id": 2203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "5057:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2073,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5082:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2203,
                  "src": "5074:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5074:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2075,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5105:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2203,
                  "src": "5097:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5097:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2077,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "5129:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2203,
                  "src": "5121:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5121:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5064:77:12"
            },
            "returnParameters": {
              "id": 2079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5151:0:12"
            },
            "scope": 3233,
            "src": "5048:1296:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2323,
              "nodeType": "Block",
              "src": "6446:919:12",
              "statements": [
                {
                  "assignments": [2214],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2214,
                      "mutability": "mutable",
                      "name": "poolInfo",
                      "nameLocation": "6469:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2323,
                      "src": "6456:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                        "typeString": "struct MainStaking.Pool"
                      },
                      "typeName": {
                        "id": 2213,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2212,
                          "name": "Pool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1726,
                          "src": "6456:4:12"
                        },
                        "referencedDeclaration": 1726,
                        "src": "6456:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2218,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2215,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "6480:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                        "typeString": "mapping(address => struct MainStaking.Pool storage ref)"
                      }
                    },
                    "id": 2217,
                    "indexExpression": {
                      "id": 2216,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2205,
                      "src": "6486:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6480:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$1726_storage",
                      "typeString": "struct MainStaking.Pool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6456:36:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2220,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2214,
                          "src": "6510:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                            "typeString": "struct MainStaking.Pool storage pointer"
                          }
                        },
                        "id": 2221,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isActive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1711,
                        "src": "6510:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c206e6f7420616374697665",
                        "id": 2222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6529:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9745817a512994fdb1894be64aa4866cbc12245ad3fba13a53e19dd2a5870f9",
                          "typeString": "literal_string \"Pool not active\""
                        },
                        "value": "Pool not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9745817a512994fdb1894be64aa4866cbc12245ad3fba13a53e19dd2a5870f9",
                          "typeString": "literal_string \"Pool not active\""
                        }
                      ],
                      "id": 2219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "6502:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6502:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2224,
                  "nodeType": "ExpressionStatement",
                  "src": "6502:45:12"
                },
                {
                  "assignments": [2226],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2226,
                      "mutability": "mutable",
                      "name": "beforeBalance",
                      "nameLocation": "6565:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2323,
                      "src": "6557:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2225,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6557:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2236,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2233,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6611:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          ],
                          "id": 2232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6603:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2231,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6603:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6603:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2228,
                            "name": "ptp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1658,
                            "src": "6588:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2227,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "6581:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6581:11:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9492,
                      "src": "6581:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6581:36:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6557:60:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2241,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2214,
                          "src": "6667:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                            "typeString": "struct MainStaking.Pool storage pointer"
                          }
                        },
                        "id": 2242,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1709,
                        "src": "6667:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6681:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2238,
                            "name": "masterPlatypus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1664,
                            "src": "6643:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2237,
                          "name": "IMasterPlatypus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "6627:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMasterPlatypus_$10429_$",
                            "typeString": "type(contract IMasterPlatypus)"
                          }
                        },
                        "id": 2239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6627:31:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMasterPlatypus_$10429",
                          "typeString": "contract IMasterPlatypus"
                        }
                      },
                      "id": 2240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10393,
                      "src": "6627:39:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6627:56:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2245,
                  "nodeType": "ExpressionStatement",
                  "src": "6627:56:12"
                },
                {
                  "assignments": [2247],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2247,
                      "mutability": "mutable",
                      "name": "rewards",
                      "nameLocation": "6743:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2323,
                      "src": "6735:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2246,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6735:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2259,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2254,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6783:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MainStaking_$3233",
                                "typeString": "contract MainStaking"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MainStaking_$3233",
                                "typeString": "contract MainStaking"
                              }
                            ],
                            "id": 2253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6775:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2252,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6775:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6775:13:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 2249,
                              "name": "ptp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1658,
                              "src": "6760:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2248,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9577,
                            "src": "6753:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 2250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6753:11:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$9577",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9492,
                        "src": "6753:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6753:36:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2257,
                      "name": "beforeBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2226,
                      "src": "6792:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6753:52:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6735:70:12"
                },
                {
                  "assignments": [2261],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2261,
                      "mutability": "mutable",
                      "name": "afterFee",
                      "nameLocation": "6823:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2323,
                      "src": "6815:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2260,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6815:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2263,
                  "initialValue": {
                    "id": 2262,
                    "name": "rewards",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2247,
                    "src": "6834:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6815:26:12"
                },
                {
                  "condition": {
                    "id": 2264,
                    "name": "isUser",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2207,
                    "src": "6855:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2305,
                  "nodeType": "IfStatement",
                  "src": "6851:298:12",
                  "trueBody": {
                    "id": 2304,
                    "nodeType": "Block",
                    "src": "6863:286:12",
                    "statements": [
                      {
                        "assignments": [2266],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2266,
                            "mutability": "mutable",
                            "name": "feeAmount",
                            "nameLocation": "6885:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2304,
                            "src": "6877:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2265,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6877:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2273,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2267,
                                  "name": "rewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2247,
                                  "src": "6898:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2268,
                                  "name": "CALLER_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1676,
                                  "src": "6908:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6898:20:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2270,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6897:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2271,
                            "name": "FEE_DENOMINATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1671,
                            "src": "6922:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6897:40:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6877:60:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2278,
                              "name": "xPTP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1660,
                              "src": "6971:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2279,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2266,
                              "src": "6977:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2275,
                                  "name": "ptp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1658,
                                  "src": "6958:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2274,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9577,
                                "src": "6951:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6951:11:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$9577",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9532,
                            "src": "6951:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6951:36:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2281,
                        "nodeType": "ExpressionStatement",
                        "src": "6951:36:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2286,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2266,
                              "src": "7021:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2283,
                                  "name": "xPTP",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1660,
                                  "src": "7007:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2282,
                                "name": "IxPTP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10625,
                                "src": "7001:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IxPTP_$10625_$",
                                  "typeString": "type(contract IxPTP)"
                                }
                              },
                              "id": 2284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7001:11:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IxPTP_$10625",
                                "typeString": "contract IxPTP"
                              }
                            },
                            "id": 2285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10597,
                            "src": "7001:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 2287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7001:30:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2288,
                        "nodeType": "ExpressionStatement",
                        "src": "7001:30:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2293,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7071:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7071:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2295,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2266,
                              "src": "7083:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2290,
                                  "name": "xPTP",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1660,
                                  "src": "7052:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2289,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9577,
                                "src": "7045:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7045:12:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$9577",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8825,
                            "src": "7045:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$9577_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$9577_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7045:48:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2297,
                        "nodeType": "ExpressionStatement",
                        "src": "7045:48:12"
                      },
                      {
                        "expression": {
                          "id": 2302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2298,
                            "name": "afterFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2261,
                            "src": "7107:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2299,
                              "name": "afterFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2261,
                              "src": "7118:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2300,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2266,
                              "src": "7129:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7118:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7107:31:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2303,
                        "nodeType": "ExpressionStatement",
                        "src": "7107:31:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2307,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2214,
                          "src": "7183:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                            "typeString": "struct MainStaking.Pool storage pointer"
                          }
                        },
                        "id": 2308,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1713,
                        "src": "7183:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2309,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2214,
                          "src": "7211:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                            "typeString": "struct MainStaking.Pool storage pointer"
                          }
                        },
                        "id": 2310,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewarder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1723,
                        "src": "7211:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2311,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2247,
                        "src": "7242:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2312,
                        "name": "afterFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2261,
                        "src": "7263:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2313,
                        "name": "verbose",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2209,
                        "src": "7285:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2306,
                      "name": "sendRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2536,
                      "src": "7158:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bool)"
                      }
                    },
                    "id": 2314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7158:144:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2315,
                  "nodeType": "ExpressionStatement",
                  "src": "7158:144:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2317,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2247,
                        "src": "7330:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2318,
                          "name": "rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2247,
                          "src": "7339:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 2319,
                          "name": "afterFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2261,
                          "src": "7349:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7339:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2316,
                      "name": "PtpHarvested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1773,
                      "src": "7317:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7317:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2322,
                  "nodeType": "EmitStatement",
                  "src": "7312:46:12"
                }
              ]
            },
            "functionSelector": "03934f81",
            "id": 2324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nameLocation": "6359:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2205,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6384:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2324,
                  "src": "6376:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6376:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2207,
                  "mutability": "mutable",
                  "name": "isUser",
                  "nameLocation": "6404:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2324,
                  "src": "6399:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2206,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6399:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2209,
                  "mutability": "mutable",
                  "name": "verbose",
                  "nameLocation": "6425:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2324,
                  "src": "6420:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2208,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6420:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6366:72:12"
            },
            "returnParameters": {
              "id": 2211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6446:0:12"
            },
            "scope": 3233,
            "src": "6350:1015:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2535,
              "nodeType": "Block",
              "src": "7529:1971:12",
              "statements": [
                {
                  "body": {
                    "id": 2481,
                    "nodeType": "Block",
                    "src": "7585:1455:12",
                    "statements": [
                      {
                        "assignments": [2350],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2350,
                            "mutability": "mutable",
                            "name": "feeInfo",
                            "nameLocation": "7612:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2481,
                            "src": "7599:20:12",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                              "typeString": "struct MainStaking.Fees"
                            },
                            "typeName": {
                              "id": 2349,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2348,
                                "name": "Fees",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1703,
                                "src": "7599:4:12"
                              },
                              "referencedDeclaration": 1703,
                              "src": "7599:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                "typeString": "struct MainStaking.Fees"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2354,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2351,
                            "name": "feeInfos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1707,
                            "src": "7622:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Fees_$1703_storage_$dyn_storage",
                              "typeString": "struct MainStaking.Fees storage ref[] storage ref"
                            }
                          },
                          "id": 2353,
                          "indexExpression": {
                            "id": 2352,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2338,
                            "src": "7631:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7622:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fees_$1703_storage",
                            "typeString": "struct MainStaking.Fees storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7599:34:12"
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 2355,
                            "name": "feeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2350,
                            "src": "7651:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                              "typeString": "struct MainStaking.Fees storage pointer"
                            }
                          },
                          "id": 2356,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1702,
                          "src": "7651:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2480,
                        "nodeType": "IfStatement",
                        "src": "7647:1383:12",
                        "trueBody": {
                          "id": 2479,
                          "nodeType": "Block",
                          "src": "7669:1361:12",
                          "statements": [
                            {
                              "assignments": [2358],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2358,
                                  "mutability": "mutable",
                                  "name": "rewardToken",
                                  "nameLocation": "7695:11:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2479,
                                  "src": "7687:19:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 2357,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7687:7:12",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2360,
                              "initialValue": {
                                "id": 2359,
                                "name": "ptp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1658,
                                "src": "7709:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7687:25:12"
                            },
                            {
                              "assignments": [2362],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2362,
                                  "mutability": "mutable",
                                  "name": "feeAmount",
                                  "nameLocation": "7738:9:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2479,
                                  "src": "7730:17:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2361,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7730:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2370,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2366,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2363,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2330,
                                        "src": "7751:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 2364,
                                          "name": "feeInfo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2350,
                                          "src": "7761:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                            "typeString": "struct MainStaking.Fees storage pointer"
                                          }
                                        },
                                        "id": 2365,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1694,
                                        "src": "7761:13:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7751:23:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2367,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7750:25:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 2368,
                                  "name": "FEE_DENOMINATOR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1671,
                                  "src": "7778:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7750:43:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7730:63:12"
                            },
                            {
                              "condition": {
                                "id": 2373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "7815:14:12",
                                "subExpression": {
                                  "expression": {
                                    "id": 2371,
                                    "name": "feeInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2350,
                                    "src": "7816:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                      "typeString": "struct MainStaking.Fees storage pointer"
                                    }
                                  },
                                  "id": 2372,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "isPTP",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1698,
                                  "src": "7816:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2394,
                              "nodeType": "IfStatement",
                              "src": "7811:189:12",
                              "trueBody": {
                                "id": 2393,
                                "nodeType": "Block",
                                "src": "7831:169:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2378,
                                          "name": "xPTP",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1660,
                                          "src": "7873:4:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2379,
                                          "name": "feeAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2362,
                                          "src": "7879:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 2375,
                                              "name": "ptp",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1658,
                                              "src": "7860:3:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2374,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9577,
                                            "src": "7853:6:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 2376,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7853:11:12",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$9577",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2377,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 9532,
                                        "src": "7853:19:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 2380,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7853:36:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2381,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7853:36:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2386,
                                          "name": "feeAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2362,
                                          "src": "7931:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 2383,
                                              "name": "xPTP",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1660,
                                              "src": "7917:4:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2382,
                                            "name": "IxPTP",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10625,
                                            "src": "7911:5:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IxPTP_$10625_$",
                                              "typeString": "type(contract IxPTP)"
                                            }
                                          },
                                          "id": 2384,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7911:11:12",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IxPTP_$10625",
                                            "typeString": "contract IxPTP"
                                          }
                                        },
                                        "id": 2385,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "deposit",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 10597,
                                        "src": "7911:19:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256) external"
                                        }
                                      },
                                      "id": 2387,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7911:30:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2388,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7911:30:12"
                                  },
                                  {
                                    "expression": {
                                      "id": 2391,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2389,
                                        "name": "rewardToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2358,
                                        "src": "7963:11:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2390,
                                        "name": "xPTP",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1660,
                                        "src": "7977:4:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "7963:18:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 2392,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7963:18:12"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "id": 2397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "8021:18:12",
                                "subExpression": {
                                  "expression": {
                                    "id": 2395,
                                    "name": "feeInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2350,
                                    "src": "8022:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                      "typeString": "struct MainStaking.Fees storage pointer"
                                    }
                                  },
                                  "id": 2396,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "isAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1700,
                                  "src": "8022:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 2473,
                                "nodeType": "Block",
                                "src": "8811:166:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 2461,
                                            "name": "feeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2350,
                                            "src": "8861:7:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                              "typeString": "struct MainStaking.Fees storage pointer"
                                            }
                                          },
                                          "id": 2462,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "to",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1696,
                                          "src": "8861:10:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2463,
                                          "name": "feeAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2362,
                                          "src": "8873:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 2458,
                                              "name": "rewardToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2358,
                                              "src": "8839:11:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2457,
                                            "name": "ERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8532,
                                            "src": "8833:5:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ERC20_$8532_$",
                                              "typeString": "type(contract ERC20)"
                                            }
                                          },
                                          "id": 2459,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8833:18:12",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ERC20_$8532",
                                            "typeString": "contract ERC20"
                                          }
                                        },
                                        "id": 2460,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 8070,
                                        "src": "8833:27:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 2464,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8833:50:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2465,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8833:50:12"
                                  },
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 2467,
                                            "name": "feeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2350,
                                            "src": "8923:7:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                              "typeString": "struct MainStaking.Fees storage pointer"
                                            }
                                          },
                                          "id": 2468,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "to",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1696,
                                          "src": "8923:10:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2469,
                                          "name": "rewardToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2358,
                                          "src": "8935:11:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2470,
                                          "name": "feeAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2362,
                                          "src": "8948:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 2466,
                                        "name": "RewardPaidTo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1781,
                                        "src": "8910:12:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,address,uint256)"
                                        }
                                      },
                                      "id": 2471,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8910:48:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2472,
                                    "nodeType": "EmitStatement",
                                    "src": "8905:53:12"
                                  }
                                ]
                              },
                              "id": 2474,
                              "nodeType": "IfStatement",
                              "src": "8017:960:12",
                              "trueBody": {
                                "id": 2456,
                                "nodeType": "Block",
                                "src": "8041:764:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 2402,
                                            "name": "feeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2350,
                                            "src": "8091:7:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                              "typeString": "struct MainStaking.Fees storage pointer"
                                            }
                                          },
                                          "id": 2403,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "to",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1696,
                                          "src": "8091:10:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2404,
                                          "name": "feeAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2362,
                                          "src": "8103:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 2399,
                                              "name": "rewardToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2358,
                                              "src": "8070:11:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2398,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9577,
                                            "src": "8063:6:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 2400,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8063:19:12",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$9577",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2401,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 9532,
                                        "src": "8063:27:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 2405,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8063:50:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2406,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8063:50:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2412,
                                          "name": "feeAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2362,
                                          "src": "8204:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 2413,
                                          "name": "rewardToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2358,
                                          "src": "8239:11:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 2408,
                                                "name": "feeInfo",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2350,
                                                "src": "8151:7:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                                  "typeString": "struct MainStaking.Fees storage pointer"
                                                }
                                              },
                                              "id": 2409,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "to",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1696,
                                              "src": "8151:10:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2407,
                                            "name": "IBaseRewardPool",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10332,
                                            "src": "8135:15:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IBaseRewardPool_$10332_$",
                                              "typeString": "type(contract IBaseRewardPool)"
                                            }
                                          },
                                          "id": 2410,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8135:27:12",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IBaseRewardPool_$10332",
                                            "typeString": "contract IBaseRewardPool"
                                          }
                                        },
                                        "id": 2411,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "queueNewRewards",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 10331,
                                        "src": "8135:43:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_bool_$",
                                          "typeString": "function (uint256,address) external returns (bool)"
                                        }
                                      },
                                      "id": 2414,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8135:137:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2415,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8135:137:12"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2425,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2416,
                                        "name": "verbose",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2334,
                                        "src": "8298:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "id": 2424,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "8309:27:12",
                                        "subExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              "id": 2422,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2417,
                                                "name": "computeAPR",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1668,
                                                "src": "8311:10:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "arguments": [
                                                  {
                                                    "hexValue": "30",
                                                    "id": 2420,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "8333:1:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    }
                                                  ],
                                                  "id": 2419,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "8325:7:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 2418,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "8325:7:12",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 2421,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8325:10:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "src": "8311:24:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            }
                                          ],
                                          "id": 2423,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "8310:26:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "8298:38:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2455,
                                    "nodeType": "IfStatement",
                                    "src": "8294:493:12",
                                    "trueBody": {
                                      "id": 2454,
                                      "nodeType": "Block",
                                      "src": "8338:449:12",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 2430,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2326,
                                                "src": "8428:5:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "arguments": [],
                                                "expression": {
                                                  "argumentTypes": [],
                                                  "expression": {
                                                    "arguments": [
                                                      {
                                                        "expression": {
                                                          "id": 2432,
                                                          "name": "feeInfo",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2350,
                                                          "src": "8479:7:12",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                                            "typeString": "struct MainStaking.Fees storage pointer"
                                                          }
                                                        },
                                                        "id": 2433,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "to",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1696,
                                                        "src": "8479:10:12",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      ],
                                                      "id": 2431,
                                                      "name": "IBaseRewardPool",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 10332,
                                                      "src": "8463:15:12",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IBaseRewardPool_$10332_$",
                                                        "typeString": "type(contract IBaseRewardPool)"
                                                      }
                                                    },
                                                    "id": 2434,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "8463:27:12",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_IBaseRewardPool_$10332",
                                                      "typeString": "contract IBaseRewardPool"
                                                    }
                                                  },
                                                  "id": 2435,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "getStakingToken",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 10252,
                                                  "src": "8463:43:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                    "typeString": "function () view external returns (address)"
                                                  }
                                                },
                                                "id": 2436,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8463:45:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 2437,
                                                "name": "rewardToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2358,
                                                "src": "8538:11:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 2438,
                                                "name": "feeAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2362,
                                                "src": "8579:9:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "arguments": [],
                                                "expression": {
                                                  "argumentTypes": [],
                                                  "expression": {
                                                    "arguments": [
                                                      {
                                                        "expression": {
                                                          "id": 2440,
                                                          "name": "feeInfo",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2350,
                                                          "src": "8634:7:12",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                                            "typeString": "struct MainStaking.Fees storage pointer"
                                                          }
                                                        },
                                                        "id": 2441,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "to",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1696,
                                                        "src": "8634:10:12",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      ],
                                                      "id": 2439,
                                                      "name": "IBaseRewardPool",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 10332,
                                                      "src": "8618:15:12",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IBaseRewardPool_$10332_$",
                                                        "typeString": "type(contract IBaseRewardPool)"
                                                      }
                                                    },
                                                    "id": 2442,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "8618:27:12",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_IBaseRewardPool_$10332",
                                                      "typeString": "contract IBaseRewardPool"
                                                    }
                                                  },
                                                  "id": 2443,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "totalSupply",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 10276,
                                                  "src": "8618:39:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                                    "typeString": "function () view external returns (uint256)"
                                                  }
                                                },
                                                "id": 2444,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8618:41:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "id": 2427,
                                                    "name": "computeAPR",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1668,
                                                    "src": "8376:10:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "id": 2426,
                                                  "name": "IComputeAPR",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 10384,
                                                  "src": "8364:11:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IComputeAPR_$10384_$",
                                                    "typeString": "type(contract IComputeAPR)"
                                                  }
                                                },
                                                "id": 2428,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8364:23:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IComputeAPR_$10384",
                                                  "typeString": "contract IComputeAPR"
                                                }
                                              },
                                              "id": 2429,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "computeAPR",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 10365,
                                              "src": "8364:34:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,address,uint256,uint256) external"
                                              }
                                            },
                                            "id": 2445,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "8364:321:12",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 2446,
                                          "nodeType": "ExpressionStatement",
                                          "src": "8364:321:12"
                                        },
                                        {
                                          "eventCall": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 2448,
                                                  "name": "feeInfo",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2350,
                                                  "src": "8729:7:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Fees_$1703_storage_ptr",
                                                    "typeString": "struct MainStaking.Fees storage pointer"
                                                  }
                                                },
                                                "id": 2449,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "to",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1696,
                                                "src": "8729:10:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 2450,
                                                "name": "rewardToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2358,
                                                "src": "8741:11:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 2451,
                                                "name": "feeAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2362,
                                                "src": "8754:9:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 2447,
                                              "name": "RewardPaidTo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1781,
                                              "src": "8716:12:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                              }
                                            },
                                            "id": 2452,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "8716:48:12",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 2453,
                                          "nodeType": "EmitStatement",
                                          "src": "8711:53:12"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 2477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2475,
                                  "name": "afterFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2332,
                                  "src": "8994:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 2476,
                                  "name": "feeAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2362,
                                  "src": "9006:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8994:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2478,
                              "nodeType": "ExpressionStatement",
                              "src": "8994:21:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2341,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2338,
                      "src": "7559:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2342,
                        "name": "feeInfos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1707,
                        "src": "7563:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fees_$1703_storage_$dyn_storage",
                          "typeString": "struct MainStaking.Fees storage ref[] storage ref"
                        }
                      },
                      "id": 2343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7563:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7559:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2482,
                  "initializationExpression": {
                    "assignments": [2338],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2338,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7552:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2482,
                        "src": "7544:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7544:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2340,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7556:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7544:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7580:3:12",
                      "subExpression": {
                        "id": 2345,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2338,
                        "src": "7580:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2347,
                    "nodeType": "ExpressionStatement",
                    "src": "7580:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "7539:1501:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2487,
                        "name": "rewarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2328,
                        "src": "9069:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2488,
                        "name": "afterFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "9079:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2484,
                            "name": "ptp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1658,
                            "src": "9056:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2483,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "9049:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9049:11:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9532,
                      "src": "9049:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9049:39:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2490,
                  "nodeType": "ExpressionStatement",
                  "src": "9049:39:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2495,
                        "name": "afterFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "9140:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2496,
                        "name": "ptp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1658,
                        "src": "9150:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2492,
                            "name": "rewarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2328,
                            "src": "9114:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2491,
                          "name": "IBaseRewardPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10332,
                          "src": "9098:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBaseRewardPool_$10332_$",
                            "typeString": "type(contract IBaseRewardPool)"
                          }
                        },
                        "id": 2493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9098:25:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseRewardPool_$10332",
                          "typeString": "contract IBaseRewardPool"
                        }
                      },
                      "id": 2494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "queueNewRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10331,
                      "src": "9098:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) external returns (bool)"
                      }
                    },
                    "id": 2497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9098:56:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2498,
                  "nodeType": "ExpressionStatement",
                  "src": "9098:56:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2499,
                      "name": "verbose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2334,
                      "src": "9168:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 2507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "9179:27:12",
                      "subExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2500,
                              "name": "computeAPR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1668,
                              "src": "9181:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2503,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9203:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9195:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2501,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9195:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9195:10:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "9181:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 2506,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9180:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9168:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2534,
                  "nodeType": "IfStatement",
                  "src": "9164:330:12",
                  "trueBody": {
                    "id": 2533,
                    "nodeType": "Block",
                    "src": "9208:286:12",
                    "statements": [
                      {
                        "assignments": [2511],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2511,
                            "mutability": "mutable",
                            "name": "poolInfo",
                            "nameLocation": "9235:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2533,
                            "src": "9222:21:12",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                              "typeString": "struct MainStaking.Pool"
                            },
                            "typeName": {
                              "id": 2510,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2509,
                                "name": "Pool",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1726,
                                "src": "9222:4:12"
                              },
                              "referencedDeclaration": 1726,
                              "src": "9222:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                                "typeString": "struct MainStaking.Pool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2515,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2512,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1731,
                            "src": "9246:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                              "typeString": "mapping(address => struct MainStaking.Pool storage ref)"
                            }
                          },
                          "id": 2514,
                          "indexExpression": {
                            "id": 2513,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2326,
                            "src": "9252:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9246:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$1726_storage",
                            "typeString": "struct MainStaking.Pool storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9222:36:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2520,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2326,
                              "src": "9330:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2521,
                              "name": "ptp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1658,
                              "src": "9353:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2522,
                              "name": "afterFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2332,
                              "src": "9374:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2523,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2511,
                                "src": "9400:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                                  "typeString": "struct MainStaking.Pool storage pointer"
                                }
                              },
                              "id": 2524,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "size",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1719,
                              "src": "9400:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2517,
                                  "name": "computeAPR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1668,
                                  "src": "9284:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2516,
                                "name": "IComputeAPR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10384,
                                "src": "9272:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IComputeAPR_$10384_$",
                                  "typeString": "type(contract IComputeAPR)"
                                }
                              },
                              "id": 2518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9272:23:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IComputeAPR_$10384",
                                "typeString": "contract IComputeAPR"
                              }
                            },
                            "id": 2519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "computeAPRStable",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10376,
                            "src": "9272:40:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256) external"
                            }
                          },
                          "id": 2525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9272:155:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2526,
                        "nodeType": "ExpressionStatement",
                        "src": "9272:155:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2528,
                              "name": "rewarder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2328,
                              "src": "9459:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2529,
                              "name": "ptp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1658,
                              "src": "9469:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2530,
                              "name": "afterFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2332,
                              "src": "9474:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2527,
                            "name": "RewardPaidTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1781,
                            "src": "9446:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9446:37:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2532,
                        "nodeType": "EmitStatement",
                        "src": "9441:42:12"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 2536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendRewards",
            "nameLocation": "7380:11:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2326,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7409:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2536,
                  "src": "7401:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7401:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2328,
                  "mutability": "mutable",
                  "name": "rewarder",
                  "nameLocation": "7432:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2536,
                  "src": "7424:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7424:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2330,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7458:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2536,
                  "src": "7450:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7450:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2332,
                  "mutability": "mutable",
                  "name": "afterFee",
                  "nameLocation": "7483:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2536,
                  "src": "7475:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7475:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2334,
                  "mutability": "mutable",
                  "name": "verbose",
                  "nameLocation": "7506:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2536,
                  "src": "7501:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2333,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7501:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7391:128:12"
            },
            "returnParameters": {
              "id": 2336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7529:0:12"
            },
            "scope": 3233,
            "src": "7371:2129:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2589,
              "nodeType": "Block",
              "src": "9635:302:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2546,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2538,
                          "src": "9653:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2547,
                          "name": "ptp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1658,
                          "src": "9663:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9653:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420617574686f72697a6564",
                        "id": 2549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9668:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1",
                          "typeString": "literal_string \"not authorized\""
                        },
                        "value": "not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1",
                          "typeString": "literal_string \"not authorized\""
                        }
                      ],
                      "id": 2545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9645:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9645:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2551,
                  "nodeType": "ExpressionStatement",
                  "src": "9645:40:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9703:23:12",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2553,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1731,
                              "src": "9704:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                                "typeString": "mapping(address => struct MainStaking.Pool storage ref)"
                              }
                            },
                            "id": 2555,
                            "indexExpression": {
                              "id": 2554,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2538,
                              "src": "9710:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9704:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pool_$1726_storage",
                              "typeString": "struct MainStaking.Pool storage ref"
                            }
                          },
                          "id": 2556,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1711,
                          "src": "9704:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 2558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9728:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 2552,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9695:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9695:50:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2560,
                  "nodeType": "ExpressionStatement",
                  "src": "9695:50:12"
                },
                {
                  "assignments": [2562],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2562,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "9763:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2589,
                      "src": "9755:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2561,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9755:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2572,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2569,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9805:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          ],
                          "id": 2568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9797:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2567,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9797:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9797:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2564,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2538,
                            "src": "9779:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2563,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "9772:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9772:14:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9492,
                      "src": "9772:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9772:39:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9755:56:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2577,
                        "name": "_rewarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "9844:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2578,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "9855:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2574,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2538,
                            "src": "9828:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2573,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "9821:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9821:14:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9532,
                      "src": "9821:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9821:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2580,
                  "nodeType": "ExpressionStatement",
                  "src": "9821:41:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2585,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "9915:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2586,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2538,
                        "src": "9923:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2582,
                            "name": "_rewarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2540,
                            "src": "9888:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2581,
                          "name": "IBaseRewardPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10332,
                          "src": "9872:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBaseRewardPool_$10332_$",
                            "typeString": "type(contract IBaseRewardPool)"
                          }
                        },
                        "id": 2583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9872:26:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseRewardPool_$10332",
                          "typeString": "contract IBaseRewardPool"
                        }
                      },
                      "id": 2584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "queueNewRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10331,
                      "src": "9872:42:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) external returns (bool)"
                      }
                    },
                    "id": 2587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9872:58:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2588,
                  "nodeType": "ExpressionStatement",
                  "src": "9872:58:12"
                }
              ]
            },
            "functionSelector": "97ead276",
            "id": 2590,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2543,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2542,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6715,
                  "src": "9621:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "9621:9:12"
              }
            ],
            "name": "sendTokenRewards",
            "nameLocation": "9544:16:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2538,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "9569:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2590,
                  "src": "9561:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9561:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2540,
                  "mutability": "mutable",
                  "name": "_rewarder",
                  "nameLocation": "9585:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2590,
                  "src": "9577:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9577:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9560:35:12"
            },
            "returnParameters": {
              "id": 2544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9635:0:12"
            },
            "scope": 3233,
            "src": "9535:402:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2734,
              "nodeType": "Block",
              "src": "10075:1128:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2602,
                          "name": "_slippage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2596,
                          "src": "10136:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 2603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10149:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "10136:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536c697070616765206e6f7420696e2072616e6765",
                        "id": 2605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10154:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f87f28dc3288055d5a75c9b7df1209483fb0db31a2f5b559d57c8127dc6a276",
                          "typeString": "literal_string \"Slippage not in range\""
                        },
                        "value": "Slippage not in range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f87f28dc3288055d5a75c9b7df1209483fb0db31a2f5b559d57c8127dc6a276",
                          "typeString": "literal_string \"Slippage not in range\""
                        }
                      ],
                      "id": 2601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "10128:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10128:50:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2607,
                  "nodeType": "ExpressionStatement",
                  "src": "10128:50:12"
                },
                {
                  "assignments": [2610],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2610,
                      "mutability": "mutable",
                      "name": "poolInfo",
                      "nameLocation": "10201:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2734,
                      "src": "10188:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                        "typeString": "struct MainStaking.Pool"
                      },
                      "typeName": {
                        "id": 2609,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2608,
                          "name": "Pool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1726,
                          "src": "10188:4:12"
                        },
                        "referencedDeclaration": 1726,
                        "src": "10188:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2614,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2611,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "10212:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                        "typeString": "mapping(address => struct MainStaking.Pool storage ref)"
                      }
                    },
                    "id": 2613,
                    "indexExpression": {
                      "id": 2612,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2592,
                      "src": "10218:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10212:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$1726_storage",
                      "typeString": "struct MainStaking.Pool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10188:36:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2616,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10242:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10242:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2618,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "10256:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                              "typeString": "struct MainStaking.Pool storage pointer"
                            }
                          },
                          "id": 2619,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "helper",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1725,
                          "src": "10256:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10242:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792068656c7065722063616e207769746864726177",
                        "id": 2621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10273:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4105a5651e77b7578e2b682c9703664eb2c5c9772f764b7f700694b9e3d1073",
                          "typeString": "literal_string \"Only helper can withdraw\""
                        },
                        "value": "Only helper can withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4105a5651e77b7578e2b682c9703664eb2c5c9772f764b7f700694b9e3d1073",
                          "typeString": "literal_string \"Only helper can withdraw\""
                        }
                      ],
                      "id": 2615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "10234:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10234:66:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2623,
                  "nodeType": "ExpressionStatement",
                  "src": "10234:66:12"
                },
                {
                  "assignments": [2625],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2625,
                      "mutability": "mutable",
                      "name": "sharesAmount",
                      "nameLocation": "10318:12:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2734,
                      "src": "10310:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2624,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10310:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2630,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2627,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2594,
                        "src": "10359:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2628,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2592,
                        "src": "10368:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2626,
                      "name": "getSharesForDepositTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2952,
                      "src": "10333:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256)"
                      }
                    },
                    "id": 2629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10333:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10310:64:12"
                },
                {
                  "assignments": [2632],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2632,
                      "mutability": "mutable",
                      "name": "lpAmount",
                      "nameLocation": "10392:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2734,
                      "src": "10384:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2631,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10384:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2637,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2634,
                        "name": "sharesAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "10424:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2635,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2592,
                        "src": "10438:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2633,
                      "name": "getLPTokensForShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2905,
                      "src": "10403:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256)"
                      }
                    },
                    "id": 2636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10403:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10384:60:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10489:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10489:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2645,
                        "name": "sharesAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "10501:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2639,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2610,
                              "src": "10461:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                                "typeString": "struct MainStaking.Pool storage pointer"
                              }
                            },
                            "id": 2640,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receiptToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1721,
                            "src": "10461:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2638,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "10454:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10454:29:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9558,
                      "src": "10454:34:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10454:60:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2647,
                  "nodeType": "ExpressionStatement",
                  "src": "10454:60:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2653,
                        "name": "stakingStable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1662,
                        "src": "10559:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2654,
                        "name": "lpAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "10574:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2649,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2610,
                              "src": "10531:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                                "typeString": "struct MainStaking.Pool storage pointer"
                              }
                            },
                            "id": 2650,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1715,
                            "src": "10531:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2648,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "10524:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10524:26:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9532,
                      "src": "10524:34:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10524:59:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2656,
                  "nodeType": "ExpressionStatement",
                  "src": "10524:59:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2661,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2610,
                          "src": "10634:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                            "typeString": "struct MainStaking.Pool storage pointer"
                          }
                        },
                        "id": 2662,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1709,
                        "src": "10634:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2663,
                        "name": "lpAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "10648:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2658,
                            "name": "masterPlatypus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1664,
                            "src": "10609:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2657,
                          "name": "IMasterPlatypus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "10593:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMasterPlatypus_$10429_$",
                            "typeString": "type(contract IMasterPlatypus)"
                          }
                        },
                        "id": 2659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10593:31:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMasterPlatypus_$10429",
                          "typeString": "contract IMasterPlatypus"
                        }
                      },
                      "id": 2660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10400,
                      "src": "10593:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 2664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10593:64:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2665,
                  "nodeType": "ExpressionStatement",
                  "src": "10593:64:12"
                },
                {
                  "assignments": [2667],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2667,
                      "mutability": "mutable",
                      "name": "beforeWithdraw",
                      "nameLocation": "10675:14:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2734,
                      "src": "10667:22:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2666,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10667:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2677,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2674,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10724:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          ],
                          "id": 2673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10716:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2672,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10716:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10716:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2669,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2592,
                            "src": "10699:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2668,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "10692:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10692:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9492,
                      "src": "10692:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10692:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10667:63:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2682,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2592,
                        "src": "10792:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2683,
                        "name": "lpAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "10811:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2684,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2594,
                                "src": "10834:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 2685,
                                "name": "_slippage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2596,
                                "src": "10844:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10834:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2687,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10833:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 2688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10857:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "10833:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2692,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10894:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          ],
                          "id": 2691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10886:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2690,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10886:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10886:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2694,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "10913:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "10913:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2679,
                            "name": "stakingStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1662,
                            "src": "10755:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2678,
                          "name": "IStableStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10545,
                          "src": "10740:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableStaking_$10545_$",
                            "typeString": "type(contract IStableStaking)"
                          }
                        },
                        "id": 2680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10740:29:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableStaking_$10545",
                          "typeString": "contract IStableStaking"
                        }
                      },
                      "id": 2681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10544,
                      "src": "10740:38:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address,uint256) external"
                      }
                    },
                    "id": 2696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10740:198:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2697,
                  "nodeType": "ExpressionStatement",
                  "src": "10740:198:12"
                },
                {
                  "expression": {
                    "id": 2702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2698,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2610,
                        "src": "10949:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 2700,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "size",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1719,
                      "src": "10949:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2701,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2594,
                      "src": "10966:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10949:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2703,
                  "nodeType": "ExpressionStatement",
                  "src": "10949:24:12"
                },
                {
                  "expression": {
                    "id": 2708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2704,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2610,
                        "src": "10983:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 2706,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sizeLp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1717,
                      "src": "10983:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2707,
                      "name": "lpAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2632,
                      "src": "11002:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10983:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2709,
                  "nodeType": "ExpressionStatement",
                  "src": "10983:27:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2714,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2598,
                        "src": "11061:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2721,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "11113:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MainStaking_$3233",
                                    "typeString": "contract MainStaking"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MainStaking_$3233",
                                    "typeString": "contract MainStaking"
                                  }
                                ],
                                "id": 2720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11105:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2719,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11105:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11105:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2716,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2592,
                                  "src": "11088:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2715,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9577,
                                "src": "11081:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11081:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$9577",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9492,
                            "src": "11081:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11081:38:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 2724,
                          "name": "beforeWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2667,
                          "src": "11122:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11081:55:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2711,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2592,
                            "src": "11028:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2710,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "11021:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11021:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8825,
                      "src": "11021:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$9577_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$9577_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11021:125:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2727,
                  "nodeType": "ExpressionStatement",
                  "src": "11021:125:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2729,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2598,
                        "src": "11173:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2730,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2592,
                        "src": "11181:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2731,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2594,
                        "src": "11188:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2728,
                      "name": "NewWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1789,
                      "src": "11161:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11161:35:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2733,
                  "nodeType": "EmitStatement",
                  "src": "11156:40:12"
                }
              ]
            },
            "functionSelector": "16762eed",
            "id": 2735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "9952:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2592,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "9978:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2735,
                  "src": "9970:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9970:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2594,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "10001:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2735,
                  "src": "9993:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9993:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2596,
                  "mutability": "mutable",
                  "name": "_slippage",
                  "nameLocation": "10026:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2735,
                  "src": "10018:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10018:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2598,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "10053:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2735,
                  "src": "10045:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10045:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9960:105:12"
            },
            "returnParameters": {
              "id": 2600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10075:0:12"
            },
            "scope": 3233,
            "src": "9943:1260:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2767,
              "nodeType": "Block",
              "src": "11250:206:12",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2740,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2737,
                      "src": "11264:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11273:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11264:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2759,
                  "nodeType": "IfStatement",
                  "src": "11260:135:12",
                  "trueBody": {
                    "id": 2758,
                    "nodeType": "Block",
                    "src": "11276:119:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2747,
                              "name": "staking_ptp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1656,
                              "src": "11310:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2748,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2737,
                              "src": "11323:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2744,
                                  "name": "ptp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1658,
                                  "src": "11297:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2743,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9577,
                                "src": "11290:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11290:11:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$9577",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9532,
                            "src": "11290:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11290:40:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2750,
                        "nodeType": "ExpressionStatement",
                        "src": "11290:40:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2755,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2737,
                              "src": "11377:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2752,
                                  "name": "staking_ptp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1656,
                                  "src": "11356:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2751,
                                "name": "IPTPStaking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10457,
                                "src": "11344:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPTPStaking_$10457_$",
                                  "typeString": "type(contract IPTPStaking)"
                                }
                              },
                              "id": 2753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11344:24:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPTPStaking_$10457",
                                "typeString": "contract IPTPStaking"
                              }
                            },
                            "id": 2754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10436,
                            "src": "11344:32:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 2756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11344:40:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2757,
                        "nodeType": "ExpressionStatement",
                        "src": "11344:40:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2760,
                      "name": "claimPTP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2815,
                      "src": "11404:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11404:10:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2762,
                  "nodeType": "ExpressionStatement",
                  "src": "11404:10:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2764,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2737,
                        "src": "11442:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2763,
                      "name": "NewPtpStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1793,
                      "src": "11429:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11429:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2766,
                  "nodeType": "EmitStatement",
                  "src": "11424:25:12"
                }
              ]
            },
            "functionSelector": "0793613c",
            "id": 2768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakePTP",
            "nameLocation": "11218:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2737,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11235:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2768,
                  "src": "11227:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11227:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11226:16:12"
            },
            "returnParameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11250:0:12"
            },
            "scope": 3233,
            "src": "11209:247:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2783,
              "nodeType": "Block",
              "src": "11492:63:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2778,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11541:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MainStaking_$3233",
                                  "typeString": "contract MainStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MainStaking_$3233",
                                  "typeString": "contract MainStaking"
                                }
                              ],
                              "id": 2777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11533:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2776,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11533:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11533:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2773,
                                "name": "ptp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1658,
                                "src": "11518:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2772,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9577,
                              "src": "11511:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11511:11:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$9577",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9492,
                          "src": "11511:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11511:36:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2771,
                      "name": "stakePTP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2768,
                      "src": "11502:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11502:46:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2782,
                  "nodeType": "ExpressionStatement",
                  "src": "11502:46:12"
                }
              ]
            },
            "functionSelector": "92b3f301",
            "id": 2784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeAllPtp",
            "nameLocation": "11471:11:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11482:2:12"
            },
            "returnParameters": {
              "id": 2770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11492:0:12"
            },
            "scope": 3233,
            "src": "11462:93:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2814,
              "nodeType": "Block",
              "src": "11588:201:12",
              "statements": [
                {
                  "assignments": [2788],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2788,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "11606:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2814,
                      "src": "11598:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2787,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11598:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2798,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2795,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11661:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          ],
                          "id": 2794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11653:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2793,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11653:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11653:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2790,
                            "name": "staking_ptp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1656,
                            "src": "11627:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2789,
                          "name": "IPTPStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10457,
                          "src": "11615:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPTPStaking_$10457_$",
                            "typeString": "type(contract IPTPStaking)"
                          }
                        },
                        "id": 2791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11615:24:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPTPStaking_$10457",
                          "typeString": "contract IPTPStaking"
                        }
                      },
                      "id": 2792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getStakedPtp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10456,
                      "src": "11615:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11615:52:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11598:69:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2799,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2788,
                      "src": "11681:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11690:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11681:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2809,
                  "nodeType": "IfStatement",
                  "src": "11677:73:12",
                  "trueBody": {
                    "id": 2808,
                    "nodeType": "Block",
                    "src": "11693:57:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2803,
                                  "name": "staking_ptp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1656,
                                  "src": "11719:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2802,
                                "name": "IPTPStaking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10457,
                                "src": "11707:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPTPStaking_$10457_$",
                                  "typeString": "type(contract IPTPStaking)"
                                }
                              },
                              "id": 2804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11707:24:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPTPStaking_$10457",
                                "typeString": "contract IPTPStaking"
                              }
                            },
                            "id": 2805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10439,
                            "src": "11707:30:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 2806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11707:32:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2807,
                        "nodeType": "ExpressionStatement",
                        "src": "11707:32:12"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2811,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2788,
                        "src": "11775:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2810,
                      "name": "PtpClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1767,
                      "src": "11764:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11764:18:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2813,
                  "nodeType": "EmitStatement",
                  "src": "11759:23:12"
                }
              ]
            },
            "functionSelector": "074cb17a",
            "id": 2815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimPTP",
            "nameLocation": "11570:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11578:2:12"
            },
            "returnParameters": {
              "id": 2786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11588:0:12"
            },
            "scope": 3233,
            "src": "11561:228:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2824,
              "nodeType": "Block",
              "src": "11833:50:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2818,
                      "name": "claimPTP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2815,
                      "src": "11843:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11843:10:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2820,
                  "nodeType": "ExpressionStatement",
                  "src": "11843:10:12"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2821,
                      "name": "stakeAllPtp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2784,
                      "src": "11863:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11863:13:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2823,
                  "nodeType": "ExpressionStatement",
                  "src": "11863:13:12"
                }
              ]
            },
            "functionSelector": "10809f2a",
            "id": 2825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimdAndStakePTP",
            "nameLocation": "11804:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11821:2:12"
            },
            "returnParameters": {
              "id": 2817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11833:0:12"
            },
            "scope": 3233,
            "src": "11795:88:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2840,
              "nodeType": "Block",
              "src": "11945:76:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2836,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12008:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          ],
                          "id": 2835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12000:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2834,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12000:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12000:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2831,
                            "name": "staking_ptp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1656,
                            "src": "11974:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2830,
                          "name": "IPTPStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10457,
                          "src": "11962:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPTPStaking_$10457_$",
                            "typeString": "type(contract IPTPStaking)"
                          }
                        },
                        "id": 2832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11962:24:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPTPStaking_$10457",
                          "typeString": "contract IPTPStaking"
                        }
                      },
                      "id": 2833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getStakedPtp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10456,
                      "src": "11962:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11962:52:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2829,
                  "id": 2839,
                  "nodeType": "Return",
                  "src": "11955:59:12"
                }
              ]
            },
            "functionSelector": "1439069a",
            "id": 2841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakedPtp",
            "nameLocation": "11898:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11910:2:12"
            },
            "returnParameters": {
              "id": 2829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2841,
                  "src": "11936:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11936:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11935:9:12"
            },
            "scope": 3233,
            "src": "11889:132:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2856,
              "nodeType": "Block",
              "src": "12079:68:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2852,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12134:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MainStaking_$3233",
                              "typeString": "contract MainStaking"
                            }
                          ],
                          "id": 2851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12126:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2850,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12126:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12126:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2847,
                            "name": "staking_ptp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1656,
                            "src": "12103:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2846,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "12096:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12096:19:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9492,
                      "src": "12096:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12096:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2845,
                  "id": 2855,
                  "nodeType": "Return",
                  "src": "12089:51:12"
                }
              ]
            },
            "functionSelector": "746c5a9f",
            "id": 2857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVePtp",
            "nameLocation": "12036:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12044:2:12"
            },
            "returnParameters": {
              "id": 2845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2844,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2857,
                  "src": "12070:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12070:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12069:9:12"
            },
            "scope": 3233,
            "src": "12027:120:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2904,
              "nodeType": "Block",
              "src": "12431:312:12",
              "statements": [
                {
                  "assignments": [2869],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2869,
                      "mutability": "mutable",
                      "name": "poolInfo",
                      "nameLocation": "12454:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2904,
                      "src": "12441:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                        "typeString": "struct MainStaking.Pool"
                      },
                      "typeName": {
                        "id": 2868,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2867,
                          "name": "Pool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1726,
                          "src": "12441:4:12"
                        },
                        "referencedDeclaration": 1726,
                        "src": "12441:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2873,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2870,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "12465:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                        "typeString": "mapping(address => struct MainStaking.Pool storage ref)"
                      }
                    },
                    "id": 2872,
                    "indexExpression": {
                      "id": 2871,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2862,
                      "src": "12471:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12465:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$1726_storage",
                      "typeString": "struct MainStaking.Pool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12441:36:12"
                },
                {
                  "assignments": [2875],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2875,
                      "mutability": "mutable",
                      "name": "totalDeposits",
                      "nameLocation": "12495:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2904,
                      "src": "12487:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2874,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12487:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2878,
                  "initialValue": {
                    "expression": {
                      "id": 2876,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2869,
                      "src": "12511:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                        "typeString": "struct MainStaking.Pool storage pointer"
                      }
                    },
                    "id": 2877,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sizeLp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1717,
                    "src": "12511:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12487:39:12"
                },
                {
                  "assignments": [2880],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2880,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nameLocation": "12544:11:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2904,
                      "src": "12536:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2879,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12536:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2887,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2882,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2869,
                              "src": "12565:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                                "typeString": "struct MainStaking.Pool storage pointer"
                              }
                            },
                            "id": 2883,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receiptToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1721,
                            "src": "12565:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2881,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "12558:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12558:29:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9484,
                      "src": "12558:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12558:43:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12536:65:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2888,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2880,
                        "src": "12615:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 2889,
                        "name": "totalDeposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2875,
                        "src": "12629:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12615:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12646:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12615:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2896,
                  "nodeType": "IfStatement",
                  "src": "12611:71:12",
                  "trueBody": {
                    "id": 2895,
                    "nodeType": "Block",
                    "src": "12649:33:12",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 2893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12670:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2866,
                        "id": 2894,
                        "nodeType": "Return",
                        "src": "12663:8:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2897,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2860,
                            "src": "12699:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2898,
                            "name": "totalDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2875,
                            "src": "12708:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12699:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2900,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12698:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2901,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2880,
                      "src": "12725:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12698:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2866,
                  "id": 2903,
                  "nodeType": "Return",
                  "src": "12691:45:12"
                }
              ]
            },
            "documentation": {
              "id": 2858,
              "nodeType": "StructuredDocumentation",
              "src": "12153:154:12",
              "text": " @notice Calculate deposit tokens for a given amount of receipt tokens\n @param amount receipt tokens\n @return deposit tokens"
            },
            "functionSelector": "39d4d8b1",
            "id": 2905,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLPTokensForShares",
            "nameLocation": "12321:20:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2860,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12350:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2905,
                  "src": "12342:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12342:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2862,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "12366:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2905,
                  "src": "12358:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12358:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12341:31:12"
            },
            "returnParameters": {
              "id": 2866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2865,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2905,
                  "src": "12418:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12418:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12417:9:12"
            },
            "scope": 3233,
            "src": "12312:431:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2951,
              "nodeType": "Block",
              "src": "12873:316:12",
              "statements": [
                {
                  "assignments": [2916],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2916,
                      "mutability": "mutable",
                      "name": "poolInfo",
                      "nameLocation": "12896:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2951,
                      "src": "12883:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                        "typeString": "struct MainStaking.Pool"
                      },
                      "typeName": {
                        "id": 2915,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2914,
                          "name": "Pool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1726,
                          "src": "12883:4:12"
                        },
                        "referencedDeclaration": 1726,
                        "src": "12883:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2920,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2917,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "12907:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                        "typeString": "mapping(address => struct MainStaking.Pool storage ref)"
                      }
                    },
                    "id": 2919,
                    "indexExpression": {
                      "id": 2918,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2909,
                      "src": "12913:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12907:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$1726_storage",
                      "typeString": "struct MainStaking.Pool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12883:36:12"
                },
                {
                  "assignments": [2922],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2922,
                      "mutability": "mutable",
                      "name": "totalDeposits",
                      "nameLocation": "12937:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2951,
                      "src": "12929:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2921,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12929:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2925,
                  "initialValue": {
                    "expression": {
                      "id": 2923,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2916,
                      "src": "12953:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                        "typeString": "struct MainStaking.Pool storage pointer"
                      }
                    },
                    "id": 2924,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "size",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1719,
                    "src": "12953:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12929:37:12"
                },
                {
                  "assignments": [2927],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2927,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nameLocation": "12984:11:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2951,
                      "src": "12976:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2926,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12976:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2934,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2929,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2916,
                              "src": "13005:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                                "typeString": "struct MainStaking.Pool storage pointer"
                              }
                            },
                            "id": 2930,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receiptToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1721,
                            "src": "13005:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2928,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "12998:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12998:29:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9484,
                      "src": "12998:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12998:43:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12976:65:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2935,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2927,
                        "src": "13056:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 2936,
                        "name": "totalDeposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2922,
                        "src": "13070:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13056:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13087:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13056:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2943,
                  "nodeType": "IfStatement",
                  "src": "13052:76:12",
                  "trueBody": {
                    "id": 2942,
                    "nodeType": "Block",
                    "src": "13090:38:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2940,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2907,
                          "src": "13111:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2913,
                        "id": 2941,
                        "nodeType": "Return",
                        "src": "13104:13:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2944,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2907,
                            "src": "13145:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2945,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2927,
                            "src": "13154:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13145:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2947,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13144:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2948,
                      "name": "totalDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2922,
                      "src": "13169:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13144:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2913,
                  "id": 2950,
                  "nodeType": "Return",
                  "src": "13137:45:12"
                }
              ]
            },
            "functionSelector": "99cec548",
            "id": 2952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSharesForDepositTokens",
            "nameLocation": "12758:25:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2907,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12792:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "12784:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12784:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2909,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "12808:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "12800:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12800:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12783:31:12"
            },
            "returnParameters": {
              "id": 2913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2912,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "12860:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12860:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12859:9:12"
            },
            "scope": 3233,
            "src": "12749:440:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2999,
              "nodeType": "Block",
              "src": "13478:310:12",
              "statements": [
                {
                  "assignments": [2964],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2964,
                      "mutability": "mutable",
                      "name": "poolInfo",
                      "nameLocation": "13501:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2999,
                      "src": "13488:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                        "typeString": "struct MainStaking.Pool"
                      },
                      "typeName": {
                        "id": 2963,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2962,
                          "name": "Pool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1726,
                          "src": "13488:4:12"
                        },
                        "referencedDeclaration": 1726,
                        "src": "13488:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2968,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2965,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "13512:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                        "typeString": "mapping(address => struct MainStaking.Pool storage ref)"
                      }
                    },
                    "id": 2967,
                    "indexExpression": {
                      "id": 2966,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2957,
                      "src": "13518:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13512:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$1726_storage",
                      "typeString": "struct MainStaking.Pool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13488:36:12"
                },
                {
                  "assignments": [2970],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2970,
                      "mutability": "mutable",
                      "name": "totalDeposits",
                      "nameLocation": "13542:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2999,
                      "src": "13534:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2969,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13534:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2973,
                  "initialValue": {
                    "expression": {
                      "id": 2971,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2964,
                      "src": "13558:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                        "typeString": "struct MainStaking.Pool storage pointer"
                      }
                    },
                    "id": 2972,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "size",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1719,
                    "src": "13558:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13534:37:12"
                },
                {
                  "assignments": [2975],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2975,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nameLocation": "13589:11:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2999,
                      "src": "13581:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2974,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13581:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2982,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2977,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2964,
                              "src": "13610:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                                "typeString": "struct MainStaking.Pool storage pointer"
                              }
                            },
                            "id": 2978,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receiptToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1721,
                            "src": "13610:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2976,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9577,
                          "src": "13603:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13603:29:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9484,
                      "src": "13603:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13603:43:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13581:65:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2983,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2975,
                        "src": "13660:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 2984,
                        "name": "totalDeposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2970,
                        "src": "13674:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13660:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13691:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13660:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2991,
                  "nodeType": "IfStatement",
                  "src": "13656:71:12",
                  "trueBody": {
                    "id": 2990,
                    "nodeType": "Block",
                    "src": "13694:33:12",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 2988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13715:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2961,
                        "id": 2989,
                        "nodeType": "Return",
                        "src": "13708:8:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2992,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2955,
                            "src": "13744:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2993,
                            "name": "totalDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2970,
                            "src": "13753:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13744:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2995,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13743:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2996,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2975,
                      "src": "13770:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13743:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2961,
                  "id": 2998,
                  "nodeType": "Return",
                  "src": "13736:45:12"
                }
              ]
            },
            "documentation": {
              "id": 2953,
              "nodeType": "StructuredDocumentation",
              "src": "13195:154:12",
              "text": " @notice Calculate deposit tokens for a given amount of receipt tokens\n @param amount receipt tokens\n @return deposit tokens"
            },
            "functionSelector": "f0806088",
            "id": 3000,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDepositTokensForShares",
            "nameLocation": "13363:25:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2955,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13397:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3000,
                  "src": "13389:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13389:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2957,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "13413:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3000,
                  "src": "13405:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13405:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13388:31:12"
            },
            "returnParameters": {
              "id": 2961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3000,
                  "src": "13465:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13465:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13464:9:12"
            },
            "scope": 3233,
            "src": "13354:434:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3136,
              "nodeType": "Block",
              "src": "14016:1239:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3018,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1731,
                              "src": "14047:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                                "typeString": "mapping(address => struct MainStaking.Pool storage ref)"
                              }
                            },
                            "id": 3020,
                            "indexExpression": {
                              "id": 3019,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3004,
                              "src": "14053:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14047:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pool_$1726_storage",
                              "typeString": "struct MainStaking.Pool storage ref"
                            }
                          },
                          "id": 3021,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1711,
                          "src": "14047:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 3022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14073:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "14047:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c20697320616c72656164792072656769737465726564206f7220616374697665",
                        "id": 3024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14092:38:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9342a6c5c0a894cdbd6212b92752f256b984792cd91d44c976af3cc8a807f60",
                          "typeString": "literal_string \"Pool is already registered or active\""
                        },
                        "value": "Pool is already registered or active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9342a6c5c0a894cdbd6212b92752f256b984792cd91d44c976af3cc8a807f60",
                          "typeString": "literal_string \"Pool is already registered or active\""
                        }
                      ],
                      "id": 3017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "14026:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14026:114:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3026,
                  "nodeType": "ExpressionStatement",
                  "src": "14026:114:12"
                },
                {
                  "assignments": [3029],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3029,
                      "mutability": "mutable",
                      "name": "newToken",
                      "nameLocation": "14157:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3136,
                      "src": "14150:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$9577",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 3028,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3027,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9577,
                          "src": "14150:6:12"
                        },
                        "referencedDeclaration": 9577,
                        "src": "14150:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9577",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3037,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3033,
                            "name": "receiptName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3008,
                            "src": "14216:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 3034,
                            "name": "receiptSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3010,
                            "src": "14229:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3031,
                            "name": "ERC20FactoryLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1240,
                            "src": "14188:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20FactoryLib_$1240_$",
                              "typeString": "type(library ERC20FactoryLib)"
                            }
                          },
                          "id": 3032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "createERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1239,
                          "src": "14188:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (string memory,string memory) returns (address)"
                          }
                        },
                        "id": 3035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14188:55:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3030,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9577,
                      "src": "14168:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$9577_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 3036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14168:85:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$9577",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14150:103:12"
                },
                {
                  "assignments": [3039],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3039,
                      "mutability": "mutable",
                      "name": "rewarder",
                      "nameLocation": "14271:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3136,
                      "src": "14263:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3038,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14263:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3053,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3046,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3029,
                            "src": "14344:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$9577",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$9577",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14336:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3044,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14336:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14336:17:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3050,
                            "name": "ptp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1658,
                            "src": "14375:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14367:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3048,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14367:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14367:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3041,
                            "name": "masterVtx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1666,
                            "src": "14297:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3040,
                          "name": "IMasterChefVTX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10239,
                          "src": "14282:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMasterChefVTX_$10239_$",
                            "typeString": "type(contract IMasterChefVTX)"
                          }
                        },
                        "id": 3042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14282:25:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMasterChefVTX_$10239",
                          "typeString": "contract IMasterChefVTX"
                        }
                      },
                      "id": 3043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createRewarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10078,
                      "src": "14282:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) external returns (address)"
                      }
                    },
                    "id": 3052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14282:107:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14263:126:12"
                },
                {
                  "assignments": [3056],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3056,
                      "mutability": "mutable",
                      "name": "helper",
                      "nameLocation": "14411:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3136,
                      "src": "14399:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPoolHelper_$10518",
                        "typeString": "contract IPoolHelper"
                      },
                      "typeName": {
                        "id": 3055,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3054,
                          "name": "IPoolHelper",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10518,
                          "src": "14399:11:12"
                        },
                        "referencedDeclaration": 10518,
                        "src": "14399:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolHelper_$10518",
                          "typeString": "contract IPoolHelper"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3087,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3060,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3002,
                            "src": "14500:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3063,
                                "name": "newToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3029,
                                "src": "14530:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$9577",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$9577",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 3062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14522:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3061,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14522:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14522:17:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3067,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3004,
                                "src": "14565:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14557:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3065,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14557:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14557:15:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3071,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "14598:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MainStaking_$3233",
                                  "typeString": "contract MainStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MainStaking_$3233",
                                  "typeString": "contract MainStaking"
                                }
                              ],
                              "id": 3070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14590:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3069,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14590:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14590:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3075,
                                "name": "masterVtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1666,
                                "src": "14629:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14621:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3073,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14621:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14621:18:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3079,
                                "name": "rewarder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3039,
                                "src": "14665:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14657:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3077,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14657:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14657:17:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3083,
                                "name": "xPTP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1660,
                                "src": "14700:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14692:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3081,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14692:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14692:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3058,
                            "name": "PoolHelperFactoryLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5904,
                            "src": "14445:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PoolHelperFactoryLib_$5904_$",
                              "typeString": "type(library PoolHelperFactoryLib)"
                            }
                          },
                          "id": 3059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "createPoolHelper",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5903,
                          "src": "14445:37:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                            "typeString": "function (uint256,address,address,address,address,address,address) returns (address)"
                          }
                        },
                        "id": 3085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14445:274:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3057,
                      "name": "IPoolHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10518,
                      "src": "14420:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IPoolHelper_$10518_$",
                        "typeString": "type(contract IPoolHelper)"
                      }
                    },
                    "id": 3086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14420:309:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolHelper_$10518",
                      "typeString": "contract IPoolHelper"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14399:330:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3092,
                        "name": "allocPoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3012,
                        "src": "14782:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3095,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3029,
                            "src": "14815:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$9577",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$9577",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14807:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3093,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14807:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14807:17:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3099,
                            "name": "rewarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3039,
                            "src": "14846:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14838:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3097,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14838:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14838:17:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3103,
                            "name": "helper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3056,
                            "src": "14877:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPoolHelper_$10518",
                              "typeString": "contract IPoolHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPoolHelper_$10518",
                              "typeString": "contract IPoolHelper"
                            }
                          ],
                          "id": 3102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14869:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3101,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14869:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14869:15:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3089,
                            "name": "masterVtx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1666,
                            "src": "14754:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3088,
                          "name": "IMasterChefVTX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10239,
                          "src": "14739:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMasterChefVTX_$10239_$",
                            "typeString": "type(contract IMasterChefVTX)"
                          }
                        },
                        "id": 3090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14739:25:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMasterChefVTX_$10239",
                          "typeString": "contract IMasterChefVTX"
                        }
                      },
                      "id": 3091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10056,
                      "src": "14739:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address,address) external"
                      }
                    },
                    "id": 3105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14739:155:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3106,
                  "nodeType": "ExpressionStatement",
                  "src": "14739:155:12"
                },
                {
                  "expression": {
                    "id": 3130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3107,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1731,
                        "src": "14904:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                          "typeString": "mapping(address => struct MainStaking.Pool storage ref)"
                        }
                      },
                      "id": 3109,
                      "indexExpression": {
                        "id": 3108,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3004,
                        "src": "14910:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14904:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$1726_storage",
                        "typeString": "struct MainStaking.Pool storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3111,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3002,
                          "src": "14944:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 3112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14972:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 3113,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3004,
                          "src": "14997:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3114,
                          "name": "_lpAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3006,
                          "src": "15028:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 3115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15060:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 3116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15081:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "id": 3119,
                              "name": "newToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3029,
                              "src": "15118:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$9577",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$9577",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 3118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15110:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3117,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15110:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15110:17:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 3123,
                              "name": "rewarder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3039,
                              "src": "15159:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15151:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3121,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15151:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15151:17:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 3127,
                              "name": "helper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3056,
                              "src": "15198:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPoolHelper_$10518",
                                "typeString": "contract IPoolHelper"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IPoolHelper_$10518",
                                "typeString": "contract IPoolHelper"
                              }
                            ],
                            "id": 3126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15190:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3125,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15190:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15190:15:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3110,
                        "name": "Pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1726,
                        "src": "14920:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Pool_$1726_storage_ptr_$",
                          "typeString": "type(struct MainStaking.Pool storage pointer)"
                        }
                      },
                      "id": 3129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "pid",
                        "isActive",
                        "token",
                        "lpAddress",
                        "sizeLp",
                        "size",
                        "receiptToken",
                        "rewarder",
                        "helper"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "14920:296:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$1726_memory_ptr",
                        "typeString": "struct MainStaking.Pool memory"
                      }
                    },
                    "src": "14904:312:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$1726_storage",
                      "typeString": "struct MainStaking.Pool storage ref"
                    }
                  },
                  "id": 3131,
                  "nodeType": "ExpressionStatement",
                  "src": "14904:312:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3133,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3004,
                        "src": "15241:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3132,
                      "name": "PoolAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1797,
                      "src": "15231:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15231:17:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3135,
                  "nodeType": "EmitStatement",
                  "src": "15226:22:12"
                }
              ]
            },
            "functionSelector": "3ac856e8",
            "id": 3137,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3015,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3014,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6715,
                  "src": "14006:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "14006:9:12"
              }
            ],
            "name": "registerPool",
            "nameLocation": "13803:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3002,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "13833:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3137,
                  "src": "13825:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13825:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3004,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "13855:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3137,
                  "src": "13847:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13847:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3006,
                  "mutability": "mutable",
                  "name": "_lpAddress",
                  "nameLocation": "13879:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3137,
                  "src": "13871:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13871:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3008,
                  "mutability": "mutable",
                  "name": "receiptName",
                  "nameLocation": "13913:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3137,
                  "src": "13899:25:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3007,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13899:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3010,
                  "mutability": "mutable",
                  "name": "receiptSymbol",
                  "nameLocation": "13948:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3137,
                  "src": "13934:27:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3009,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13934:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3012,
                  "mutability": "mutable",
                  "name": "allocPoints",
                  "nameLocation": "13979:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3137,
                  "src": "13971:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13971:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13815:181:12"
            },
            "returnParameters": {
              "id": 3016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14016:0:12"
            },
            "scope": 3233,
            "src": "13794:1461:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3212,
              "nodeType": "Block",
              "src": "15609:378:12",
              "statements": [
                {
                  "assignments": [3162],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3162,
                      "mutability": "mutable",
                      "name": "tokenInfo",
                      "nameLocation": "15632:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3212,
                      "src": "15619:22:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                        "typeString": "struct MainStaking.Pool"
                      },
                      "typeName": {
                        "id": 3161,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3160,
                          "name": "Pool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1726,
                          "src": "15619:4:12"
                        },
                        "referencedDeclaration": 1726,
                        "src": "15619:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3166,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3163,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "15644:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                        "typeString": "mapping(address => struct MainStaking.Pool storage ref)"
                      }
                    },
                    "id": 3165,
                    "indexExpression": {
                      "id": 3164,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3139,
                      "src": "15650:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15644:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$1726_storage",
                      "typeString": "struct MainStaking.Pool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15619:40:12"
                },
                {
                  "expression": {
                    "id": 3170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3167,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3142,
                      "src": "15669:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3168,
                        "name": "tokenInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3162,
                        "src": "15675:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 3169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1709,
                      "src": "15675:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15669:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3171,
                  "nodeType": "ExpressionStatement",
                  "src": "15669:19:12"
                },
                {
                  "expression": {
                    "id": 3175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3172,
                      "name": "isActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3144,
                      "src": "15698:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3173,
                        "name": "tokenInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3162,
                        "src": "15709:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 3174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1711,
                      "src": "15709:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15698:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3176,
                  "nodeType": "ExpressionStatement",
                  "src": "15698:29:12"
                },
                {
                  "expression": {
                    "id": 3180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3177,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3146,
                      "src": "15737:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3178,
                        "name": "tokenInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3162,
                        "src": "15745:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 3179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1713,
                      "src": "15745:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15737:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3181,
                  "nodeType": "ExpressionStatement",
                  "src": "15737:23:12"
                },
                {
                  "expression": {
                    "id": 3185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3182,
                      "name": "lp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3148,
                      "src": "15770:2:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3183,
                        "name": "tokenInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3162,
                        "src": "15775:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 3184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lpAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1715,
                      "src": "15775:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15770:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3186,
                  "nodeType": "ExpressionStatement",
                  "src": "15770:24:12"
                },
                {
                  "expression": {
                    "id": 3190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3187,
                      "name": "sizeLp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3150,
                      "src": "15804:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3188,
                        "name": "tokenInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3162,
                        "src": "15813:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 3189,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sizeLp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1717,
                      "src": "15813:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15804:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3191,
                  "nodeType": "ExpressionStatement",
                  "src": "15804:25:12"
                },
                {
                  "expression": {
                    "id": 3195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3192,
                      "name": "receipt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3152,
                      "src": "15839:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3193,
                        "name": "tokenInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3162,
                        "src": "15849:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 3194,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "receiptToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1721,
                      "src": "15849:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15839:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3196,
                  "nodeType": "ExpressionStatement",
                  "src": "15839:32:12"
                },
                {
                  "expression": {
                    "id": 3200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3197,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3154,
                      "src": "15881:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3198,
                        "name": "tokenInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3162,
                        "src": "15888:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 3199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "size",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1719,
                      "src": "15888:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15881:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3201,
                  "nodeType": "ExpressionStatement",
                  "src": "15881:21:12"
                },
                {
                  "expression": {
                    "id": 3205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3202,
                      "name": "rewards_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3156,
                      "src": "15912:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3203,
                        "name": "tokenInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3162,
                        "src": "15927:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 3204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1723,
                      "src": "15927:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15912:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3206,
                  "nodeType": "ExpressionStatement",
                  "src": "15912:33:12"
                },
                {
                  "expression": {
                    "id": 3210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3207,
                      "name": "helper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3158,
                      "src": "15955:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3208,
                        "name": "tokenInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3162,
                        "src": "15964:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage_ptr",
                          "typeString": "struct MainStaking.Pool storage pointer"
                        }
                      },
                      "id": 3209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "helper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1725,
                      "src": "15964:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15955:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3211,
                  "nodeType": "ExpressionStatement",
                  "src": "15955:25:12"
                }
              ]
            },
            "functionSelector": "06bfa938",
            "id": 3213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolInfo",
            "nameLocation": "15270:11:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3139,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "15290:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "15282:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15282:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15281:18:12"
            },
            "returnParameters": {
              "id": 3159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3142,
                  "mutability": "mutable",
                  "name": "pid",
                  "nameLocation": "15368:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "15360:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15360:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3144,
                  "mutability": "mutable",
                  "name": "isActive",
                  "nameLocation": "15390:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "15385:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3143,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15385:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3146,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "15420:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "15412:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15412:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3148,
                  "mutability": "mutable",
                  "name": "lp",
                  "nameLocation": "15447:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "15439:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15439:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3150,
                  "mutability": "mutable",
                  "name": "sizeLp",
                  "nameLocation": "15471:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "15463:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15463:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3152,
                  "mutability": "mutable",
                  "name": "receipt",
                  "nameLocation": "15499:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "15491:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15491:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3154,
                  "mutability": "mutable",
                  "name": "size",
                  "nameLocation": "15528:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "15520:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15520:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3156,
                  "mutability": "mutable",
                  "name": "rewards_addr",
                  "nameLocation": "15554:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "15546:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15546:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3158,
                  "mutability": "mutable",
                  "name": "helper",
                  "nameLocation": "15588:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "15580:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15580:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15346:258:12"
            },
            "scope": 3233,
            "src": "15261:726:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3227,
              "nodeType": "Block",
              "src": "16047:46:12",
              "statements": [
                {
                  "expression": {
                    "id": 3225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3220,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1731,
                          "src": "16057:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pool_$1726_storage_$",
                            "typeString": "mapping(address => struct MainStaking.Pool storage ref)"
                          }
                        },
                        "id": 3222,
                        "indexExpression": {
                          "id": 3221,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3215,
                          "src": "16063:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16057:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$1726_storage",
                          "typeString": "struct MainStaking.Pool storage ref"
                        }
                      },
                      "id": 3223,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1711,
                      "src": "16057:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16081:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "16057:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3226,
                  "nodeType": "ExpressionStatement",
                  "src": "16057:29:12"
                }
              ]
            },
            "functionSelector": "3b7d0946",
            "id": 3228,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3218,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3217,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6715,
                  "src": "16037:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "16037:9:12"
              }
            ],
            "name": "removePool",
            "nameLocation": "16002:10:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3215,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "16021:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3228,
                  "src": "16013:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16013:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16012:15:12"
            },
            "returnParameters": {
              "id": 3219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16047:0:12"
            },
            "scope": 3233,
            "src": "15993:100:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "constant": false,
            "id": 3232,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "16119:5:12",
            "nodeType": "VariableDeclaration",
            "scope": 3233,
            "src": "16099:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$40_storage",
              "typeString": "uint256[40]"
            },
            "typeName": {
              "baseType": {
                "id": 3229,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "16099:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3231,
              "length": {
                "hexValue": "3430",
                "id": 3230,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "16107:2:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_40_by_1",
                  "typeString": "int_const 40"
                },
                "value": "40"
              },
              "nodeType": "ArrayTypeName",
              "src": "16099:11:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$40_storage_ptr",
                "typeString": "uint256[40]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 3234,
        "src": "593:15534:12",
        "usedErrors": []
      }
    ],
    "src": "32:16096:12"
  },
  "bytecode": "608060405234801561001057600080fd5b50613a82806100206000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80636af667721161013b578063a296454f116100b8578063f08060881161007c578063f08060881461066a578063f2fde38b1461067d578063f45346dc14610690578063f6a23320146106a3578063ff4de86f146106ac57600080fd5b8063a296454f1461056a578063a4063dbc1461057d578063bc063e1a1461063b578063dee91fcb14610644578063ed9a55401461065757600080fd5b80638525a65a116100ff5780638525a65a146105185780638da5cb5b1461052b57806392b3f3011461053c57806397ead2761461054457806399cec5481461055757600080fd5b80636af66772146104cf5780636c1a3085146104e2578063715018a6146104f5578063746c5a9f146104fd5780637ca209281461050557600080fd5b80631df4ccfc116101c9578063499a28181161018d578063499a28181461047a57806352f7c9881461048d57806353aa7dcd146104a057806364a4f078146104b357806366b5f795146104bc57600080fd5b80631df4ccfc146103e25780632c7b09cb146103eb57806339d4d8b1146104415780633ac856e8146104545780633b7d09461461046757600080fd5b806311c34f911161021057806311c34f9114610352578063131edc46146103655780631439069a146103905780631631b194146103a657806316762eed146103cf57600080fd5b806303934f811461024d57806306bfa93814610262578063074cb17a1461032f5780630793613c1461033757806310809f2a1461034a575b600080fd5b61026061025b366004613586565b6106bf565b005b6102d661027036600461349a565b6001600160a01b039081166000908152606f602052604090208054600182015460028301546003840154600585015460048601546006870154600790970154959860ff861698610100909604861697948616969395928316949193918316929190911690565b60408051998a5297151560208a01526001600160a01b039687169789019790975293851660608801526080870192909252831660a086015260c0850152811660e084015216610100820152610120015b60405180910390f35b610260610a3b565b61026061034536600461366f565b610b5f565b610260610c85565b61026061036036600461350d565b610c97565b606754610378906001600160a01b031681565b6040516001600160a01b039091168152602001610326565b610398610dbe565b604051908152602001610326565b6103786103b436600461349a565b6070602052600090815260409020546001600160a01b031681565b6102606103dd366004613608565b610e40565b610398606d5481565b6103fe6103f936600461366f565b6112ad565b604080519788526020880196909652948601939093526001600160a01b03909116606085015215156080840152151560a0830152151560c082015260e001610326565b61039861044f3660046136a1565b611311565b6102606104623660046136c6565b6113e7565b61026061047536600461349a565b6118eb565b61026061048836600461366f565b611939565b61026061049b366004613761565b6119f5565b6102606104ae36600461366f565b611b6f565b610398606c5481565b6102606104ca36600461349a565b611c44565b606654610378906001600160a01b031681565b6102606104f036600461349a565b611c90565b610260611d28565b610398611d5c565b610260610513366004613783565b611d8d565b606b54610378906001600160a01b031681565b6033546001600160a01b0316610378565b610260612017565b6102606105523660046134d4565b612094565b6103986105653660046136a1565b6122f0565b606a54610378906001600160a01b031681565b6105e761058b36600461349a565b606f6020526000908152604090208054600182015460028301546003840154600485015460058601546006870154600790970154959660ff8616966001600160a01b036101009097048716969586169592831692918216911689565b60408051998a5297151560208a01526001600160a01b03968716978901979097529385166060880152608087019290925260a0860152821660c0850152811660e08401521661010082015261012001610326565b6103986107d081565b606854610378906001600160a01b031681565b606954610378906001600160a01b031681565b6103986106783660046136a1565b6123b0565b61026061068b36600461349a565b612412565b61026061069e3660046135d1565b6124ad565b6103986101f481565b606554610378906001600160a01b031681565b6001600160a01b0383166000908152606f60205260409020600181015460ff166107225760405162461bcd60e51b815260206004820152600f60248201526e506f6f6c206e6f742061637469766560881b60448201526064015b60405180910390fd5b6066546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561076657600080fd5b505afa15801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e9190613688565b6069548354604051631c57762b60e31b81526004810191909152600060248201529192506001600160a01b03169063e2bbb15890604401600060405180830381600087803b1580156107ef57600080fd5b505af1158015610803573d6000803e3d6000fd5b50506066546040516370a0823160e01b8152306004820152600093508492506001600160a01b03909116906370a082319060240160206040518083038186803b15801561084f57600080fd5b505afa158015610863573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108879190613688565b6108919190613989565b90508085156109c6576000612710606c54846108ad919061396a565b6108b79190613948565b60665460675460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b3926108ef9216908590600401613856565b602060405180830381600087803b15801561090957600080fd5b505af115801561091d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109419190613652565b5060675460405163b6b55f2560e01b8152600481018390526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b15801561098857600080fd5b505af115801561099c573d6000803e3d6000fd5b50506067546109b892506001600160a01b0316905033836128eb565b6109c28183613989565b9150505b600184015460068501546109ee916001600160a01b0361010090910481169116848489612946565b7f7edf56d31ce00a3e83f4e441e2d7fd675722c1ceb9b699c341ee1d158d4c362382610a1a8382613989565b6040805192835260208301919091520160405180910390a150505050505050565b606554604051639bc8bf7560e01b81523060048201526000916001600160a01b031690639bc8bf759060240160206040518083038186803b158015610a7f57600080fd5b505afa158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab79190613688565b90508015610b2857606560009054906101000a90046001600160a01b03166001600160a01b0316634e71d92d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b0f57600080fd5b505af1158015610b23573d6000803e3d6000fd5b505050505b6040518181527ff56ca5bef7b3b41cec7558fe59c14fd8fd059bc321a4a1473662a801842e108e906020015b60405180910390a150565b8015610c4d5760665460655460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392610b9b929116908590600401613856565b602060405180830381600087803b158015610bb557600080fd5b505af1158015610bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bed9190613652565b5060655460405163b6b55f2560e01b8152600481018390526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b158015610c3457600080fd5b505af1158015610c48573d6000803e3d6000fd5b505050505b610c55610a3b565b6040518181527f6a6f399bd745e41dfcc7ac713c8fd787618d2cb5ba6318526a21250c3854f59590602001610b54565b610c8d610a3b565b610c95612017565b565b600054610100900460ff16610cb25760005460ff1615610cb6565b303b155b610d195760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610719565b600054610100900460ff16158015610d3b576000805461ffff19166101011790555b610d436130dc565b606580546001600160a01b03199081166001600160a01b03898116919091179092556066805482168a8416179055606880548216888416179055606980548216878416179055606a8054909116918516919091179055606c829055606d8290558015610db5576000805461ff00191690555b50505050505050565b606554604051639bc8bf7560e01b81523060048201526000916001600160a01b031690639bc8bf75906024015b60206040518083038186803b158015610e0357600080fd5b505afa158015610e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3b9190613688565b905090565b6064821115610e895760405162461bcd60e51b8152602060048201526015602482015274536c697070616765206e6f7420696e2072616e676560581b6044820152606401610719565b6001600160a01b038481166000908152606f6020526040902060078101549091163314610ef85760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792068656c7065722063616e20776974686472617700000000000000006044820152606401610719565b6000610f0485876122f0565b90506000610f128288611311565b6005840154604051632770a7eb60e21b81529192506001600160a01b031690639dc29fac90610f479033908690600401613856565b600060405180830381600087803b158015610f6157600080fd5b505af1158015610f75573d6000803e3d6000fd5b505050600284015460685460405163095ea7b360e01b81526001600160a01b03928316935063095ea7b392610fb09216908590600401613856565b602060405180830381600087803b158015610fca57600080fd5b505af1158015610fde573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110029190613652565b506069548354604051630441a3e760e41b81526001600160a01b039092169163441a3e709161103e918590600401918252602082015260400190565b600060405180830381600087803b15801561105857600080fd5b505af115801561106c573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b038a1691506370a082319060240160206040518083038186803b1580156110b257600080fd5b505afa1580156110c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ea9190613688565b6068549091506001600160a01b03166309a5fca38984606461110c8b8d61396a565b6111169190613948565b6040516001600160e01b031960e086901b1681526001600160a01b0390931660048401526024830191909152604482015230606482015242608482015260a401600060405180830381600087803b15801561117057600080fd5b505af1158015611184573d6000803e3d6000fd5b505050508684600401600082825461119c9190613989565b92505081905550818460030160008282546111b79190613989565b90915550506040516370a0823160e01b815230600482015261125690869083906001600160a01b038c16906370a082319060240160206040518083038186803b15801561120357600080fd5b505afa158015611217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123b9190613688565b6112459190613989565b6001600160a01b038b1691906128eb565b876001600160a01b0316856001600160a01b03167f7715f7aec5164b178862f96610f97644e00e0abfca2a6d3f425cc7d93284856f8960405161129b91815260200190565b60405180910390a35050505050505050565b606e81815481106112bd57600080fd5b6000918252602090912060049091020180546001820154600283015460039093015491935091906001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b9091041687565b6001600160a01b038082166000908152606f602090815260408083206003810154600582015483516318160ddd60e01b81529351959692959194879491909316926318160ddd92600480840193829003018186803b15801561137257600080fd5b505afa158015611386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113aa9190613688565b90506113b6828261396a565b6113c657600093505050506113e1565b806113d1838861396a565b6113db9190613948565b93505050505b92915050565b6033546001600160a01b031633146114115760405162461bcd60e51b8152600401610719906138b0565b6001600160a01b0385166000908152606f602052604090206001015460ff16156114895760405162461bcd60e51b8152602060048201526024808201527f506f6f6c20697320616c72656164792072656769737465726564206f722061636044820152637469766560e01b6064820152608401610719565b60405163478064b160e11b815260009073__ERC20FactoryLib_______________________90638f00c962906114c59087908790600401613882565b60206040518083038186803b1580156114dd57600080fd5b505af41580156114f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151591906134b7565b606a54606654604051631d9f877360e11b81526001600160a01b0380851660048301529182166024820152929350600092911690633b3f0ee690604401602060405180830381600087803b15801561156c57600080fd5b505af1158015611580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a491906134b7565b606a54606754604051633a368cfb60e11b8152600481018c90526001600160a01b038087166024830152808c166044830152306064830152928316608482015282841660a4820152911660c482015290915060009073__PoolHelperFactoryLib__________________9063746d19f69060e40160206040518083038186803b15801561163057600080fd5b505af4158015611644573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166891906134b7565b606a5460405163266f24b760e01b8152600481018790526001600160a01b0386811660248301528581166044830152808416606483015292935091169063266f24b790608401600060405180830381600087803b1580156116c857600080fd5b505af11580156116dc573d6000803e3d6000fd5b505050506040518061012001604052808a8152602001600115158152602001896001600160a01b03168152602001886001600160a01b031681526020016000815260200160008152602001846001600160a01b03168152602001836001600160a01b03168152602001826001600160a01b0316815250606f60008a6001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816003015560a0820151816004015560c08201518160050160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e08201518160060160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101008201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050507f73cca62ab1b520c9715bf4e6c71e3e518c754e7148f65102f43289a7df0efea6886040516118d891906001600160a01b0391909116815260200190565b60405180910390a1505050505050505050565b6033546001600160a01b031633146119155760405162461bcd60e51b8152600401610719906138b0565b6001600160a01b03166000908152606f60205260409020600101805460ff19169055565b6033546001600160a01b031633146119635760405162461bcd60e51b8152600401610719906138b0565b6000606e8281548110611978576119786139fd565b906000526020600020906004020190508060020154606d600082825461199e9190613989565b909155505060038101805460ff60b01b1981169091556040516001600160a01b0390911681527f5493db1723859b50d9e2f6dbcda6da662098ea59bf451ad2a31ad62289ed54a19060200160405180910390a15050565b6033546001600160a01b03163314611a1f5760405162461bcd60e51b8152600401610719906138b0565b6000606e8381548110611a3457611a346139fd565b9060005260206000209060040201905081816001015411158015611a59575080548211155b611a9a5760405162461bcd60e51b815260206004820152601260248201527156616c7565206e6f7420696e2072616e676560701b6044820152606401610719565b6107d0816002015483606d54611ab09190613930565b611aba9190613989565b1115611afa5760405162461bcd60e51b815260206004820152600f60248201526e13585e08199959481c995858da1959608a1b6044820152606401610719565b818160020154606d54611b0d9190613989565b611b179190613930565b606d556002810182905560038101546040517f01fe2943baee27f47add82886c2200f910c749c461c9b63c5fe83901a53bdb4991611b62916001600160a01b03909116908590613856565b60405180910390a1505050565b6033546001600160a01b03163314611b995760405162461bcd60e51b8152600401610719906138b0565b6101f4811115611bdc5760405162461bcd60e51b815260206004820152600e60248201526d0acc2d8eaca40e8dede40d0d2ced60931b6044820152606401610719565b606c5481606d54611bed9190613930565b611bf79190613989565b606d8190556107d01015611c3f5760405162461bcd60e51b815260206004820152600f60248201526e13505608119959481c995858da1959608a1b6044820152606401610719565b606c55565b6033546001600160a01b03163314611c6e5760405162461bcd60e51b8152600401610719906138b0565b606b80546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b03163314611cba5760405162461bcd60e51b8152600401610719906138b0565b6067546001600160a01b031615611d065760405162461bcd60e51b815260206004820152601060248201526f1e14151408185b1c9958591e481cd95d60821b6044820152606401610719565b606780546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b03163314611d525760405162461bcd60e51b8152600401610719906138b0565b610c95600061310b565b6065546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401610deb565b6033546001600160a01b03163314611db75760405162461bcd60e51b8152600401610719906138b0565b6107d084606d54611dc89190613930565b1115611e085760405162461bcd60e51b815260206004820152600f60248201526e13585e08199959481c995858da1959608a1b6044820152606401610719565b838511158015611e185750858411155b611e595760405162461bcd60e51b815260206004820152601260248201527156616c7565206e6f7420696e2072616e676560701b6044820152606401610719565b6040805160e081018252878152602081018781529181018681526001600160a01b03808716606084019081528615156080850190815286151560a08601908152600160c08701818152606e805492830181556000908152975160049092027f9930d9ff0dee0ef5ca2f7710ea66b8f84dd0f5f5351ecffe72b952cd9db7142a81019290925597517f9930d9ff0dee0ef5ca2f7710ea66b8f84dd0f5f5351ecffe72b952cd9db7142b82015594517f9930d9ff0dee0ef5ca2f7710ea66b8f84dd0f5f5351ecffe72b952cd9db7142c86015591517f9930d9ff0dee0ef5ca2f7710ea66b8f84dd0f5f5351ecffe72b952cd9db7142d90940180549151925196511515600160b01b0260ff60b01b19971515600160a81b029790971661ffff60a81b19931515600160a01b026001600160a81b0319909316959094169490941717161792909217909155606d8054869290611fb3908490613930565b9091555050604080516001600160a01b0385168152602081018690528315159181019190915281151560608201527f6b67376f541493b7df6bcb8449800492e63d937edfb837763a818d3be5baa283906080015b60405180910390a1505050505050565b6066546040516370a0823160e01b8152306004820152610c95916001600160a01b0316906370a082319060240160206040518083038186803b15801561205c57600080fd5b505afa158015612070573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103459190613688565b6033546001600160a01b031633146120be5760405162461bcd60e51b8152600401610719906138b0565b6066546001600160a01b038381169116141561210d5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd08185d5d1a1bdc9a5e995960921b6044820152606401610719565b6001600160a01b0382166000908152606f602052604090206001015460ff161561216a5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610719565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a082319060240160206040518083038186803b1580156121ac57600080fd5b505afa1580156121c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e49190613688565b60405163095ea7b360e01b81529091506001600160a01b0384169063095ea7b3906122159085908590600401613856565b602060405180830381600087803b15801561222f57600080fd5b505af1158015612243573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122679190613652565b506040516347e7a41160e11b8152600481018290526001600160a01b038481166024830152831690638fcf482290604401602060405180830381600087803b1580156122b257600080fd5b505af11580156122c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ea9190613652565b50505050565b6001600160a01b038082166000908152606f60209081526040808320600480820154600583015484516318160ddd60e01b81529451969793969195889591909416936318160ddd93828101939192829003018186803b15801561235257600080fd5b505afa158015612366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061238a9190613688565b9050612396828261396a565b6123a5578593505050506113e1565b816113d1828861396a565b6001600160a01b038082166000908152606f60209081526040808320600480820154600583015484516318160ddd60e01b81529451969793969195889591909416936318160ddd93828101939192829003018186803b15801561137257600080fd5b6033546001600160a01b0316331461243c5760405162461bcd60e51b8152600401610719906138b0565b6001600160a01b0381166124a15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610719565b6124aa8161310b565b50565b6001600160a01b0383166000908152606f60205260409020600181015460ff1661250b5760405162461bcd60e51b815260206004820152600f60248201526e506f6f6c206e6f742061637469766560881b6044820152606401610719565b60078101546001600160a01b031633146125675760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792068656c7065722063616e206465706f7369740000000000000000006044820152606401610719565b61257c6001600160a01b038516833086613167565b60685460405163095ea7b360e01b81526001600160a01b038681169263095ea7b3926125b092909116908790600401613856565b602060405180830381600087803b1580156125ca57600080fd5b505af11580156125de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126029190613652565b50606854604051632434941d60e21b81526001600160a01b03868116600483015260248201869052306044830152426064830152909116906390d2507490608401600060405180830381600087803b15801561265d57600080fd5b505af1158015612671573d6000803e3d6000fd5b5050505060028101546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156126bb57600080fd5b505afa1580156126cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f39190613688565b600283015460695460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b39261272d9216908590600401613856565b602060405180830381600087803b15801561274757600080fd5b505af115801561275b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061277f9190613652565b506069548254604051631c57762b60e31b81526001600160a01b039092169163e2bbb158916127bb918590600401918252602082015260400190565b600060405180830381600087803b1580156127d557600080fd5b505af11580156127e9573d6000803e3d6000fd5b5050505060006127f985876122f0565b60058401546040516340c10f1960e01b81529192506001600160a01b0316906340c10f199061282e9033908590600401613856565b600060405180830381600087803b15801561284857600080fd5b505af115801561285c573d6000803e3d6000fd5b50505050848360040160008282546128749190613930565b925050819055508183600301600082825461288f9190613930565b92505081905550856001600160a01b0316846001600160a01b03167f83df459d706116d1b3f1c7b7f77cfea4c635275f5d1e1a53827f536ef48db77d876040516128db91815260200190565b60405180910390a3505050505050565b6129418363a9059cbb60e01b848460405160240161290a929190613856565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613188565b505050565b60005b606e54811015612edf576000606e8281548110612968576129686139fd565b906000526020600020906004020190508060030160169054906101000a900460ff1615612ecc5760665460028201546001600160a01b0390911690600090612710906129b4908961396a565b6129be9190613948565b6003840154909150600160a01b900460ff16612aca5760665460675460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392612a0a929116908590600401613856565b602060405180830381600087803b158015612a2457600080fd5b505af1158015612a38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a5c9190613652565b5060675460405163b6b55f2560e01b8152600481018390526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b158015612aa357600080fd5b505af1158015612ab7573d6000803e3d6000fd5b50506067546001600160a01b0316935050505b6003830154600160a81b900460ff16612de857600383015460405163095ea7b360e01b81526001600160a01b038481169263095ea7b392612b1392909116908590600401613856565b602060405180830381600087803b158015612b2d57600080fd5b505af1158015612b41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b659190613652565b5060038301546040516347e7a41160e11b8152600481018390526001600160a01b03848116602483015290911690638fcf482290604401602060405180830381600087803b158015612bb657600080fd5b505af1158015612bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bee9190613652565b50848015612c065750606b546001600160a01b031615155b15612de357606b54600384015460408051639f9106d160e01b815290516001600160a01b039384169363d2472b1b938e93911691639f9106d191600480820192602092909190829003018186803b158015612c6057600080fd5b505afa158015612c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c9891906134b7565b85858860030160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612cea57600080fd5b505afa158015612cfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d229190613688565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015293851660248501529390911660448301526064820152608481019190915260a401600060405180830381600087803b158015612d8157600080fd5b505af1158015612d95573d6000803e3d6000fd5b50505060038401546040517f6c33b8f6b4f8ba21a4621cc77c018fbb4c7663cfa25929f02dc8d36abde462c59250612dda916001600160a01b03169085908590613832565b60405180910390a15b612ebd565b600383015460405163a9059cbb60e01b81526001600160a01b038481169263a9059cbb92612e1e92909116908590600401613856565b602060405180830381600087803b158015612e3857600080fd5b505af1158015612e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e709190613652565b5060038301546040517f6c33b8f6b4f8ba21a4621cc77c018fbb4c7663cfa25929f02dc8d36abde462c591612eb4916001600160a01b039091169085908590613832565b60405180910390a15b612ec78187613989565b955050505b5080612ed7816139cc565b915050612949565b5060665460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390612f129087908690600401613856565b602060405180830381600087803b158015612f2c57600080fd5b505af1158015612f40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f649190613652565b506066546040516347e7a41160e11b8152600481018490526001600160a01b03918216602482015290851690638fcf482290604401602060405180830381600087803b158015612fb357600080fd5b505af1158015612fc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612feb9190613652565b508080156130035750606b546001600160a01b031615155b156130d5576001600160a01b038581166000818152606f602052604090819020606b54606654600480840154945163ac2ddb3b60e01b8152908101959095528516602485015260448401879052606484019290925292169063ac2ddb3b90608401600060405180830381600087803b15801561307e57600080fd5b505af1158015613092573d6000803e3d6000fd5b50506066546040517f6c33b8f6b4f8ba21a4621cc77c018fbb4c7663cfa25929f02dc8d36abde462c59350612007925088916001600160a01b0316908790613832565b5050505050565b600054610100900460ff166131035760405162461bcd60e51b8152600401610719906138e5565b610c9561325a565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6122ea846323b872dd60e01b85858560405160240161290a93929190613832565b60006131dd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661328a9092919063ffffffff16565b80519091501561294157808060200190518101906131fb9190613652565b6129415760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610719565b600054610100900460ff166132815760405162461bcd60e51b8152600401610719906138e5565b610c953361310b565b606061329984846000856132a3565b90505b9392505050565b6060824710156133045760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610719565b6001600160a01b0385163b61335b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610719565b600080866001600160a01b031685876040516133779190613816565b60006040518083038185875af1925050503d80600081146133b4576040519150601f19603f3d011682016040523d82523d6000602084013e6133b9565b606091505b50915091506133c98282866133d4565b979650505050505050565b606083156133e357508161329c565b8251156133f35782518084602001fd5b8160405162461bcd60e51b8152600401610719919061386f565b600082601f83011261341e57600080fd5b813567ffffffffffffffff8082111561343957613439613a13565b604051601f8301601f19908116603f0116810190828211818310171561346157613461613a13565b8160405283815286602085880101111561347a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156134ac57600080fd5b813561329c81613a29565b6000602082840312156134c957600080fd5b815161329c81613a29565b600080604083850312156134e757600080fd5b82356134f281613a29565b9150602083013561350281613a29565b809150509250929050565b60008060008060008060c0878903121561352657600080fd5b863561353181613a29565b9550602087013561354181613a29565b9450604087013561355181613a29565b9350606087013561356181613a29565b9250608087013561357181613a29565b8092505060a087013590509295509295509295565b60008060006060848603121561359b57600080fd5b83356135a681613a29565b925060208401356135b681613a3e565b915060408401356135c681613a3e565b809150509250925092565b6000806000606084860312156135e657600080fd5b83356135f181613a29565b92506020840135915060408401356135c681613a29565b6000806000806080858703121561361e57600080fd5b843561362981613a29565b93506020850135925060408501359150606085013561364781613a29565b939692955090935050565b60006020828403121561366457600080fd5b815161329c81613a3e565b60006020828403121561368157600080fd5b5035919050565b60006020828403121561369a57600080fd5b5051919050565b600080604083850312156136b457600080fd5b82359150602083013561350281613a29565b60008060008060008060c087890312156136df57600080fd5b8635955060208701356136f181613a29565b9450604087013561370181613a29565b9350606087013567ffffffffffffffff8082111561371e57600080fd5b61372a8a838b0161340d565b9450608089013591508082111561374057600080fd5b5061374d89828a0161340d565b92505060a087013590509295509295509295565b6000806040838503121561377457600080fd5b50508035926020909101359150565b60008060008060008060c0878903121561379c57600080fd5b86359550602087013594506040870135935060608701356137bc81613a29565b925060808701356137cc81613a3e565b915060a08701356137dc81613a3e565b809150509295509295509295565b600081518084526138028160208601602086016139a0565b601f01601f19169290920160200192915050565b600082516138288184602087016139a0565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60208152600061329c60208301846137ea565b60408152600061389560408301856137ea565b82810360208401526138a781856137ea565b95945050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115613943576139436139e7565b500190565b60008261396557634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615613984576139846139e7565b500290565b60008282101561399b5761399b6139e7565b500390565b60005b838110156139bb5781810151838201526020016139a3565b838111156122ea5750506000910152565b60006000198214156139e0576139e06139e7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146124aa57600080fd5b80151581146124aa57600080fdfea2646970667358221220ea7247c2d2f48c5ef097ed83245962cbb93cdb13a6ddccb5df530c947edc5ba464736f6c63430008070033",
  "bytecodeSha1": "abec3e53b7b9871fd46ec960a4167be1e562b386",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "MainStaking",
  "coverageMap": {
    "branches": {
      "10": {},
      "12": {
        "MainStaking.addFee": {
          "136": [3576, 3603, true],
          "137": [3641, 3653, false],
          "138": [3657, 3669, true]
        },
        "MainStaking.claimPTP": {
          "125": [11681, 11691, false]
        },
        "MainStaking.deposit": {
          "141": [5290, 5307, true],
          "142": [5345, 5374, true]
        },
        "MainStaking.harvest": {
          "124": [6510, 6527, true]
        },
        "MainStaking.registerPool": {
          "129": [14047, 14078, true]
        },
        "MainStaking.sendRewards": {
          "143": [7651, 7667, false],
          "144": [7816, 7829, false],
          "145": [8022, 8039, false],
          "146": [8298, 8305, false],
          "147": [9168, 9175, false]
        },
        "MainStaking.sendTokenRewards": {
          "139": [9653, 9666, true],
          "140": [9703, 9726, true]
        },
        "MainStaking.setCallerFee": {
          "133": [4778, 4801, true],
          "134": [4968, 4987, true]
        },
        "MainStaking.setFee": {
          "130": [4207, 4229, false],
          "131": [4233, 4255, true],
          "132": [4317, 4356, true]
        },
        "MainStaking.setXPTP": {
          "135": [3204, 3222, true]
        },
        "MainStaking.stakePTP": {
          "126": [11264, 11274, false]
        },
        "MainStaking.withdraw": {
          "127": [10136, 10152, true],
          "128": [10242, 10271, true]
        }
      },
      "15": {},
      "16": {},
      "18": {},
      "19": {
        "MainStaking.__MainStaking_init": {
          "151": [2357, 2370, true],
          "152": [2357, 2405, true]
        },
        "OwnableUpgradeable.__Ownable_init_unchained": {
          "153": [2961, 2974, true]
        }
      },
      "20": {
        "OwnableUpgradeable.transferOwnership": {
          "154": [2260, 2282, true]
        }
      },
      "23": {
        "Address.functionCallWithValue": {
          "148": [5130, 5160, true]
        },
        "Address.verifyCallResult": {
          "149": [7720, 7727, false],
          "150": [7861, 7882, false]
        }
      },
      "25": {},
      "29": {
        "SafeERC20._callOptionalReturn": {
          "155": [3736, 3757, false],
          "156": [3820, 3850, true]
        }
      },
      "34": {},
      "35": {},
      "36": {},
      "39": {},
      "40": {},
      "41": {},
      "42": {},
      "43": {},
      "44": {},
      "45": {}
    },
    "statements": {
      "10": {},
      "12": {
        "MainStaking.__MainStaking_init": {
          "27": [2691, 2707],
          "28": [2717, 2743],
          "29": [2789, 2799],
          "30": [2880, 2910],
          "31": [2994, 3026],
          "32": [3036, 3058],
          "33": [3068, 3091],
          "34": [3101, 3122]
        },
        "MainStaking.addFee": {
          "71": [3568, 3623],
          "72": [3633, 3692],
          "73": [3702, 3977],
          "74": [3987, 4004],
          "75": [4014, 4054]
        },
        "MainStaking.claimPTP": {
          "18": [11707, 11739],
          "19": [11759, 11782]
        },
        "MainStaking.claimdAndStakePTP": {
          "24": [11843, 11853],
          "25": [11863, 11876]
        },
        "MainStaking.deposit": {
          "85": [5282, 5327],
          "86": [5337, 5402],
          "87": [5412, 5473],
          "88": [5528, 5572],
          "89": [5582, 5724],
          "90": [5897, 5959],
          "91": [5969, 6034],
          "92": [6151, 6217],
          "93": [6227, 6250],
          "94": [6260, 6289],
          "95": [6299, 6337]
        },
        "MainStaking.getLPTokensForShares": {
          "46": [12663, 12671],
          "47": [12691, 12736]
        },
        "MainStaking.getPoolInfo": {
          "0": [15669, 15688],
          "1": [15698, 15727],
          "2": [15770, 15794],
          "3": [15804, 15829],
          "4": [15839, 15871],
          "5": [15881, 15902],
          "6": [15912, 15945],
          "7": [15955, 15980],
          "8": [15737, 15760]
        },
        "MainStaking.getSharesForDepositTokens": {
          "81": [13104, 13117],
          "82": [13137, 13182]
        },
        "MainStaking.getStakedPtp": {
          "35": [11955, 12014]
        },
        "MainStaking.getVePtp": {
          "70": [12089, 12140]
        },
        "MainStaking.harvest": {
          "10": [6502, 6547],
          "11": [6627, 6683],
          "12": [6951, 6987],
          "13": [7001, 7031],
          "14": [7045, 7093],
          "15": [7107, 7138],
          "16": [7158, 7302],
          "17": [7312, 7358]
        },
        "MainStaking.registerPool": {
          "49": [14026, 14140],
          "50": [14739, 14894],
          "51": [14904, 15216],
          "52": [15226, 15248]
        },
        "MainStaking.removeFee": {
          "54": [4608, 4629],
          "55": [4639, 4659],
          "56": [4669, 4691]
        },
        "MainStaking.removePool": {
          "53": [16057, 16086]
        },
        "MainStaking.sendRewards": {
          "97": [7853, 7889],
          "98": [7911, 7941],
          "99": [7963, 7981],
          "100": [8063, 8113],
          "101": [8135, 8272],
          "102": [8364, 8685],
          "103": [8711, 8764],
          "104": [8833, 8883],
          "105": [8905, 8958],
          "106": [8994, 9015],
          "107": [7580, 7583],
          "108": [9049, 9088],
          "109": [9098, 9154],
          "110": [9272, 9427],
          "111": [9441, 9483]
        },
        "MainStaking.sendTokenRewards": {
          "77": [9645, 9685],
          "78": [9695, 9745],
          "79": [9821, 9862],
          "80": [9872, 9930]
        },
        "MainStaking.setCallerFee": {
          "62": [4770, 4820],
          "63": [4910, 4950],
          "64": [4960, 5007],
          "65": [5017, 5035]
        },
        "MainStaking.setComputeAPR": {
          "66": [3351, 3375]
        },
        "MainStaking.setFee": {
          "57": [4186, 4299],
          "58": [4309, 4376],
          "59": [4386, 4425],
          "60": [4435, 4452],
          "61": [4462, 4488]
        },
        "MainStaking.setXPTP": {
          "67": [3196, 3243],
          "68": [3253, 3265]
        },
        "MainStaking.stakeAllPtp": {
          "76": [11502, 11548]
        },
        "MainStaking.stakePTP": {
          "20": [11290, 11330],
          "21": [11344, 11384],
          "22": [11404, 11414],
          "23": [11424, 11449]
        },
        "MainStaking.withdraw": {
          "36": [10128, 10178],
          "37": [10234, 10300],
          "38": [10454, 10514],
          "39": [10524, 10583],
          "40": [10593, 10657],
          "41": [10740, 10938],
          "42": [10949, 10973],
          "43": [10983, 11010],
          "44": [11021, 11146],
          "45": [11156, 11196]
        }
      },
      "15": {},
      "16": {},
      "18": {
        "ContextUpgradeable._msgSender": {
          "48": [900, 917]
        }
      },
      "19": {
        "Initializable._isConstructor": {
          "26": [3110, 3162]
        }
      },
      "20": {
        "OwnableUpgradeable.__Ownable_init": {
          "112": [1052, 1078]
        },
        "OwnableUpgradeable.__Ownable_init_unchained": {
          "117": [1163, 1195]
        },
        "OwnableUpgradeable._transferOwnership": {
          "113": [2618, 2661],
          "114": [2671, 2688]
        },
        "OwnableUpgradeable.owner": {
          "9": [1343, 1356]
        },
        "OwnableUpgradeable.renounceOwnership": {
          "69": [1973, 2003]
        },
        "OwnableUpgradeable.transferOwnership": {
          "83": [2239, 2346],
          "84": [2356, 2384]
        }
      },
      "23": {
        "Address.functionCall": {
          "118": [4003, 4062]
        },
        "Address.functionCallWithValue": {
          "119": [5122, 5203],
          "120": [5213, 5273],
          "121": [5367, 5425]
        },
        "Address.verifyCallResult": {
          "122": [7743, 7760],
          "123": [8187, 8207]
        }
      },
      "25": {},
      "29": {
        "SafeERC20._callOptionalReturn": {
          "116": [3812, 3897]
        },
        "SafeERC20.safeTransfer": {
          "96": [814, 900]
        },
        "SafeERC20.safeTransferFrom": {
          "115": [1051, 1147]
        }
      },
      "34": {},
      "35": {},
      "36": {},
      "39": {},
      "40": {},
      "41": {},
      "42": {},
      "43": {},
      "44": {},
      "45": {}
    }
  },
  "dependencies": [
    "Address",
    "ContextUpgradeable",
    "ERC20",
    "ERC20FactoryLib",
    "IBaseRewardPool",
    "IComputeAPR",
    "IERC20",
    "IMainStaking",
    "IMasterChefVTX",
    "IMasterPlatypus",
    "IPTPStaking",
    "IPoolHelper",
    "IStableStaking",
    "Initializable",
    "IxPTP",
    "OwnableUpgradeable",
    "PoolHelper",
    "PoolHelperFactoryLib",
    "SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102485760003560e01c80636af667721161013b578063a296454f116100b8578063f08060881161007c578063f08060881461066a578063f2fde38b1461067d578063f45346dc14610690578063f6a23320146106a3578063ff4de86f146106ac57600080fd5b8063a296454f1461056a578063a4063dbc1461057d578063bc063e1a1461063b578063dee91fcb14610644578063ed9a55401461065757600080fd5b80638525a65a116100ff5780638525a65a146105185780638da5cb5b1461052b57806392b3f3011461053c57806397ead2761461054457806399cec5481461055757600080fd5b80636af66772146104cf5780636c1a3085146104e2578063715018a6146104f5578063746c5a9f146104fd5780637ca209281461050557600080fd5b80631df4ccfc116101c9578063499a28181161018d578063499a28181461047a57806352f7c9881461048d57806353aa7dcd146104a057806364a4f078146104b357806366b5f795146104bc57600080fd5b80631df4ccfc146103e25780632c7b09cb146103eb57806339d4d8b1146104415780633ac856e8146104545780633b7d09461461046757600080fd5b806311c34f911161021057806311c34f9114610352578063131edc46146103655780631439069a146103905780631631b194146103a657806316762eed146103cf57600080fd5b806303934f811461024d57806306bfa93814610262578063074cb17a1461032f5780630793613c1461033757806310809f2a1461034a575b600080fd5b61026061025b366004613586565b6106bf565b005b6102d661027036600461349a565b6001600160a01b039081166000908152606f602052604090208054600182015460028301546003840154600585015460048601546006870154600790970154959860ff861698610100909604861697948616969395928316949193918316929190911690565b60408051998a5297151560208a01526001600160a01b039687169789019790975293851660608801526080870192909252831660a086015260c0850152811660e084015216610100820152610120015b60405180910390f35b610260610a3b565b61026061034536600461366f565b610b5f565b610260610c85565b61026061036036600461350d565b610c97565b606754610378906001600160a01b031681565b6040516001600160a01b039091168152602001610326565b610398610dbe565b604051908152602001610326565b6103786103b436600461349a565b6070602052600090815260409020546001600160a01b031681565b6102606103dd366004613608565b610e40565b610398606d5481565b6103fe6103f936600461366f565b6112ad565b604080519788526020880196909652948601939093526001600160a01b03909116606085015215156080840152151560a0830152151560c082015260e001610326565b61039861044f3660046136a1565b611311565b6102606104623660046136c6565b6113e7565b61026061047536600461349a565b6118eb565b61026061048836600461366f565b611939565b61026061049b366004613761565b6119f5565b6102606104ae36600461366f565b611b6f565b610398606c5481565b6102606104ca36600461349a565b611c44565b606654610378906001600160a01b031681565b6102606104f036600461349a565b611c90565b610260611d28565b610398611d5c565b610260610513366004613783565b611d8d565b606b54610378906001600160a01b031681565b6033546001600160a01b0316610378565b610260612017565b6102606105523660046134d4565b612094565b6103986105653660046136a1565b6122f0565b606a54610378906001600160a01b031681565b6105e761058b36600461349a565b606f6020526000908152604090208054600182015460028301546003840154600485015460058601546006870154600790970154959660ff8616966001600160a01b036101009097048716969586169592831692918216911689565b60408051998a5297151560208a01526001600160a01b03968716978901979097529385166060880152608087019290925260a0860152821660c0850152811660e08401521661010082015261012001610326565b6103986107d081565b606854610378906001600160a01b031681565b606954610378906001600160a01b031681565b6103986106783660046136a1565b6123b0565b61026061068b36600461349a565b612412565b61026061069e3660046135d1565b6124ad565b6103986101f481565b606554610378906001600160a01b031681565b6001600160a01b0383166000908152606f60205260409020600181015460ff166107225760405162461bcd60e51b815260206004820152600f60248201526e506f6f6c206e6f742061637469766560881b60448201526064015b60405180910390fd5b6066546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561076657600080fd5b505afa15801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e9190613688565b6069548354604051631c57762b60e31b81526004810191909152600060248201529192506001600160a01b03169063e2bbb15890604401600060405180830381600087803b1580156107ef57600080fd5b505af1158015610803573d6000803e3d6000fd5b50506066546040516370a0823160e01b8152306004820152600093508492506001600160a01b03909116906370a082319060240160206040518083038186803b15801561084f57600080fd5b505afa158015610863573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108879190613688565b6108919190613989565b90508085156109c6576000612710606c54846108ad919061396a565b6108b79190613948565b60665460675460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b3926108ef9216908590600401613856565b602060405180830381600087803b15801561090957600080fd5b505af115801561091d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109419190613652565b5060675460405163b6b55f2560e01b8152600481018390526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b15801561098857600080fd5b505af115801561099c573d6000803e3d6000fd5b50506067546109b892506001600160a01b0316905033836128eb565b6109c28183613989565b9150505b600184015460068501546109ee916001600160a01b0361010090910481169116848489612946565b7f7edf56d31ce00a3e83f4e441e2d7fd675722c1ceb9b699c341ee1d158d4c362382610a1a8382613989565b6040805192835260208301919091520160405180910390a150505050505050565b606554604051639bc8bf7560e01b81523060048201526000916001600160a01b031690639bc8bf759060240160206040518083038186803b158015610a7f57600080fd5b505afa158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab79190613688565b90508015610b2857606560009054906101000a90046001600160a01b03166001600160a01b0316634e71d92d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b0f57600080fd5b505af1158015610b23573d6000803e3d6000fd5b505050505b6040518181527ff56ca5bef7b3b41cec7558fe59c14fd8fd059bc321a4a1473662a801842e108e906020015b60405180910390a150565b8015610c4d5760665460655460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392610b9b929116908590600401613856565b602060405180830381600087803b158015610bb557600080fd5b505af1158015610bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bed9190613652565b5060655460405163b6b55f2560e01b8152600481018390526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b158015610c3457600080fd5b505af1158015610c48573d6000803e3d6000fd5b505050505b610c55610a3b565b6040518181527f6a6f399bd745e41dfcc7ac713c8fd787618d2cb5ba6318526a21250c3854f59590602001610b54565b610c8d610a3b565b610c95612017565b565b600054610100900460ff16610cb25760005460ff1615610cb6565b303b155b610d195760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610719565b600054610100900460ff16158015610d3b576000805461ffff19166101011790555b610d436130dc565b606580546001600160a01b03199081166001600160a01b03898116919091179092556066805482168a8416179055606880548216888416179055606980548216878416179055606a8054909116918516919091179055606c829055606d8290558015610db5576000805461ff00191690555b50505050505050565b606554604051639bc8bf7560e01b81523060048201526000916001600160a01b031690639bc8bf75906024015b60206040518083038186803b158015610e0357600080fd5b505afa158015610e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3b9190613688565b905090565b6064821115610e895760405162461bcd60e51b8152602060048201526015602482015274536c697070616765206e6f7420696e2072616e676560581b6044820152606401610719565b6001600160a01b038481166000908152606f6020526040902060078101549091163314610ef85760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792068656c7065722063616e20776974686472617700000000000000006044820152606401610719565b6000610f0485876122f0565b90506000610f128288611311565b6005840154604051632770a7eb60e21b81529192506001600160a01b031690639dc29fac90610f479033908690600401613856565b600060405180830381600087803b158015610f6157600080fd5b505af1158015610f75573d6000803e3d6000fd5b505050600284015460685460405163095ea7b360e01b81526001600160a01b03928316935063095ea7b392610fb09216908590600401613856565b602060405180830381600087803b158015610fca57600080fd5b505af1158015610fde573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110029190613652565b506069548354604051630441a3e760e41b81526001600160a01b039092169163441a3e709161103e918590600401918252602082015260400190565b600060405180830381600087803b15801561105857600080fd5b505af115801561106c573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b038a1691506370a082319060240160206040518083038186803b1580156110b257600080fd5b505afa1580156110c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ea9190613688565b6068549091506001600160a01b03166309a5fca38984606461110c8b8d61396a565b6111169190613948565b6040516001600160e01b031960e086901b1681526001600160a01b0390931660048401526024830191909152604482015230606482015242608482015260a401600060405180830381600087803b15801561117057600080fd5b505af1158015611184573d6000803e3d6000fd5b505050508684600401600082825461119c9190613989565b92505081905550818460030160008282546111b79190613989565b90915550506040516370a0823160e01b815230600482015261125690869083906001600160a01b038c16906370a082319060240160206040518083038186803b15801561120357600080fd5b505afa158015611217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123b9190613688565b6112459190613989565b6001600160a01b038b1691906128eb565b876001600160a01b0316856001600160a01b03167f7715f7aec5164b178862f96610f97644e00e0abfca2a6d3f425cc7d93284856f8960405161129b91815260200190565b60405180910390a35050505050505050565b606e81815481106112bd57600080fd5b6000918252602090912060049091020180546001820154600283015460039093015491935091906001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b9091041687565b6001600160a01b038082166000908152606f602090815260408083206003810154600582015483516318160ddd60e01b81529351959692959194879491909316926318160ddd92600480840193829003018186803b15801561137257600080fd5b505afa158015611386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113aa9190613688565b90506113b6828261396a565b6113c657600093505050506113e1565b806113d1838861396a565b6113db9190613948565b93505050505b92915050565b6033546001600160a01b031633146114115760405162461bcd60e51b8152600401610719906138b0565b6001600160a01b0385166000908152606f602052604090206001015460ff16156114895760405162461bcd60e51b8152602060048201526024808201527f506f6f6c20697320616c72656164792072656769737465726564206f722061636044820152637469766560e01b6064820152608401610719565b60405163478064b160e11b815260009073__$7b593376e7848b870d08105148d53f5869$__90638f00c962906114c59087908790600401613882565b60206040518083038186803b1580156114dd57600080fd5b505af41580156114f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151591906134b7565b606a54606654604051631d9f877360e11b81526001600160a01b0380851660048301529182166024820152929350600092911690633b3f0ee690604401602060405180830381600087803b15801561156c57600080fd5b505af1158015611580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a491906134b7565b606a54606754604051633a368cfb60e11b8152600481018c90526001600160a01b038087166024830152808c166044830152306064830152928316608482015282841660a4820152911660c482015290915060009073__$7e9ee1ebfdc6e1292a0ad7dbfc0ee3f94b$__9063746d19f69060e40160206040518083038186803b15801561163057600080fd5b505af4158015611644573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166891906134b7565b606a5460405163266f24b760e01b8152600481018790526001600160a01b0386811660248301528581166044830152808416606483015292935091169063266f24b790608401600060405180830381600087803b1580156116c857600080fd5b505af11580156116dc573d6000803e3d6000fd5b505050506040518061012001604052808a8152602001600115158152602001896001600160a01b03168152602001886001600160a01b031681526020016000815260200160008152602001846001600160a01b03168152602001836001600160a01b03168152602001826001600160a01b0316815250606f60008a6001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816003015560a0820151816004015560c08201518160050160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e08201518160060160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101008201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050507f73cca62ab1b520c9715bf4e6c71e3e518c754e7148f65102f43289a7df0efea6886040516118d891906001600160a01b0391909116815260200190565b60405180910390a1505050505050505050565b6033546001600160a01b031633146119155760405162461bcd60e51b8152600401610719906138b0565b6001600160a01b03166000908152606f60205260409020600101805460ff19169055565b6033546001600160a01b031633146119635760405162461bcd60e51b8152600401610719906138b0565b6000606e8281548110611978576119786139fd565b906000526020600020906004020190508060020154606d600082825461199e9190613989565b909155505060038101805460ff60b01b1981169091556040516001600160a01b0390911681527f5493db1723859b50d9e2f6dbcda6da662098ea59bf451ad2a31ad62289ed54a19060200160405180910390a15050565b6033546001600160a01b03163314611a1f5760405162461bcd60e51b8152600401610719906138b0565b6000606e8381548110611a3457611a346139fd565b9060005260206000209060040201905081816001015411158015611a59575080548211155b611a9a5760405162461bcd60e51b815260206004820152601260248201527156616c7565206e6f7420696e2072616e676560701b6044820152606401610719565b6107d0816002015483606d54611ab09190613930565b611aba9190613989565b1115611afa5760405162461bcd60e51b815260206004820152600f60248201526e13585e08199959481c995858da1959608a1b6044820152606401610719565b818160020154606d54611b0d9190613989565b611b179190613930565b606d556002810182905560038101546040517f01fe2943baee27f47add82886c2200f910c749c461c9b63c5fe83901a53bdb4991611b62916001600160a01b03909116908590613856565b60405180910390a1505050565b6033546001600160a01b03163314611b995760405162461bcd60e51b8152600401610719906138b0565b6101f4811115611bdc5760405162461bcd60e51b815260206004820152600e60248201526d0acc2d8eaca40e8dede40d0d2ced60931b6044820152606401610719565b606c5481606d54611bed9190613930565b611bf79190613989565b606d8190556107d01015611c3f5760405162461bcd60e51b815260206004820152600f60248201526e13505608119959481c995858da1959608a1b6044820152606401610719565b606c55565b6033546001600160a01b03163314611c6e5760405162461bcd60e51b8152600401610719906138b0565b606b80546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b03163314611cba5760405162461bcd60e51b8152600401610719906138b0565b6067546001600160a01b031615611d065760405162461bcd60e51b815260206004820152601060248201526f1e14151408185b1c9958591e481cd95d60821b6044820152606401610719565b606780546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b03163314611d525760405162461bcd60e51b8152600401610719906138b0565b610c95600061310b565b6065546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401610deb565b6033546001600160a01b03163314611db75760405162461bcd60e51b8152600401610719906138b0565b6107d084606d54611dc89190613930565b1115611e085760405162461bcd60e51b815260206004820152600f60248201526e13585e08199959481c995858da1959608a1b6044820152606401610719565b838511158015611e185750858411155b611e595760405162461bcd60e51b815260206004820152601260248201527156616c7565206e6f7420696e2072616e676560701b6044820152606401610719565b6040805160e081018252878152602081018781529181018681526001600160a01b03808716606084019081528615156080850190815286151560a08601908152600160c08701818152606e805492830181556000908152975160049092027f9930d9ff0dee0ef5ca2f7710ea66b8f84dd0f5f5351ecffe72b952cd9db7142a81019290925597517f9930d9ff0dee0ef5ca2f7710ea66b8f84dd0f5f5351ecffe72b952cd9db7142b82015594517f9930d9ff0dee0ef5ca2f7710ea66b8f84dd0f5f5351ecffe72b952cd9db7142c86015591517f9930d9ff0dee0ef5ca2f7710ea66b8f84dd0f5f5351ecffe72b952cd9db7142d90940180549151925196511515600160b01b0260ff60b01b19971515600160a81b029790971661ffff60a81b19931515600160a01b026001600160a81b0319909316959094169490941717161792909217909155606d8054869290611fb3908490613930565b9091555050604080516001600160a01b0385168152602081018690528315159181019190915281151560608201527f6b67376f541493b7df6bcb8449800492e63d937edfb837763a818d3be5baa283906080015b60405180910390a1505050505050565b6066546040516370a0823160e01b8152306004820152610c95916001600160a01b0316906370a082319060240160206040518083038186803b15801561205c57600080fd5b505afa158015612070573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103459190613688565b6033546001600160a01b031633146120be5760405162461bcd60e51b8152600401610719906138b0565b6066546001600160a01b038381169116141561210d5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd08185d5d1a1bdc9a5e995960921b6044820152606401610719565b6001600160a01b0382166000908152606f602052604090206001015460ff161561216a5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610719565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a082319060240160206040518083038186803b1580156121ac57600080fd5b505afa1580156121c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e49190613688565b60405163095ea7b360e01b81529091506001600160a01b0384169063095ea7b3906122159085908590600401613856565b602060405180830381600087803b15801561222f57600080fd5b505af1158015612243573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122679190613652565b506040516347e7a41160e11b8152600481018290526001600160a01b038481166024830152831690638fcf482290604401602060405180830381600087803b1580156122b257600080fd5b505af11580156122c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ea9190613652565b50505050565b6001600160a01b038082166000908152606f60209081526040808320600480820154600583015484516318160ddd60e01b81529451969793969195889591909416936318160ddd93828101939192829003018186803b15801561235257600080fd5b505afa158015612366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061238a9190613688565b9050612396828261396a565b6123a5578593505050506113e1565b816113d1828861396a565b6001600160a01b038082166000908152606f60209081526040808320600480820154600583015484516318160ddd60e01b81529451969793969195889591909416936318160ddd93828101939192829003018186803b15801561137257600080fd5b6033546001600160a01b0316331461243c5760405162461bcd60e51b8152600401610719906138b0565b6001600160a01b0381166124a15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610719565b6124aa8161310b565b50565b6001600160a01b0383166000908152606f60205260409020600181015460ff1661250b5760405162461bcd60e51b815260206004820152600f60248201526e506f6f6c206e6f742061637469766560881b6044820152606401610719565b60078101546001600160a01b031633146125675760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792068656c7065722063616e206465706f7369740000000000000000006044820152606401610719565b61257c6001600160a01b038516833086613167565b60685460405163095ea7b360e01b81526001600160a01b038681169263095ea7b3926125b092909116908790600401613856565b602060405180830381600087803b1580156125ca57600080fd5b505af11580156125de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126029190613652565b50606854604051632434941d60e21b81526001600160a01b03868116600483015260248201869052306044830152426064830152909116906390d2507490608401600060405180830381600087803b15801561265d57600080fd5b505af1158015612671573d6000803e3d6000fd5b5050505060028101546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156126bb57600080fd5b505afa1580156126cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f39190613688565b600283015460695460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b39261272d9216908590600401613856565b602060405180830381600087803b15801561274757600080fd5b505af115801561275b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061277f9190613652565b506069548254604051631c57762b60e31b81526001600160a01b039092169163e2bbb158916127bb918590600401918252602082015260400190565b600060405180830381600087803b1580156127d557600080fd5b505af11580156127e9573d6000803e3d6000fd5b5050505060006127f985876122f0565b60058401546040516340c10f1960e01b81529192506001600160a01b0316906340c10f199061282e9033908590600401613856565b600060405180830381600087803b15801561284857600080fd5b505af115801561285c573d6000803e3d6000fd5b50505050848360040160008282546128749190613930565b925050819055508183600301600082825461288f9190613930565b92505081905550856001600160a01b0316846001600160a01b03167f83df459d706116d1b3f1c7b7f77cfea4c635275f5d1e1a53827f536ef48db77d876040516128db91815260200190565b60405180910390a3505050505050565b6129418363a9059cbb60e01b848460405160240161290a929190613856565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613188565b505050565b60005b606e54811015612edf576000606e8281548110612968576129686139fd565b906000526020600020906004020190508060030160169054906101000a900460ff1615612ecc5760665460028201546001600160a01b0390911690600090612710906129b4908961396a565b6129be9190613948565b6003840154909150600160a01b900460ff16612aca5760665460675460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392612a0a929116908590600401613856565b602060405180830381600087803b158015612a2457600080fd5b505af1158015612a38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a5c9190613652565b5060675460405163b6b55f2560e01b8152600481018390526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b158015612aa357600080fd5b505af1158015612ab7573d6000803e3d6000fd5b50506067546001600160a01b0316935050505b6003830154600160a81b900460ff16612de857600383015460405163095ea7b360e01b81526001600160a01b038481169263095ea7b392612b1392909116908590600401613856565b602060405180830381600087803b158015612b2d57600080fd5b505af1158015612b41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b659190613652565b5060038301546040516347e7a41160e11b8152600481018390526001600160a01b03848116602483015290911690638fcf482290604401602060405180830381600087803b158015612bb657600080fd5b505af1158015612bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bee9190613652565b50848015612c065750606b546001600160a01b031615155b15612de357606b54600384015460408051639f9106d160e01b815290516001600160a01b039384169363d2472b1b938e93911691639f9106d191600480820192602092909190829003018186803b158015612c6057600080fd5b505afa158015612c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c9891906134b7565b85858860030160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612cea57600080fd5b505afa158015612cfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d229190613688565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015293851660248501529390911660448301526064820152608481019190915260a401600060405180830381600087803b158015612d8157600080fd5b505af1158015612d95573d6000803e3d6000fd5b50505060038401546040517f6c33b8f6b4f8ba21a4621cc77c018fbb4c7663cfa25929f02dc8d36abde462c59250612dda916001600160a01b03169085908590613832565b60405180910390a15b612ebd565b600383015460405163a9059cbb60e01b81526001600160a01b038481169263a9059cbb92612e1e92909116908590600401613856565b602060405180830381600087803b158015612e3857600080fd5b505af1158015612e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e709190613652565b5060038301546040517f6c33b8f6b4f8ba21a4621cc77c018fbb4c7663cfa25929f02dc8d36abde462c591612eb4916001600160a01b039091169085908590613832565b60405180910390a15b612ec78187613989565b955050505b5080612ed7816139cc565b915050612949565b5060665460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390612f129087908690600401613856565b602060405180830381600087803b158015612f2c57600080fd5b505af1158015612f40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f649190613652565b506066546040516347e7a41160e11b8152600481018490526001600160a01b03918216602482015290851690638fcf482290604401602060405180830381600087803b158015612fb357600080fd5b505af1158015612fc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612feb9190613652565b508080156130035750606b546001600160a01b031615155b156130d5576001600160a01b038581166000818152606f602052604090819020606b54606654600480840154945163ac2ddb3b60e01b8152908101959095528516602485015260448401879052606484019290925292169063ac2ddb3b90608401600060405180830381600087803b15801561307e57600080fd5b505af1158015613092573d6000803e3d6000fd5b50506066546040517f6c33b8f6b4f8ba21a4621cc77c018fbb4c7663cfa25929f02dc8d36abde462c59350612007925088916001600160a01b0316908790613832565b5050505050565b600054610100900460ff166131035760405162461bcd60e51b8152600401610719906138e5565b610c9561325a565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6122ea846323b872dd60e01b85858560405160240161290a93929190613832565b60006131dd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661328a9092919063ffffffff16565b80519091501561294157808060200190518101906131fb9190613652565b6129415760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610719565b600054610100900460ff166132815760405162461bcd60e51b8152600401610719906138e5565b610c953361310b565b606061329984846000856132a3565b90505b9392505050565b6060824710156133045760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610719565b6001600160a01b0385163b61335b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610719565b600080866001600160a01b031685876040516133779190613816565b60006040518083038185875af1925050503d80600081146133b4576040519150601f19603f3d011682016040523d82523d6000602084013e6133b9565b606091505b50915091506133c98282866133d4565b979650505050505050565b606083156133e357508161329c565b8251156133f35782518084602001fd5b8160405162461bcd60e51b8152600401610719919061386f565b600082601f83011261341e57600080fd5b813567ffffffffffffffff8082111561343957613439613a13565b604051601f8301601f19908116603f0116810190828211818310171561346157613461613a13565b8160405283815286602085880101111561347a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156134ac57600080fd5b813561329c81613a29565b6000602082840312156134c957600080fd5b815161329c81613a29565b600080604083850312156134e757600080fd5b82356134f281613a29565b9150602083013561350281613a29565b809150509250929050565b60008060008060008060c0878903121561352657600080fd5b863561353181613a29565b9550602087013561354181613a29565b9450604087013561355181613a29565b9350606087013561356181613a29565b9250608087013561357181613a29565b8092505060a087013590509295509295509295565b60008060006060848603121561359b57600080fd5b83356135a681613a29565b925060208401356135b681613a3e565b915060408401356135c681613a3e565b809150509250925092565b6000806000606084860312156135e657600080fd5b83356135f181613a29565b92506020840135915060408401356135c681613a29565b6000806000806080858703121561361e57600080fd5b843561362981613a29565b93506020850135925060408501359150606085013561364781613a29565b939692955090935050565b60006020828403121561366457600080fd5b815161329c81613a3e565b60006020828403121561368157600080fd5b5035919050565b60006020828403121561369a57600080fd5b5051919050565b600080604083850312156136b457600080fd5b82359150602083013561350281613a29565b60008060008060008060c087890312156136df57600080fd5b8635955060208701356136f181613a29565b9450604087013561370181613a29565b9350606087013567ffffffffffffffff8082111561371e57600080fd5b61372a8a838b0161340d565b9450608089013591508082111561374057600080fd5b5061374d89828a0161340d565b92505060a087013590509295509295509295565b6000806040838503121561377457600080fd5b50508035926020909101359150565b60008060008060008060c0878903121561379c57600080fd5b86359550602087013594506040870135935060608701356137bc81613a29565b925060808701356137cc81613a3e565b915060a08701356137dc81613a3e565b809150509295509295509295565b600081518084526138028160208601602086016139a0565b601f01601f19169290920160200192915050565b600082516138288184602087016139a0565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60208152600061329c60208301846137ea565b60408152600061389560408301856137ea565b82810360208401526138a781856137ea565b95945050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115613943576139436139e7565b500190565b60008261396557634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615613984576139846139e7565b500290565b60008282101561399b5761399b6139e7565b500390565b60005b838110156139bb5781810151838201526020016139a3565b838111156122ea5750506000910152565b60006000198214156139e0576139e06139e7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146124aa57600080fd5b80151581146124aa57600080fdfea2646970667358221220ea7247c2d2f48c5ef097ed83245962cbb93cdb13a6ddccb5df530c947edc5ba464736f6c63430008070033",
  "deployedSourceMap": "593:15534:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6350:1015;;;;;;:::i;:::-;;:::i;:::-;;15261:726;;;;;;:::i;:::-;-1:-1:-1;;;;;15644:15:12;;;15360:11;15644:15;;;:5;:15;;;;;15675:13;;15709:18;;;;15775:19;;;;15813:16;;;;15849:22;;;;15888:14;;;;15927:18;;;;15964:16;;;;;15675:13;;15709:18;;;;;15745:15;;;;;;15775:19;;;;15813:16;;15849:22;;;;15888:14;;15927:18;;;;15964:16;;;;;15261:726;;;;;20653:25:46;;;20721:14;;20714:22;20709:2;20694:18;;20687:50;-1:-1:-1;;;;;20811:15:46;;;20791:18;;;20784:43;;;;20863:15;;;20858:2;20843:18;;20836:43;20910:3;20895:19;;20888:35;;;;20960:15;;20764:3;20939:19;;20932:44;21007:3;20992:19;;20985:35;21057:15;;21051:3;21036:19;;21029:44;21110:15;21104:3;21089:19;;21082:44;20640:3;20625:19;15261:726:12;;;;;;;;11561:228;;;:::i;11209:247::-;;;;;;:::i;:::-;;:::i;11795:88::-;;;:::i;2455:674::-;;;;;;:::i;:::-;;:::i;763:19::-;;;;;-1:-1:-1;;;;;763:19:12;;;;;;-1:-1:-1;;;;;7634:32:46;;;7616:51;;7604:2;7589:18;763:19:12;7470:203:46;11889:132:12;;;:::i;:::-;;;18800:25:46;;;18788:2;18773:18;11889:132:12;18654:177:46;1763:50:12;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1763:50:12;;;9943:1260;;;;;;:::i;:::-;;:::i;1120:23::-;;;;;;1447:22;;;;;;:::i;:::-;;:::i;:::-;;;;22797:25:46;;;22853:2;22838:18;;22831:34;;;;22881:18;;;22874:34;;;;-1:-1:-1;;;;;22944:32:46;;;22939:2;22924:18;;22917:60;23021:14;23014:22;23008:3;22993:19;;22986:51;23081:14;23074:22;22964:3;23053:19;;23046:51;23141:14;23134:22;23128:3;23113:19;;23106:51;22784:3;22769:19;1447:22:12;22500:663:46;12312:431:12;;;;;;:::i;:::-;;:::i;13794:1461::-;;;;;;:::i;:::-;;:::i;15993:100::-;;;;;;:::i;:::-;;:::i;4501:197::-;;;;;;:::i;:::-;;:::i;4067:428::-;;;;;;:::i;:::-;;:::i;4704:338::-;;;;;;:::i;:::-;;:::i;1039:25::-;;;;;;3278:104;;;;;;:::i;:::-;;:::i;739:18::-;;;;;-1:-1:-1;;;;;739:18:12;;;3135:137;;;;;;:::i;:::-;;:::i;1909:101:20:-;;;:::i;12027:120:12:-;;;:::i;3388:673::-;;;;;;:::i;:::-;;:::i;906:25::-;;;;;-1:-1:-1;;;;;906:25:12;;;1278:85:20;1350:6;;-1:-1:-1;;;;;1350:6:20;1278:85;;11462:93:12;;;:::i;9535:402::-;;;;;;:::i;:::-;;:::i;12749:440::-;;;;;;:::i;:::-;;:::i;857:24::-;;;;;-1:-1:-1;;;;;857:24:12;;;1720:37;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1720:37:12;;;;;;;;;;;;;;;;;;;;;;;;;;21502:25:46;;;21570:14;;21563:22;21558:2;21543:18;;21536:50;-1:-1:-1;;;;;21660:15:46;;;21640:18;;;21633:43;;;;21712:15;;;21707:2;21692:18;;21685:43;21759:3;21744:19;;21737:35;;;;21613:3;21788:19;;21781:35;21853:15;;21847:3;21832:19;;21825:44;21906:15;;21900:3;21885:19;;21878:44;21959:15;21953:3;21938:19;;21931:44;21489:3;21474:19;1720:37:12;21137:844:46;995:38:12;;1029:4;995:38;;788:28;;;;;-1:-1:-1;;;;;788:28:12;;;822:29;;;;;-1:-1:-1;;;;;822:29:12;;;13354:434;;;;;;:::i;:::-;;:::i;2159:232:20:-;;;;;;:::i;:::-;;:::i;5048:1296:12:-;;;;;;:::i;:::-;;:::i;1070:44::-;;1111:3;1070:44;;707:26;;;;;-1:-1:-1;;;;;707:26:12;;;6350:1015;-1:-1:-1;;;;;6480:12:12;;6456:21;6480:12;;;:5;:12;;;;;6510:17;;;;;;6502:45;;;;-1:-1:-1;;;6502:45:12;;18169:2:46;6502:45:12;;;18151:21:46;18208:2;18188:18;;;18181:30;-1:-1:-1;;;18227:18:46;;;18220:45;18282:18;;6502:45:12;;;;;;;;;6588:3;;6581:36;;-1:-1:-1;;;6581:36:12;;6611:4;6581:36;;;7616:51:46;6557:21:12;;-1:-1:-1;;;;;6588:3:12;;6581:21;;7589:18:46;;6581:36:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6643:14;;6667:12;;6627:56;;-1:-1:-1;;;6627:56:12;;;;;22168:25:46;;;;6643:14:12;22209:18:46;;;22202:34;6557:60:12;;-1:-1:-1;;;;;;6643:14:12;;6627:39;;22141:18:46;;6627:56:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6760:3:12;;6753:36;;-1:-1:-1;;;6753:36:12;;6783:4;6753:36;;;7616:51:46;6735:15:12;;-1:-1:-1;6792:13:12;;-1:-1:-1;;;;;;6760:3:12;;;;6753:21;;7589:18:46;;6753:36:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;;;:::i;:::-;6735:70;-1:-1:-1;6735:70:12;6851:298;;;;6877:17;984:5;6908:10;;6898:7;:20;;;;:::i;:::-;6897:40;;;;:::i;:::-;6958:3;;6971:4;;6951:36;;-1:-1:-1;;;6951:36:12;;6877:60;;-1:-1:-1;;;;;;6958:3:12;;;;6951:19;;:36;;6971:4;;6877:60;;6951:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7007:4:12;;7001:30;;-1:-1:-1;;;7001:30:12;;;;;18800:25:46;;;-1:-1:-1;;;;;7007:4:12;;;;7001:19;;18773:18:46;;7001:30:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7052:4:12;;7045:48;;-1:-1:-1;;;;;;7052:4:12;;-1:-1:-1;7071:10:12;7083:9;7045:25;:48::i;:::-;7118:20;7129:9;7118:8;:20;:::i;:::-;7107:31;;6863:286;6851:298;7183:14;;;;7211:17;;;;7158:144;;-1:-1:-1;;;;;7183:14:12;;;;;;;7211:17;7242:7;7263:8;7285:7;7158:11;:144::i;:::-;7317:41;7330:7;7339:18;7349:8;7330:7;7339:18;:::i;:::-;7317:41;;;22168:25:46;;;22224:2;22209:18;;22202:34;;;;22141:18;7317:41:12;;;;;;;6446:919;;;;6350:1015;;;:::o;11561:228::-;11627:11;;11615:52;;-1:-1:-1;;;11615:52:12;;11661:4;11615:52;;;7616:51:46;11598:14:12;;-1:-1:-1;;;;;11627:11:12;;11615:37;;7589:18:46;;11615:52:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11598:69;-1:-1:-1;11681:10:12;;11677:73;;11719:11;;;;;;;;;-1:-1:-1;;;;;11719:11:12;-1:-1:-1;;;;;11707:30:12;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11677:73;11764:18;;18800:25:46;;;11764:18:12;;18788:2:46;18773:18;11764::12;;;;;;;;11588:201;11561:228::o;11209:247::-;11264:10;;11260:135;;11297:3;;11310:11;;11290:40;;-1:-1:-1;;;11290:40:12;;-1:-1:-1;;;;;11297:3:12;;;;11290:19;;:40;;11310:11;;;11323:6;;11290:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11356:11:12;;11344:40;;-1:-1:-1;;;11344:40:12;;;;;18800:25:46;;;-1:-1:-1;;;;;11356:11:12;;;;11344:32;;18773:18:46;;11344:40:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11260:135;11404:10;:8;:10::i;:::-;11429:20;;18800:25:46;;;11429:20:12;;18788:2:46;18773:18;11429:20:12;18654:177:46;11795:88:12;11843:10;:8;:10::i;:::-;11863:13;:11;:13::i;:::-;11795:88::o;2455:674::-;2357:13:19;;;;;;;:48;;2393:12;;;;2392:13;2357:48;;;3156:4;1461:19:17;:23;2373:16:19;2336:141;;;;-1:-1:-1;;;2336:141:19;;13731:2:46;2336:141:19;;;13713:21:46;13770:2;13750:18;;;13743:30;13809:34;13789:18;;;13782:62;-1:-1:-1;;;13860:18:46;;;13853:44;13914:19;;2336:141:19;13529:410:46;2336:141:19;2488:19;2511:13;;;;;;2510:14;2534:98;;;;2568:13;:20;;-1:-1:-1;;2602:19:19;;;;;2534:98;2691:16:12::1;:14;:16::i;:::-;2717:11;:26:::0;;-1:-1:-1;;;;;;2717:26:12;;::::1;-1:-1:-1::0;;;;;2717:26:12;;::::1;::::0;;;::::1;::::0;;;2789:3:::1;:10:::0;;;::::1;::::0;;::::1;;::::0;;2880:13:::1;:30:::0;;;::::1;::::0;;::::1;;::::0;;2994:14:::1;:32:::0;;;::::1;::::0;;::::1;;::::0;;3036:9:::1;:22:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;3068:10:::1;:23:::0;;;3101:8:::1;:21:::0;;;2654:66:19;;;;2704:5;2688:21;;-1:-1:-1;;2688:21:19;;;2654:66;2055:671;2455:674:12;;;;;;:::o;11889:132::-;11974:11;;11962:52;;-1:-1:-1;;;11962:52:12;;12008:4;11962:52;;;7616:51:46;11936:7:12;;-1:-1:-1;;;;;11974:11:12;;11962:37;;7589:18:46;;11962:52:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11955:59;;11889:132;:::o;9943:1260::-;10149:3;10136:9;:16;;10128:50;;;;-1:-1:-1;;;10128:50:12;;13381:2:46;10128:50:12;;;13363:21:46;13420:2;13400:18;;;13393:30;-1:-1:-1;;;13439:18:46;;;13432:51;13500:18;;10128:50:12;13179:345:46;10128:50:12;-1:-1:-1;;;;;10212:12:12;;;10188:21;10212:12;;;:5;:12;;;;;10256:15;;;;10212:12;;10256:15;10242:10;:29;10234:66;;;;-1:-1:-1;;;10234:66:12;;17472:2:46;10234:66:12;;;17454:21:46;17511:2;17491:18;;;17484:30;17550:26;17530:18;;;17523:54;17594:18;;10234:66:12;17270:348:46;10234:66:12;10310:20;10333:41;10359:7;10368:5;10333:25;:41::i;:::-;10310:64;;10384:16;10403:41;10424:12;10438:5;10403:20;:41::i;:::-;10461:21;;;;10454:60;;-1:-1:-1;;;10454:60:12;;10384;;-1:-1:-1;;;;;;10461:21:12;;10454:34;;:60;;10489:10;;10501:12;;10454:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10531:18:12;;;;10559:13;;10524:59;;-1:-1:-1;;;10524:59:12;;-1:-1:-1;;;;;10531:18:12;;;;-1:-1:-1;10524:34:12;;:59;;10559:13;;10574:8;;10524:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10609:14:12;;10634:12;;10593:64;;-1:-1:-1;;;10593:64:12;;-1:-1:-1;;;;;10609:14:12;;;;10593:40;;:64;;10648:8;;10593:64;;22168:25:46;;;22224:2;22209:18;;22202:34;22156:2;22141:18;;21986:256;10593:64:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10692:38:12;;-1:-1:-1;;;10692:38:12;;10724:4;10692:38;;;7616:51:46;10667:22:12;;-1:-1:-1;;;;;;10692:23:12;;;-1:-1:-1;10692:23:12;;7589:18:46;;10692:38:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10755:13;;10667:63;;-1:-1:-1;;;;;;10755:13:12;10740:38;10792:5;10811:8;10857:3;10834:19;10844:9;10834:7;:19;:::i;:::-;10833:27;;;;:::i;:::-;10740:198;;-1:-1:-1;;;;;;10740:198:12;;;;;;;-1:-1:-1;;;;;10840:15:46;;;10740:198:12;;;10822:34:46;10872:18;;;10865:34;;;;10915:18;;;10908:34;10894:4:12;10958:18:46;;;10951:43;10913:15:12;11010:19:46;;;11003:35;10756:19;;10740:198:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10966:7;10949:8;:13;;;:24;;;;;;;:::i;:::-;;;;;;;;11002:8;10983;:15;;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;11081:38:12;;-1:-1:-1;;;11081:38:12;;11113:4;11081:38;;;7616:51:46;11021:125:12;;11061:6;;11122:14;;-1:-1:-1;;;;;11081:23:12;;;;;7589:18:46;;11081:38:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;;;:::i;:::-;-1:-1:-1;;;;;11021:26:12;;;:125;:26;:125::i;:::-;11181:5;-1:-1:-1;;;;;11161:35:12;11173:6;-1:-1:-1;;;;;11161:35:12;;11188:7;11161:35;;;;18800:25:46;;18788:2;18773:18;;18654:177;11161:35:12;;;;;;;;10075:1128;;;;9943:1260;;;;:::o;1447:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1447:22:12;;-1:-1:-1;;;;;1447:22:12;;;;-1:-1:-1;;;1447:22:12;;;;;-1:-1:-1;;;1447:22:12;;;;;-1:-1:-1;;;1447:22:12;;;;;:::o;12312:431::-;-1:-1:-1;;;;;12465:12:12;;;12418:7;12465:12;;;:5;:12;;;;;;;;12511:15;;;;12565:21;;;;12558:43;;-1:-1:-1;;;12558:43:12;;;;12418:7;;12465:12;;12511:15;;12418:7;;12565:21;;;;;12558:41;;:43;;;;;;;;;;12565:21;12558:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12536:65;-1:-1:-1;12615:27:12;12629:13;12536:65;12615:27;:::i;:::-;12611:71;;12670:1;12663:8;;;;;;;12611:71;12725:11;12699:22;12708:13;12699:6;:22;:::i;:::-;12698:38;;;;:::i;:::-;12691:45;;;;;12312:431;;;;;:::o;13794:1461::-;1490:6:20;;-1:-1:-1;;;;;1490:6:20;907:10:18;1490:22:20;1482:67;;;;-1:-1:-1;;;1482:67:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;14047:13:12;::::1;;::::0;;;:5:::1;:13;::::0;;;;:22:::1;;::::0;::::1;;:31;14026:114;;;::::0;-1:-1:-1;;;14026:114:12;;15194:2:46;14026:114:12::1;::::0;::::1;15176:21:46::0;15233:2;15213:18;;;15206:30;15272:34;15252:18;;;15245:62;-1:-1:-1;;;15323:18:46;;;15316:34;15367:19;;14026:114:12::1;14992:400:46::0;14026:114:12::1;14188:55;::::0;-1:-1:-1;;;14188:55:12;;14150:15:::1;::::0;14188::::1;::::0;:27:::1;::::0;:55:::1;::::0;14216:11;;14229:13;;14188:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14297:9;::::0;14375:3:::1;::::0;14282:107:::1;::::0;-1:-1:-1;;;14282:107:12;;-1:-1:-1;;;;;7908:15:46;;;14282:107:12::1;::::0;::::1;7890:34:46::0;14375:3:12;;::::1;7940:18:46::0;;;7933:43;14150:103:12;;-1:-1:-1;14263:16:12::1;::::0;14297:9;::::1;::::0;14282:40:::1;::::0;7825:18:46;;14282:107:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14629:9;::::0;14700:4:::1;::::0;14445:274:::1;::::0;-1:-1:-1;;;14445:274:12;;::::1;::::0;::::1;19899:25:46::0;;;-1:-1:-1;;;;;19998:15:46;;;19978:18;;;19971:43;20050:15;;;20030:18;;;20023:43;14598:4:12::1;20082:18:46::0;;;20075:43;14629:9:12;;::::1;20134:19:46::0;;;20127:44;20208:15;;;20187:19;;;20180:44;14700:4:12;::::1;20240:19:46::0;;;20233:44;14263:126:12;;-1:-1:-1;14399:18:12::1;::::0;14445:20:::1;::::0;:37:::1;::::0;19871:19:46;;14445:274:12::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14754:9;::::0;14739:155:::1;::::0;-1:-1:-1;;;14739:155:12;;::::1;::::0;::::1;19346:25:46::0;;;-1:-1:-1;;;;;19445:15:46;;;19425:18;;;19418:43;19497:15;;;19477:18;;;19470:43;19549:15;;;19529:18;;;19522:43;14399:330:12;;-1:-1:-1;14754:9:12;::::1;::::0;14739:29:::1;::::0;19318:19:46;;14739:155:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;14920:296;;;;;;;;14944:4;14920:296;;;;14972:4;14920:296;;;;;;14997:6;-1:-1:-1::0;;;;;14920:296:12::1;;;;;15028:10;-1:-1:-1::0;;;;;14920:296:12::1;;;;;15060:1;14920:296;;;;15081:1;14920:296;;;;15118:8;-1:-1:-1::0;;;;;14920:296:12::1;;;;;15159:8;-1:-1:-1::0;;;;;14920:296:12::1;;;;;15198:6;-1:-1:-1::0;;;;;14920:296:12::1;;;::::0;14904:5:::1;:13;14910:6;-1:-1:-1::0;;;;;14904:13:12::1;-1:-1:-1::0;;;;;14904:13:12::1;;;;;;;;;;;;:312;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;14904:312:12::1;;;;;-1:-1:-1::0;;;;;14904:312:12::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;14904:312:12::1;;;;;-1:-1:-1::0;;;;;14904:312:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;14904:312:12::1;;;;;-1:-1:-1::0;;;;;14904:312:12::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;14904:312:12::1;;;;;-1:-1:-1::0;;;;;14904:312:12::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;14904:312:12::1;;;;;-1:-1:-1::0;;;;;14904:312:12::1;;;;;;;;;15231:17;15241:6;15231:17;;;;;-1:-1:-1::0;;;;;7634:32:46;;;;7616:51;;7604:2;7589:18;;7470:203;15231:17:12::1;;;;;;;;14016:1239;;;13794:1461:::0;;;;;;:::o;15993:100::-;1490:6:20;;-1:-1:-1;;;;;1490:6:20;907:10:18;1490:22:20;1482:67;;;;-1:-1:-1;;;1482:67:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;16057:12:12::1;16081:5;16057:12:::0;;;:5:::1;:12;::::0;;;;:21:::1;;:29:::0;;-1:-1:-1;;16057:29:12::1;::::0;;15993:100::o;4501:197::-;1490:6:20;;-1:-1:-1;;;;;1490:6:20;907:10:18;1490:22:20;1482:67;;;;-1:-1:-1;;;1482:67:20;;;;;;;:::i;:::-;4564:16:12::1;4583:8;4592:5;4583:15;;;;;;;;:::i;:::-;;;;;;;;;;;4564:34;;4620:3;:9;;;4608:8;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4639:12:12::1;::::0;::::1;:20:::0;;-1:-1:-1;;;;4639:20:12;::::1;::::0;;;4674:17:::1;::::0;-1:-1:-1;;;;;4684:6:12;;;7616:51:46;;4674:17:12::1;::::0;7604:2:46;7589:18;4674:17:12::1;;;;;;;4554:144;4501:197:::0;:::o;4067:428::-;1490:6:20;;-1:-1:-1;;;;;1490:6:20;907:10:18;1490:22:20;1482:67;;;;-1:-1:-1;;;1482:67:20;;;;;;;:::i;:::-;4142:16:12::1;4161:8;4170:5;4161:15;;;;;;;;:::i;:::-;;;;;;;;;;;4142:34;;4224:5;4207:3;:13;;;:22;;:48;;;;-1:-1:-1::0;4242:13:12;;4233:22;::::1;;4207:48;4186:113;;;::::0;-1:-1:-1;;;4186:113:12;;16714:2:46;4186:113:12::1;::::0;::::1;16696:21:46::0;16753:2;16733:18;;;16726:30;-1:-1:-1;;;16772:18:46;;;16765:48;16830:18;;4186:113:12::1;16512:342:46::0;4186:113:12::1;1029:4;4336:3;:9;;;4328:5;4317:8;;:16;;;;:::i;:::-;:28;;;;:::i;:::-;:39;;4309:67;;;::::0;-1:-1:-1;;;4309:67:12;;17825:2:46;4309:67:12::1;::::0;::::1;17807:21:46::0;17864:2;17844:18;;;17837:30;-1:-1:-1;;;17883:18:46;;;17876:45;17938:18;;4309:67:12::1;17623:339:46::0;4309:67:12::1;4420:5;4408:3;:9;;;4397:8;;:20;;;;:::i;:::-;:28;;;;:::i;:::-;4386:8;:39:::0;4435:9:::1;::::0;::::1;:17:::0;;;4474:6:::1;::::0;::::1;::::0;4467:21:::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;4474:6:12;;::::1;::::0;4447:5;;4467:21:::1;:::i;:::-;;;;;;;;4132:363;4067:428:::0;;:::o;4704:338::-;1490:6:20;;-1:-1:-1;;;;;1490:6:20;907:10:18;1490:22:20;1482:67;;;;-1:-1:-1;;;1482:67:20;;;;;;;:::i;:::-;1111:3:12::1;4778:5;:23;;4770:50;;;::::0;-1:-1:-1;;;4770:50:12;;12631:2:46;4770:50:12::1;::::0;::::1;12613:21:46::0;12670:2;12650:18;;;12643:30;-1:-1:-1;;;12689:18:46;;;12682:44;12743:18;;4770:50:12::1;12429:338:46::0;4770:50:12::1;4940:10;;4932:5;4921:8;;:16;;;;:::i;:::-;:29;;;;:::i;:::-;4910:8;:40:::0;;;1029:4:::1;-1:-1:-1::0;4968:19:12::1;4960:47;;;::::0;-1:-1:-1;;;4960:47:12;;14850:2:46;4960:47:12::1;::::0;::::1;14832:21:46::0;14889:2;14869:18;;;14862:30;-1:-1:-1;;;14908:18:46;;;14901:45;14963:18;;4960:47:12::1;14648:339:46::0;4960:47:12::1;5017:10;:18:::0;4704:338::o;3278:104::-;1490:6:20;;-1:-1:-1;;;;;1490:6:20;907:10:18;1490:22:20;1482:67;;;;-1:-1:-1;;;1482:67:20;;;;;;;:::i;:::-;3351:10:12::1;:24:::0;;-1:-1:-1;;;;;;3351:24:12::1;-1:-1:-1::0;;;;;3351:24:12;;;::::1;::::0;;;::::1;::::0;;3278:104::o;3135:137::-;1490:6:20;;-1:-1:-1;;;;;1490:6:20;907:10:18;1490:22:20;1482:67;;;;-1:-1:-1;;;1482:67:20;;;;;;;:::i;:::-;3204:4:12::1;::::0;-1:-1:-1;;;;;3204:4:12::1;:18:::0;3196:47:::1;;;::::0;-1:-1:-1;;;3196:47:12;;15957:2:46;3196:47:12::1;::::0;::::1;15939:21:46::0;15996:2;15976:18;;;15969:30;-1:-1:-1;;;16015:18:46;;;16008:46;16071:18;;3196:47:12::1;15755:340:46::0;3196:47:12::1;3253:4;:12:::0;;-1:-1:-1;;;;;;3253:12:12::1;-1:-1:-1::0;;;;;3253:12:12;;;::::1;::::0;;;::::1;::::0;;3135:137::o;1909:101:20:-;1490:6;;-1:-1:-1;;;;;1490:6:20;907:10:18;1490:22:20;1482:67;;;;-1:-1:-1;;;1482:67:20;;;;;;;:::i;:::-;1973:30:::1;2000:1;1973:18;:30::i;12027:120:12:-:0;12103:11;;12096:44;;-1:-1:-1;;;12096:44:12;;12134:4;12096:44;;;7616:51:46;12070:7:12;;-1:-1:-1;;;;;12103:11:12;;12096:29;;7589:18:46;;12096:44:12;7470:203:46;3388:673:12;1490:6:20;;-1:-1:-1;;;;;1490:6:20;907:10:18;1490:22:20;1482:67;;;;-1:-1:-1;;;1482:67:20;;;;;;;:::i;:::-;1029:4:12::1;3587:5;3576:8;;:16;;;;:::i;:::-;:27;;3568:55;;;::::0;-1:-1:-1;;;3568:55:12;;17825:2:46;3568:55:12::1;::::0;::::1;17807:21:46::0;17864:2;17844:18;;;17837:30;-1:-1:-1;;;17883:18:46;;;17876:45;17938:18;;3568:55:12::1;17623:339:46::0;3568:55:12::1;3648:5;3641:3;:12;;:28;;;;;3666:3;3657:5;:12;;3641:28;3633:59;;;::::0;-1:-1:-1;;;3633:59:12;;16714:2:46;3633:59:12::1;::::0;::::1;16696:21:46::0;16753:2;16733:18;;;16726:30;-1:-1:-1;;;16772:18:46;;;16765:48;16830:18;;3633:59:12::1;16512:342:46::0;3633:59:12::1;3729:238;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;3729:238:12;;::::1;::::0;;;;;;;::::1;;::::0;;;;;;;::::1;;::::0;;;;;;3948:4:::1;3729:238:::0;;;;;;3702:8:::1;:275:::0;;;;::::1;::::0;;-1:-1:-1;3702:275:12;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;3702:275:12::1;-1:-1:-1::0;;;;3702:275:12;::::1;;-1:-1:-1::0;;;3702:275:12::1;::::0;;;;-1:-1:-1;;;;3702:275:12;::::1;;-1:-1:-1::0;;;3702:275:12::1;-1:-1:-1::0;;;;;;3702:275:12;;;;;;::::1;::::0;;;;::::1;::::0;;;;;::::1;::::0;;;3987:8:::1;:17:::0;;3823:5;;-1:-1:-1;3987:17:12::1;::::0;3823:5;;3987:17:::1;:::i;:::-;::::0;;;-1:-1:-1;;4019:35:12::1;::::0;;-1:-1:-1;;;;;10320:32:46;;10302:51;;10384:2;10369:18;;10362:34;;;10439:14;;10432:22;10412:18;;;10405:50;;;;10498:14;;10491:22;10486:2;10471:18;;10464:50;4019:35:12::1;::::0;10289:3:46;10274:19;4019:35:12::1;;;;;;;;3388:673:::0;;;;;;:::o;11462:93::-;11518:3;;11511:36;;-1:-1:-1;;;11511:36:12;;11541:4;11511:36;;;7616:51:46;11502:46:12;;-1:-1:-1;;;;;11518:3:12;;11511:21;;7589:18:46;;11511:36:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9535:402::-;1490:6:20;;-1:-1:-1;;;;;1490:6:20;907:10:18;1490:22:20;1482:67;;;;-1:-1:-1;;;1482:67:20;;;;;;;:::i;:::-;9663:3:12::1;::::0;-1:-1:-1;;;;;9653:13:12;;::::1;9663:3:::0;::::1;9653:13;;9645:40;;;::::0;-1:-1:-1;;;9645:40:12;;14146:2:46;9645:40:12::1;::::0;::::1;14128:21:46::0;14185:2;14165:18;;;14158:30;-1:-1:-1;;;14204:18:46;;;14197:44;14258:18;;9645:40:12::1;13944:338:46::0;9645:40:12::1;-1:-1:-1::0;;;;;9704:13:12;::::1;;::::0;;;:5:::1;:13;::::0;;;;:22:::1;;::::0;::::1;;9703:23;9695:50;;;::::0;-1:-1:-1;;;9695:50:12;;18513:2:46;9695:50:12::1;::::0;::::1;18495:21:46::0;18552:2;18532:18;;;18525:30;-1:-1:-1;;;18571:18:46;;;18564:44;18625:18;;9695:50:12::1;18311:338:46::0;9695:50:12::1;9772:39;::::0;-1:-1:-1;;;9772:39:12;;9805:4:::1;9772:39;::::0;::::1;7616:51:46::0;9755:14:12::1;::::0;-1:-1:-1;;;;;9772:24:12;::::1;::::0;::::1;::::0;7589:18:46;;9772:39:12::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9821:41;::::0;-1:-1:-1;;;9821:41:12;;9755:56;;-1:-1:-1;;;;;;9821:22:12;::::1;::::0;::::1;::::0;:41:::1;::::0;9844:9;;9755:56;;9821:41:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9872:58:12::1;::::0;-1:-1:-1;;;9872:58:12;;::::1;::::0;::::1;19010:25:46::0;;;-1:-1:-1;;;;;19071:32:46;;;19051:18;;;19044:60;9872:42:12;::::1;::::0;::::1;::::0;18983:18:46;;9872:58:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9635:302;9535:402:::0;;:::o;12749:440::-;-1:-1:-1;;;;;12907:12:12;;;12860:7;12907:12;;;:5;:12;;;;;;;;12953:13;;;;;13005:21;;;;12998:43;;-1:-1:-1;;;12998:43:12;;;;12860:7;;12907:12;;12953:13;;12860:7;;13005:21;;;;;12998:41;;:43;;;;12907:12;;12998:43;;;;;13005:21;12998:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12976:65;-1:-1:-1;13056:27:12;13070:13;12976:65;13056:27;:::i;:::-;13052:76;;13111:6;13104:13;;;;;;;13052:76;13169:13;13145:20;13154:11;13145:6;:20;:::i;13354:434::-;-1:-1:-1;;;;;13512:12:12;;;13465:7;13512:12;;;:5;:12;;;;;;;;13558:13;;;;;13610:21;;;;13603:43;;-1:-1:-1;;;13603:43:12;;;;13465:7;;13512:12;;13558:13;;13465:7;;13610:21;;;;;13603:41;;:43;;;;13512:12;;13603:43;;;;;13610:21;13603:43;;;;;;;;;;2159:232:20;1490:6;;-1:-1:-1;;;;;1490:6:20;907:10:18;1490:22:20;1482:67;;;;-1:-1:-1;;;1482:67:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;2260:22:20;::::1;2239:107;;;::::0;-1:-1:-1;;;2239:107:20;;12224:2:46;2239:107:20::1;::::0;::::1;12206:21:46::0;12263:2;12243:18;;;12236:30;12302:34;12282:18;;;12275:62;-1:-1:-1;;;12353:18:46;;;12346:36;12399:19;;2239:107:20::1;12022:402:46::0;2239:107:20::1;2356:28;2375:8;2356:18;:28::i;:::-;2159:232:::0;:::o;5048:1296:12:-;-1:-1:-1;;;;;5237:12:12;;5213:21;5237:12;;;:5;:12;;;;;5290:17;;;;;;5282:45;;;;-1:-1:-1;;;5282:45:12;;18169:2:46;5282:45:12;;;18151:21:46;18208:2;18188:18;;;18181:30;-1:-1:-1;;;18227:18:46;;;18220:45;18282:18;;5282:45:12;17967:339:46;5282:45:12;5359:15;;;;-1:-1:-1;;;;;5359:15:12;5345:10;:29;5337:65;;;;-1:-1:-1;;;5337:65:12;;11872:2:46;5337:65:12;;;11854:21:46;11911:2;11891:18;;;11884:30;11950:25;11930:18;;;11923:53;11993:18;;5337:65:12;11670:347:46;5337:65:12;5412:61;-1:-1:-1;;;;;5412:30:12;;5443:6;5459:4;5466:6;5412:30;:61::i;:::-;5550:13;;5528:44;;-1:-1:-1;;;5528:44:12;;-1:-1:-1;;;;;5528:21:12;;;;;;:44;;5550:13;;;;5565:6;;5528:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5597:13:12;;5582:142;;-1:-1:-1;;;5582:142:12;;-1:-1:-1;;;;;9918:15:46;;;5582:142:12;;;9900:34:46;9950:18;;;9943:34;;;5680:4:12;9993:18:46;;;9986:43;5699:15:12;10045:18:46;;;10038:34;5597:13:12;;;;5582:37;;9834:19:46;;5582:142:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;5821:18:12;;;;5814:73;;-1:-1:-1;;;5814:73:12;;5872:4;5814:73;;;7616:51:46;5793:18:12;;-1:-1:-1;;;;;5821:18:12;;5814:36;;7589:18:46;;5814:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5904:18;;;;5932:14;;5897:62;;-1:-1:-1;;;5897:62:12;;5793:94;;-1:-1:-1;;;;;;5904:18:12;;;;5897:34;;:62;;5932:14;;5793:94;;5897:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5985:14:12;;6009:12;;5969:65;;-1:-1:-1;;;5969:65:12;;-1:-1:-1;;;;;5985:14:12;;;;5969:39;;:65;;6023:10;;5969:65;;22168:25:46;;;22224:2;22209:18;;22202:34;22156:2;22141:18;;21986:256;5969:65:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6072:26;6101:40;6127:6;6135:5;6101:25;:40::i;:::-;6158:21;;;;6151:66;;-1:-1:-1;;;6151:66:12;;6072:69;;-1:-1:-1;;;;;;6158:21:12;;6151:34;;:66;;6186:10;;6072:69;;6151:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6244:6;6227:8;:13;;;:23;;;;;;;:::i;:::-;;;;;;;;6279:10;6260:8;:15;;;:29;;;;;;;:::i;:::-;;;;;;;;6323:5;-1:-1:-1;;;;;6304:33:12;6315:6;-1:-1:-1;;;;;6304:33:12;;6330:6;6304:33;;;;18800:25:46;;18788:2;18773:18;;18654:177;6304:33:12;;;;;;;;5151:1193;;;5048:1296;;;:::o;702:205:29:-;814:86;834:5;864:23;;;889:2;893:5;841:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;841:58:29;;;;;;;;;;;;;;-1:-1:-1;;;;;841:58:29;-1:-1:-1;;;;;;841:58:29;;;;;;;;;;814:19;:86::i;:::-;702:205;;;:::o;7371:2129:12:-;7544:9;7539:1501;7563:8;:15;7559:19;;7539:1501;;;7599:20;7622:8;7631:1;7622:11;;;;;;;;:::i;:::-;;;;;;;;;;;7599:34;;7651:7;:16;;;;;;;;;;;;7647:1383;;;7709:3;;7761:13;;;;-1:-1:-1;;;;;7709:3:12;;;;7687:19;;984:5;;7751:23;;:7;:23;:::i;:::-;7750:43;;;;:::i;:::-;7816:13;;;;7730:63;;-1:-1:-1;;;;7816:13:12;;;;7811:189;;7860:3;;7873:4;;7853:36;;-1:-1:-1;;;7853:36:12;;-1:-1:-1;;;;;7860:3:12;;;;7853:19;;:36;;7873:4;;;7879:9;;7853:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7917:4:12;;7911:30;;-1:-1:-1;;;7911:30:12;;;;;18800:25:46;;;-1:-1:-1;;;;;7917:4:12;;;;7911:19;;18773:18:46;;7911:30:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7977:4:12;;-1:-1:-1;;;;;7977:4:12;;-1:-1:-1;;;7811:189:12;8022:17;;;;-1:-1:-1;;;8022:17:12;;;;8017:960;;8091:10;;;;8063:50;;-1:-1:-1;;;8063:50:12;;-1:-1:-1;;;;;8063:27:12;;;;;;:50;;8091:10;;;;8103:9;;8063:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8151:10:12;;;;8135:137;;-1:-1:-1;;;8135:137:12;;;;;19010:25:46;;;-1:-1:-1;;;;;19071:32:46;;;19051:18;;;19044:60;8151:10:12;;;;8135:43;;18983:18:46;;8135:137:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8298:7;:38;;;;-1:-1:-1;8311:10:12;;-1:-1:-1;;;;;8311:10:12;:24;8309:27;8298:38;8294:493;;;8376:10;;8479;;;;8463:45;;;-1:-1:-1;;;8463:45:12;;;;-1:-1:-1;;;;;8376:10:12;;;;8364:34;;8428:5;;8479:10;;;8463:43;;:45;;;;;;;;;;;;;;;8479:10;8463:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8538:11;8579:9;8634:7;:10;;;;;;;;;;-1:-1:-1;;;;;8634:10:12;-1:-1:-1;;;;;8618:39:12;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8364:321;;-1:-1:-1;;;;;;8364:321:12;;;;;;;-1:-1:-1;;;;;8302:15:46;;;8364:321:12;;;8284:34:46;8354:15;;;8334:18;;;8327:43;8406:15;;;;8386:18;;;8379:43;8438:18;;;8431:34;8481:19;;;8474:35;;;;8218:19;;8364:321:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8729:10:12;;;;8716:48;;;;-1:-1:-1;8716:48:12;;-1:-1:-1;;;;;8729:10:12;;8741:11;;8754:9;;8716:48;:::i;:::-;;;;;;;;8294:493;8017:960;;;8861:10;;;;8833:50;;-1:-1:-1;;;8833:50:12;;-1:-1:-1;;;;;8833:27:12;;;;;;:50;;8861:10;;;;8873:9;;8833:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8923:10:12;;;;8910:48;;;;;;-1:-1:-1;;;;;8923:10:12;;;;8935:11;;8948:9;;8910:48;:::i;:::-;;;;;;;;8017:960;8994:21;9006:9;8994:21;;:::i;:::-;;;7669:1361;;7647:1383;-1:-1:-1;7580:3:12;;;;:::i;:::-;;;;7539:1501;;;-1:-1:-1;9056:3:12;;9049:39;;-1:-1:-1;;;9049:39:12;;-1:-1:-1;;;;;9056:3:12;;;;9049:19;;:39;;9069:8;;9079;;9049:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9150:3:12;;9098:56;;-1:-1:-1;;;9098:56:12;;;;;19010:25:46;;;-1:-1:-1;;;;;9150:3:12;;;19051:18:46;;;19044:60;9098:41:12;;;;;;18983:18:46;;9098:56:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9168:7;:38;;;;-1:-1:-1;9181:10:12;;-1:-1:-1;;;;;9181:10:12;:24;9179:27;9168:38;9164:330;;;-1:-1:-1;;;;;9246:12:12;;;9222:21;9246:12;;;:5;:12;;;;;;;9284:10;;9353:3;;9400:13;;;;;9272:155;;-1:-1:-1;;;9272:155:12;;;;;9169:34:46;;;;9353:3:12;;9219:18:46;;;9212:43;9271:18;;;9264:34;;;9314:18;;;9307:34;;;;9246:12:12;9284:10;;9272:40;;9103:19:46;;9272:155:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9469:3:12;;9446:37;;;;-1:-1:-1;9446:37:12;;-1:-1:-1;9459:8:12;;-1:-1:-1;;;;;9469:3:12;;9474:8;;9446:37;:::i;9164:330::-;7371:2129;;;;;:::o;990:95:20:-;2961:13:19;;;;;;;2953:69;;;;-1:-1:-1;;;2953:69:19;;;;;;;:::i;:::-;1052:26:20::1;:24;:26::i;2545:150::-:0;2644:6;;2623:38;;-1:-1:-1;;;;;2623:38:20;;;;2644:6;;2623:38;;2644:6;;2623:38;2671:6;:17;;-1:-1:-1;;;;;;2671:17:20;-1:-1:-1;;;;;2671:17:20;;;;;;;;;;2545:150::o;913:241:29:-;1051:96;1071:5;1101:27;;;1130:4;1136:2;1140:5;1078:68;;;;;;;;;;:::i;3208:706::-;3627:23;3653:69;3681:4;3653:69;;;;;;;;;;;;;;;;;3661:5;-1:-1:-1;;;;;3653:27:29;;;:69;;;;;:::i;:::-;3736:17;;3627:95;;-1:-1:-1;3736:21:29;3732:176;;3831:10;3820:30;;;;;;;;;;;;:::i;:::-;3812:85;;;;-1:-1:-1;;;3812:85:29;;17061:2:46;3812:85:29;;;17043:21:46;17100:2;17080:18;;;17073:30;17139:34;17119:18;;;17112:62;-1:-1:-1;;;17190:18:46;;;17183:40;17240:19;;3812:85:29;16859:406:46;1091:111:20;2961:13:19;;;;;;;2953:69;;;;-1:-1:-1;;;2953:69:19;;;;;;;:::i;:::-;1163:32:20::1;907:10:18::0;1163:18:20::1;:32::i;3846:223:23:-:0;3979:12;4010:52;4032:6;4040:4;4046:1;4049:12;4010:21;:52::i;:::-;4003:59;;3846:223;;;;;;:::o;4933:499::-;5098:12;5155:5;5130:21;:30;;5122:81;;;;-1:-1:-1;;;5122:81:23;;12974:2:46;5122:81:23;;;12956:21:46;13013:2;12993:18;;;12986:30;13052:34;13032:18;;;13025:62;-1:-1:-1;;;13103:18:46;;;13096:36;13149:19;;5122:81:23;12772:402:46;5122:81:23;-1:-1:-1;;;;;1461:19:17;;;5213:60:23;;;;-1:-1:-1;;;5213:60:23;;15599:2:46;5213:60:23;;;15581:21:46;15638:2;15618:18;;;15611:30;15677:31;15657:18;;;15650:59;15726:18;;5213:60:23;15397:353:46;5213:60:23;5285:12;5299:23;5326:6;-1:-1:-1;;;;;5326:11:23;5345:5;5352:4;5326:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5284:73;;;;5374:51;5391:7;5400:10;5412:12;5374:16;:51::i;:::-;5367:58;4933:499;-1:-1:-1;;;;;;;4933:499:23:o;7546:692::-;7692:12;7720:7;7716:516;;;-1:-1:-1;7750:10:23;7743:17;;7716:516;7861:17;;:21;7857:365;;8055:10;8049:17;8115:15;8102:10;8098:2;8094:19;8087:44;7857:365;8194:12;8187:20;;-1:-1:-1;;;8187:20:23;;;;;;;;:::i;14:719:46:-;57:5;110:3;103:4;95:6;91:17;87:27;77:55;;128:1;125;118:12;77:55;164:6;151:20;190:18;227:2;223;220:10;217:36;;;233:18;;:::i;:::-;308:2;302:9;276:2;362:13;;-1:-1:-1;;358:22:46;;;382:2;354:31;350:40;338:53;;;406:18;;;426:22;;;403:46;400:72;;;452:18;;:::i;:::-;492:10;488:2;481:22;527:2;519:6;512:18;573:3;566:4;561:2;553:6;549:15;545:26;542:35;539:55;;;590:1;587;580:12;539:55;654:2;647:4;639:6;635:17;628:4;620:6;616:17;603:54;701:1;694:4;689:2;681:6;677:15;673:26;666:37;721:6;712:15;;;;;;14:719;;;;:::o;738:247::-;797:6;850:2;838:9;829:7;825:23;821:32;818:52;;;866:1;863;856:12;818:52;905:9;892:23;924:31;949:5;924:31;:::i;990:251::-;1060:6;1113:2;1101:9;1092:7;1088:23;1084:32;1081:52;;;1129:1;1126;1119:12;1081:52;1161:9;1155:16;1180:31;1205:5;1180:31;:::i;1246:388::-;1314:6;1322;1375:2;1363:9;1354:7;1350:23;1346:32;1343:52;;;1391:1;1388;1381:12;1343:52;1430:9;1417:23;1449:31;1474:5;1449:31;:::i;:::-;1499:5;-1:-1:-1;1556:2:46;1541:18;;1528:32;1569:33;1528:32;1569:33;:::i;:::-;1621:7;1611:17;;;1246:388;;;;;:::o;1639:882::-;1743:6;1751;1759;1767;1775;1783;1836:3;1824:9;1815:7;1811:23;1807:33;1804:53;;;1853:1;1850;1843:12;1804:53;1892:9;1879:23;1911:31;1936:5;1911:31;:::i;:::-;1961:5;-1:-1:-1;2018:2:46;2003:18;;1990:32;2031:33;1990:32;2031:33;:::i;:::-;2083:7;-1:-1:-1;2142:2:46;2127:18;;2114:32;2155:33;2114:32;2155:33;:::i;:::-;2207:7;-1:-1:-1;2266:2:46;2251:18;;2238:32;2279:33;2238:32;2279:33;:::i;:::-;2331:7;-1:-1:-1;2390:3:46;2375:19;;2362:33;2404;2362;2404;:::i;:::-;2456:7;2446:17;;;2510:3;2499:9;2495:19;2482:33;2472:43;;1639:882;;;;;;;;:::o;2526:517::-;2597:6;2605;2613;2666:2;2654:9;2645:7;2641:23;2637:32;2634:52;;;2682:1;2679;2672:12;2634:52;2721:9;2708:23;2740:31;2765:5;2740:31;:::i;:::-;2790:5;-1:-1:-1;2847:2:46;2832:18;;2819:32;2860:30;2819:32;2860:30;:::i;:::-;2909:7;-1:-1:-1;2968:2:46;2953:18;;2940:32;2981:30;2940:32;2981:30;:::i;:::-;3030:7;3020:17;;;2526:517;;;;;:::o;3048:456::-;3125:6;3133;3141;3194:2;3182:9;3173:7;3169:23;3165:32;3162:52;;;3210:1;3207;3200:12;3162:52;3249:9;3236:23;3268:31;3293:5;3268:31;:::i;:::-;3318:5;-1:-1:-1;3370:2:46;3355:18;;3342:32;;-1:-1:-1;3426:2:46;3411:18;;3398:32;3439:33;3398:32;3439:33;:::i;3509:525::-;3595:6;3603;3611;3619;3672:3;3660:9;3651:7;3647:23;3643:33;3640:53;;;3689:1;3686;3679:12;3640:53;3728:9;3715:23;3747:31;3772:5;3747:31;:::i;:::-;3797:5;-1:-1:-1;3849:2:46;3834:18;;3821:32;;-1:-1:-1;3900:2:46;3885:18;;3872:32;;-1:-1:-1;3956:2:46;3941:18;;3928:32;3969:33;3928:32;3969:33;:::i;:::-;3509:525;;;;-1:-1:-1;3509:525:46;;-1:-1:-1;;3509:525:46:o;4039:245::-;4106:6;4159:2;4147:9;4138:7;4134:23;4130:32;4127:52;;;4175:1;4172;4165:12;4127:52;4207:9;4201:16;4226:28;4248:5;4226:28;:::i;4289:180::-;4348:6;4401:2;4389:9;4380:7;4376:23;4372:32;4369:52;;;4417:1;4414;4407:12;4369:52;-1:-1:-1;4440:23:46;;4289:180;-1:-1:-1;4289:180:46:o;4474:184::-;4544:6;4597:2;4585:9;4576:7;4572:23;4568:32;4565:52;;;4613:1;4610;4603:12;4565:52;-1:-1:-1;4636:16:46;;4474:184;-1:-1:-1;4474:184:46:o;4663:315::-;4731:6;4739;4792:2;4780:9;4771:7;4767:23;4763:32;4760:52;;;4808:1;4805;4798:12;4760:52;4844:9;4831:23;4821:33;;4904:2;4893:9;4889:18;4876:32;4917:31;4942:5;4917:31;:::i;4983:958::-;5107:6;5115;5123;5131;5139;5147;5200:3;5188:9;5179:7;5175:23;5171:33;5168:53;;;5217:1;5214;5207:12;5168:53;5253:9;5240:23;5230:33;;5313:2;5302:9;5298:18;5285:32;5326:31;5351:5;5326:31;:::i;:::-;5376:5;-1:-1:-1;5433:2:46;5418:18;;5405:32;5446:33;5405:32;5446:33;:::i;:::-;5498:7;-1:-1:-1;5556:2:46;5541:18;;5528:32;5579:18;5609:14;;;5606:34;;;5636:1;5633;5626:12;5606:34;5659:50;5701:7;5692:6;5681:9;5677:22;5659:50;:::i;:::-;5649:60;;5762:3;5751:9;5747:19;5734:33;5718:49;;5792:2;5782:8;5779:16;5776:36;;;5808:1;5805;5798:12;5776:36;;5831:52;5875:7;5864:8;5853:9;5849:24;5831:52;:::i;:::-;5821:62;;;5930:3;5919:9;5915:19;5902:33;5892:43;;4983:958;;;;;;;;:::o;5946:248::-;6014:6;6022;6075:2;6063:9;6054:7;6050:23;6046:32;6043:52;;;6091:1;6088;6081:12;6043:52;-1:-1:-1;;6114:23:46;;;6184:2;6169:18;;;6156:32;;-1:-1:-1;5946:248:46:o;6199:724::-;6297:6;6305;6313;6321;6329;6337;6390:3;6378:9;6369:7;6365:23;6361:33;6358:53;;;6407:1;6404;6397:12;6358:53;6443:9;6430:23;6420:33;;6500:2;6489:9;6485:18;6472:32;6462:42;;6551:2;6540:9;6536:18;6523:32;6513:42;;6605:2;6594:9;6590:18;6577:32;6618:31;6643:5;6618:31;:::i;:::-;6668:5;-1:-1:-1;6725:3:46;6710:19;;6697:33;6739:30;6697:33;6739:30;:::i;:::-;6788:7;-1:-1:-1;6847:3:46;6832:19;;6819:33;6861:30;6819:33;6861:30;:::i;:::-;6910:7;6900:17;;;6199:724;;;;;;;;:::o;6928:258::-;6970:3;7008:5;7002:12;7035:6;7030:3;7023:19;7051:63;7107:6;7100:4;7095:3;7091:14;7084:4;7077:5;7073:16;7051:63;:::i;:::-;7168:2;7147:15;-1:-1:-1;;7143:29:46;7134:39;;;;7175:4;7130:50;;6928:258;-1:-1:-1;;6928:258:46:o;7191:274::-;7320:3;7358:6;7352:13;7374:53;7420:6;7415:3;7408:4;7400:6;7396:17;7374:53;:::i;:::-;7443:16;;;;;7191:274;-1:-1:-1;;7191:274:46:o;8520:375::-;-1:-1:-1;;;;;8778:15:46;;;8760:34;;8830:15;;;;8825:2;8810:18;;8803:43;8877:2;8862:18;;8855:34;;;;8710:2;8695:18;;8520:375::o;9352:274::-;-1:-1:-1;;;;;9544:32:46;;;;9526:51;;9608:2;9593:18;;9586:34;9514:2;9499:18;;9352:274::o;11049:220::-;11198:2;11187:9;11180:21;11161:4;11218:45;11259:2;11248:9;11244:18;11236:6;11218:45;:::i;11274:391::-;11479:2;11468:9;11461:21;11442:4;11505:45;11546:2;11535:9;11531:18;11523:6;11505:45;:::i;:::-;11598:9;11590:6;11586:22;11581:2;11570:9;11566:18;11559:50;11626:33;11652:6;11644;11626:33;:::i;:::-;11618:41;11274:391;-1:-1:-1;;;;;11274:391:46:o;14287:356::-;14489:2;14471:21;;;14508:18;;;14501:30;14567:34;14562:2;14547:18;;14540:62;14634:2;14619:18;;14287:356::o;16100:407::-;16302:2;16284:21;;;16341:2;16321:18;;;16314:30;16380:34;16375:2;16360:18;;16353:62;-1:-1:-1;;;16446:2:46;16431:18;;16424:41;16497:3;16482:19;;16100:407::o;23168:128::-;23208:3;23239:1;23235:6;23232:1;23229:13;23226:39;;;23245:18;;:::i;:::-;-1:-1:-1;23281:9:46;;23168:128::o;23301:217::-;23341:1;23367;23357:132;;23411:10;23406:3;23402:20;23399:1;23392:31;23446:4;23443:1;23436:15;23474:4;23471:1;23464:15;23357:132;-1:-1:-1;23503:9:46;;23301:217::o;23523:168::-;23563:7;23629:1;23625;23621:6;23617:14;23614:1;23611:21;23606:1;23599:9;23592:17;23588:45;23585:71;;;23636:18;;:::i;:::-;-1:-1:-1;23676:9:46;;23523:168::o;23696:125::-;23736:4;23764:1;23761;23758:8;23755:34;;;23769:18;;:::i;:::-;-1:-1:-1;23806:9:46;;23696:125::o;23826:258::-;23898:1;23908:113;23922:6;23919:1;23916:13;23908:113;;;23998:11;;;23992:18;23979:11;;;23972:39;23944:2;23937:10;23908:113;;;24039:6;24036:1;24033:13;24030:48;;;-1:-1:-1;;24074:1:46;24056:16;;24049:27;23826:258::o;24089:135::-;24128:3;-1:-1:-1;;24149:17:46;;24146:43;;;24169:18;;:::i;:::-;-1:-1:-1;24216:1:46;24205:13;;24089:135::o;24229:127::-;24290:10;24285:3;24281:20;24278:1;24271:31;24321:4;24318:1;24311:15;24345:4;24342:1;24335:15;24361:127;24422:10;24417:3;24413:20;24410:1;24403:31;24453:4;24450:1;24443:15;24477:4;24474:1;24467:15;24493:127;24554:10;24549:3;24545:20;24542:1;24535:31;24585:4;24582:1;24575:15;24609:4;24606:1;24599:15;24625:131;-1:-1:-1;;;;;24700:31:46;;24690:42;;24680:70;;24746:1;24743;24736:12;24761:118;24847:5;24840:13;24833:21;24826:5;24823:32;24813:60;;24869:1;24866;24859:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getDepositTokensForShares(uint256,address)": {
        "notice": "Calculate deposit tokens for a given amount of receipt tokens",
        "params": {
          "amount": "receipt tokens"
        },
        "returns": {
          "_0": "deposit tokens"
        }
      },
      "getLPTokensForShares(uint256,address)": {
        "notice": "Calculate deposit tokens for a given amount of receipt tokens",
        "params": {
          "amount": "receipt tokens"
        },
        "returns": {
          "_0": "deposit tokens"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [593, 16127],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x248 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AF66772 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xA296454F GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xF0806088 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF0806088 EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xF45346DC EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xF6A23320 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xFF4DE86F EQ PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA296454F EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xA4063DBC EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0xDEE91FCB EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0xED9A5540 EQ PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8525A65A GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x8525A65A EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0x92B3F301 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x97EAD276 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x99CEC548 EQ PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6AF66772 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x6C1A3085 EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x746C5A9F EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x7CA20928 EQ PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1DF4CCFC GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x499A2818 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x499A2818 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x52F7C988 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x53AA7DCD EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x64A4F078 EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x66B5F795 EQ PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1DF4CCFC EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x2C7B09CB EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x39D4D8B1 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x3AC856E8 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x3B7D0946 EQ PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11C34F91 GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x11C34F91 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x131EDC46 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x1439069A EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x1631B194 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x16762EED EQ PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3934F81 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x6BFA938 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x74CB17A EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x793613C EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x10809F2A EQ PUSH2 0x34A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x260 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0x6BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x349A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP9 PUSH1 0xFF DUP7 AND SWAP9 PUSH2 0x100 SWAP1 SWAP7 DIV DUP7 AND SWAP8 SWAP5 DUP7 AND SWAP7 SWAP4 SWAP6 SWAP3 DUP4 AND SWAP5 SWAP2 SWAP4 SWAP2 DUP4 AND SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE SWAP8 ISZERO ISZERO PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP8 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP4 DUP6 AND PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP4 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE DUP2 AND PUSH1 0xE0 DUP5 ADD MSTORE AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0x260 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x366F JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x260 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x350D JUMP JUMPDEST PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH2 0x378 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x398 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x378 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x349A JUMP JUMPDEST PUSH1 0x70 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x3608 JUMP JUMPDEST PUSH2 0xE40 JUMP JUMPDEST PUSH2 0x398 PUSH1 0x6D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3FE PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x366F JUMP JUMPDEST PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x60 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x398 PUSH2 0x44F CALLDATASIZE PUSH1 0x4 PUSH2 0x36A1 JUMP JUMPDEST PUSH2 0x1311 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x36C6 JUMP JUMPDEST PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x349A JUMP JUMPDEST PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x260 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x366F JUMP JUMPDEST PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x49B CALLDATASIZE PUSH1 0x4 PUSH2 0x3761 JUMP JUMPDEST PUSH2 0x19F5 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x4AE CALLDATASIZE PUSH1 0x4 PUSH2 0x366F JUMP JUMPDEST PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0x398 PUSH1 0x6C SLOAD DUP2 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x349A JUMP JUMPDEST PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH2 0x378 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x349A JUMP JUMPDEST PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x398 PUSH2 0x1D5C JUMP JUMPDEST PUSH2 0x260 PUSH2 0x513 CALLDATASIZE PUSH1 0x4 PUSH2 0x3783 JUMP JUMPDEST PUSH2 0x1D8D JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH2 0x378 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x378 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x552 CALLDATASIZE PUSH1 0x4 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0x2094 JUMP JUMPDEST PUSH2 0x398 PUSH2 0x565 CALLDATASIZE PUSH1 0x4 PUSH2 0x36A1 JUMP JUMPDEST PUSH2 0x22F0 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH2 0x378 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x5E7 PUSH2 0x58B CALLDATASIZE PUSH1 0x4 PUSH2 0x349A JUMP JUMPDEST PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 PUSH1 0xFF DUP7 AND SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP8 DIV DUP8 AND SWAP7 SWAP6 DUP7 AND SWAP6 SWAP3 DUP4 AND SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE SWAP8 ISZERO ISZERO PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP8 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP4 DUP6 AND PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE DUP3 AND PUSH1 0xC0 DUP6 ADD MSTORE DUP2 AND PUSH1 0xE0 DUP5 ADD MSTORE AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x398 PUSH2 0x7D0 DUP2 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH2 0x378 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH2 0x378 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x398 PUSH2 0x678 CALLDATASIZE PUSH1 0x4 PUSH2 0x36A1 JUMP JUMPDEST PUSH2 0x23B0 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x68B CALLDATASIZE PUSH1 0x4 PUSH2 0x349A JUMP JUMPDEST PUSH2 0x2412 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x69E CALLDATASIZE PUSH1 0x4 PUSH2 0x35D1 JUMP JUMPDEST PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x398 PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH2 0x378 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x722 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x506F6F6C206E6F7420616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x77A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79E SWAP2 SWAP1 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x69 SLOAD DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1C57762B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE2BBB158 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x803 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP4 POP DUP5 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x863 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x3688 JUMP JUMPDEST PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x3989 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 ISZERO PUSH2 0x9C6 JUMPI PUSH1 0x0 PUSH2 0x2710 PUSH1 0x6C SLOAD DUP5 PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x396A JUMP JUMPDEST PUSH2 0x8B7 SWAP2 SWAP1 PUSH2 0x3948 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x8EF SWAP3 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x91D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6B55F25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB6B55F25 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x99C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x67 SLOAD PUSH2 0x9B8 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP CALLER DUP4 PUSH2 0x28EB JUMP JUMPDEST PUSH2 0x9C2 DUP2 DUP4 PUSH2 0x3989 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH2 0x9EE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP2 AND DUP5 DUP5 DUP10 PUSH2 0x2946 JUMP JUMPDEST PUSH32 0x7EDF56D31CE00A3E83F4E441E2D7FD675722C1CEB9B699C341EE1D158D4C3623 DUP3 PUSH2 0xA1A DUP4 DUP3 PUSH2 0x3989 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x9BC8BF75 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9BC8BF75 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0x3688 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xB28 JUMPI PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4E71D92D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xF56CA5BEF7B3B41CEC7558FE59C14FD8FD059BC321A4A1473662A801842E108E SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC4D JUMPI PUSH1 0x66 SLOAD PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0xB9B SWAP3 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBED SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6B55F25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB6B55F25 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0xC55 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x6A6F399BD745E41DFCC7AC713C8FD787618D2CB5BA6318526A21250C3854F595 SWAP1 PUSH1 0x20 ADD PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xC8D PUSH2 0xA3B JUMP JUMPDEST PUSH2 0xC95 PUSH2 0x2017 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCB2 JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCB6 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0xD19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD43 PUSH2 0x30DC JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x66 DUP1 SLOAD DUP3 AND DUP11 DUP5 AND OR SWAP1 SSTORE PUSH1 0x68 DUP1 SLOAD DUP3 AND DUP9 DUP5 AND OR SWAP1 SSTORE PUSH1 0x69 DUP1 SLOAD DUP3 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x6A DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6C DUP3 SWAP1 SSTORE PUSH1 0x6D DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xDB5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x9BC8BF75 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9BC8BF75 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE3B SWAP2 SWAP1 PUSH2 0x3688 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO PUSH2 0xE89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x536C697070616765206E6F7420696E2072616E6765 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD SWAP1 SWAP2 AND CALLER EQ PUSH2 0xEF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792068656C7065722063616E2077697468647261770000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF04 DUP6 DUP8 PUSH2 0x22F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF12 DUP3 DUP9 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0xF47 SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x68 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 POP PUSH4 0x95EA7B3 SWAP3 PUSH2 0xFB0 SWAP3 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1002 SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP PUSH1 0x69 SLOAD DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x441A3E7 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x441A3E70 SWAP2 PUSH2 0x103E SWAP2 DUP6 SWAP1 PUSH1 0x4 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x106C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10EA SWAP2 SWAP1 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x68 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9A5FCA3 DUP10 DUP5 PUSH1 0x64 PUSH2 0x110C DUP12 DUP14 PUSH2 0x396A JUMP JUMPDEST PUSH2 0x1116 SWAP2 SWAP1 PUSH2 0x3948 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE ADDRESS PUSH1 0x64 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1184 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP7 DUP5 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x119C SWAP2 SWAP1 PUSH2 0x3989 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP5 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11B7 SWAP2 SWAP1 PUSH2 0x3989 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x1256 SWAP1 DUP7 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1217 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123B SWAP2 SWAP1 PUSH2 0x3688 JUMP JUMPDEST PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x3989 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 SWAP1 PUSH2 0x28EB JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7715F7AEC5164B178862F96610F97644E00E0ABFCA2A6D3F425CC7D93284856F DUP10 PUSH1 0x40 MLOAD PUSH2 0x129B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6E DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x12BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 POP SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP2 DIV AND DUP8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD DUP4 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 MLOAD SWAP6 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 DUP8 SWAP5 SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0x18160DDD SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1386 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13AA SWAP2 SWAP1 PUSH2 0x3688 JUMP JUMPDEST SWAP1 POP PUSH2 0x13B6 DUP3 DUP3 PUSH2 0x396A JUMP JUMPDEST PUSH2 0x13C6 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x13E1 JUMP JUMPDEST DUP1 PUSH2 0x13D1 DUP4 DUP9 PUSH2 0x396A JUMP JUMPDEST PUSH2 0x13DB SWAP2 SWAP1 PUSH2 0x3948 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1411 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1489 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x506F6F6C20697320616C72656164792072656769737465726564206F72206163 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x74697665 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x478064B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x8F00C962 SWAP1 PUSH2 0x14C5 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3882 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x14F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1515 SWAP2 SWAP1 PUSH2 0x34B7 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D9F8773 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 AND SWAP1 PUSH4 0x3B3F0EE6 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x156C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1580 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15A4 SWAP2 SWAP1 PUSH2 0x34B7 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3A368CFB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE DUP1 DUP13 AND PUSH1 0x44 DUP4 ADD MSTORE ADDRESS PUSH1 0x64 DUP4 ADD MSTORE SWAP3 DUP4 AND PUSH1 0x84 DUP3 ADD MSTORE DUP3 DUP5 AND PUSH1 0xA4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0xC4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x746D19F6 SWAP1 PUSH1 0xE4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1644 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1668 SWAP2 SWAP1 PUSH2 0x34B7 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x40 MLOAD PUSH4 0x266F24B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP1 DUP5 AND PUSH1 0x64 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x266F24B7 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP11 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x6F PUSH1 0x0 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x73CCA62AB1B520C9715BF4E6C71E3E518C754E7148F65102F43289A7DF0EFEA6 DUP9 PUSH1 0x40 MLOAD PUSH2 0x18D8 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1915 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1963 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6E DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1978 JUMPI PUSH2 0x1978 PUSH2 0x39FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD PUSH1 0x6D PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x199E SWAP2 SWAP1 PUSH2 0x3989 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xB0 SHL NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH32 0x5493DB1723859B50D9E2F6DBCDA6DA662098EA59BF451AD2A31AD62289ED54A1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6E DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A34 JUMPI PUSH2 0x1A34 PUSH2 0x39FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP2 DUP2 PUSH1 0x1 ADD SLOAD GT ISZERO DUP1 ISZERO PUSH2 0x1A59 JUMPI POP DUP1 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x1A9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x56616C7565206E6F7420696E2072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST PUSH2 0x7D0 DUP2 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x6D SLOAD PUSH2 0x1AB0 SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0x1ABA SWAP2 SWAP1 PUSH2 0x3989 JUMP JUMPDEST GT ISZERO PUSH2 0x1AFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13585E08199959481C995858DA1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x2 ADD SLOAD PUSH1 0x6D SLOAD PUSH2 0x1B0D SWAP2 SWAP1 PUSH2 0x3989 JUMP JUMPDEST PUSH2 0x1B17 SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH1 0x6D SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x1FE2943BAEE27F47ADD82886C2200F910C749C461C9B63C5FE83901A53BDB49 SWAP2 PUSH2 0x1B62 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH2 0x1F4 DUP2 GT ISZERO PUSH2 0x1BDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0xACC2D8EACA40E8DEDE40D0D2CED PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x6C SLOAD DUP2 PUSH1 0x6D SLOAD PUSH2 0x1BED SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0x1BF7 SWAP2 SWAP1 PUSH2 0x3989 JUMP JUMPDEST PUSH1 0x6D DUP2 SWAP1 SSTORE PUSH2 0x7D0 LT ISZERO PUSH2 0x1C3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13505608119959481C995858DA1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x6C SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x6B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1D06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1E14151408185B1C9958591E481CD95D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH2 0xC95 PUSH1 0x0 PUSH2 0x310B JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH2 0x7D0 DUP5 PUSH1 0x6D SLOAD PUSH2 0x1DC8 SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST GT ISZERO PUSH2 0x1E08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13585E08199959481C995858DA1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST DUP4 DUP6 GT ISZERO DUP1 ISZERO PUSH2 0x1E18 JUMPI POP DUP6 DUP5 GT ISZERO JUMPDEST PUSH2 0x1E59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x56616C7565206E6F7420696E2072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 DUP2 MSTORE SWAP2 DUP2 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE DUP7 ISZERO ISZERO PUSH1 0x80 DUP6 ADD SWAP1 DUP2 MSTORE DUP7 ISZERO ISZERO PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0xC0 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x6E DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP8 MLOAD PUSH1 0x4 SWAP1 SWAP3 MUL PUSH32 0x9930D9FF0DEE0EF5CA2F7710EA66B8F84DD0F5F5351ECFFE72B952CD9DB7142A DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP8 MLOAD PUSH32 0x9930D9FF0DEE0EF5CA2F7710EA66B8F84DD0F5F5351ECFFE72B952CD9DB7142B DUP3 ADD SSTORE SWAP5 MLOAD PUSH32 0x9930D9FF0DEE0EF5CA2F7710EA66B8F84DD0F5F5351ECFFE72B952CD9DB7142C DUP7 ADD SSTORE SWAP2 MLOAD PUSH32 0x9930D9FF0DEE0EF5CA2F7710EA66B8F84DD0F5F5351ECFFE72B952CD9DB7142D SWAP1 SWAP5 ADD DUP1 SLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP7 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP8 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP8 SWAP1 SWAP8 AND PUSH2 0xFFFF PUSH1 0xA8 SHL NOT SWAP4 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP6 SWAP1 SWAP5 AND SWAP5 SWAP1 SWAP5 OR OR AND OR SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x6D DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1FB3 SWAP1 DUP5 SWAP1 PUSH2 0x3930 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE DUP4 ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x6B67376F541493B7DF6BCB8449800492E63D937EDFB837763A818D3BE5BAA283 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0xC95 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x205C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2070 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x210D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x216A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21E4 SWAP2 SWAP1 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0x2215 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x222F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2243 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2267 SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x47E7A411 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x8FCF4822 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22EA SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP1 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD DUP5 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 MLOAD SWAP7 SWAP8 SWAP4 SWAP7 SWAP2 SWAP6 DUP9 SWAP6 SWAP2 SWAP1 SWAP5 AND SWAP4 PUSH4 0x18160DDD SWAP4 DUP3 DUP2 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x238A SWAP2 SWAP1 PUSH2 0x3688 JUMP JUMPDEST SWAP1 POP PUSH2 0x2396 DUP3 DUP3 PUSH2 0x396A JUMP JUMPDEST PUSH2 0x23A5 JUMPI DUP6 SWAP4 POP POP POP POP PUSH2 0x13E1 JUMP JUMPDEST DUP2 PUSH2 0x13D1 DUP3 DUP9 PUSH2 0x396A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP1 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD DUP5 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 MLOAD SWAP7 SWAP8 SWAP4 SWAP7 SWAP2 SWAP6 DUP9 SWAP6 SWAP2 SWAP1 SWAP5 AND SWAP4 PUSH4 0x18160DDD SWAP4 DUP3 DUP2 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x243C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x24A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x719 JUMP JUMPDEST PUSH2 0x24AA DUP2 PUSH2 0x310B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x250B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x506F6F6C206E6F7420616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2567 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792068656C7065722063616E206465706F736974000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST PUSH2 0x257C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP4 ADDRESS DUP7 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x25B0 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2602 SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP PUSH1 0x68 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2434941D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x90D25074 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x265D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2671 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26F3 SWAP2 SWAP1 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x69 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x272D SWAP3 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x275B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x277F SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP PUSH1 0x69 SLOAD DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1C57762B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xE2BBB158 SWAP2 PUSH2 0x27BB SWAP2 DUP6 SWAP1 PUSH1 0x4 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x27F9 DUP6 DUP8 PUSH2 0x22F0 JUMP JUMPDEST PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x282E SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x285C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 DUP4 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2874 SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP4 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x288F SWAP2 SWAP1 PUSH2 0x3930 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x83DF459D706116D1B3F1C7B7F77CFEA4C635275F5D1E1A53827F536EF48DB77D DUP8 PUSH1 0x40 MLOAD PUSH2 0x28DB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2941 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x290A SWAP3 SWAP2 SWAP1 PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x3188 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6E SLOAD DUP2 LT ISZERO PUSH2 0x2EDF JUMPI PUSH1 0x0 PUSH1 0x6E DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2968 JUMPI PUSH2 0x2968 PUSH2 0x39FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2ECC JUMPI PUSH1 0x66 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x29B4 SWAP1 DUP10 PUSH2 0x396A JUMP JUMPDEST PUSH2 0x29BE SWAP2 SWAP1 PUSH2 0x3948 JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2ACA JUMPI PUSH1 0x66 SLOAD PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x2A0A SWAP3 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A5C SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6B55F25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB6B55F25 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP POP POP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2DE8 JUMPI PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x2B13 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B65 SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x47E7A411 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x8FCF4822 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BCA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BEE SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP DUP5 DUP1 ISZERO PUSH2 0x2C06 JUMPI POP PUSH1 0x6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2DE3 JUMPI PUSH1 0x6B SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x9F9106D1 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xD2472B1B SWAP4 DUP15 SWAP4 SWAP2 AND SWAP2 PUSH4 0x9F9106D1 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C98 SWAP2 SWAP1 PUSH2 0x34B7 JUMP JUMPDEST DUP6 DUP6 DUP9 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D22 SWAP2 SWAP1 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP6 AND PUSH1 0x24 DUP6 ADD MSTORE SWAP4 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x6C33B8F6B4F8BA21A4621CC77C018FBB4C7663CFA25929F02DC8D36ABDE462C5 SWAP3 POP PUSH2 0x2DDA SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x3832 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0x2EBD JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x2E1E SWAP3 SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E70 SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x6C33B8F6B4F8BA21A4621CC77C018FBB4C7663CFA25929F02DC8D36ABDE462C5 SWAP2 PUSH2 0x2EB4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x3832 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0x2EC7 DUP2 DUP8 PUSH2 0x3989 JUMP JUMPDEST SWAP6 POP POP POP JUMPDEST POP DUP1 PUSH2 0x2ED7 DUP2 PUSH2 0x39CC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2949 JUMP JUMPDEST POP PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0x2F12 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F64 SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x47E7A411 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP6 AND SWAP1 PUSH4 0x8FCF4822 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FEB SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST POP DUP1 DUP1 ISZERO PUSH2 0x3003 JUMPI POP PUSH1 0x6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x30D5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x6B SLOAD PUSH1 0x66 SLOAD PUSH1 0x4 DUP1 DUP5 ADD SLOAD SWAP5 MLOAD PUSH4 0xAC2DDB3B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP6 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 AND SWAP1 PUSH4 0xAC2DDB3B SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x307E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3092 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH32 0x6C33B8F6B4F8BA21A4621CC77C018FBB4C7663CFA25929F02DC8D36ABDE462C5 SWAP4 POP PUSH2 0x2007 SWAP3 POP DUP9 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP8 SWAP1 PUSH2 0x3832 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3103 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38E5 JUMP JUMPDEST PUSH2 0xC95 PUSH2 0x325A JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x22EA DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x290A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3832 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31DD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x328A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2941 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x31FB SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST PUSH2 0x2941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3281 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x38E5 JUMP JUMPDEST PUSH2 0xC95 CALLER PUSH2 0x310B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3299 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x32A3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3304 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x335B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3377 SWAP2 SWAP1 PUSH2 0x3816 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x33B4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x33B9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x33C9 DUP3 DUP3 DUP7 PUSH2 0x33D4 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x33E3 JUMPI POP DUP2 PUSH2 0x329C JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x33F3 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP2 SWAP1 PUSH2 0x386F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x341E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3439 JUMPI PUSH2 0x3439 PUSH2 0x3A13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3461 JUMPI PUSH2 0x3461 PUSH2 0x3A13 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x347A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x329C DUP2 PUSH2 0x3A29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x329C DUP2 PUSH2 0x3A29 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x34F2 DUP2 PUSH2 0x3A29 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3502 DUP2 PUSH2 0x3A29 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x3531 DUP2 PUSH2 0x3A29 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x3541 DUP2 PUSH2 0x3A29 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x3551 DUP2 PUSH2 0x3A29 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x3561 DUP2 PUSH2 0x3A29 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x3571 DUP2 PUSH2 0x3A29 JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x359B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x35A6 DUP2 PUSH2 0x3A29 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x35B6 DUP2 PUSH2 0x3A3E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x35C6 DUP2 PUSH2 0x3A3E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x35E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x35F1 DUP2 PUSH2 0x3A29 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x35C6 DUP2 PUSH2 0x3A29 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x361E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x3629 DUP2 PUSH2 0x3A29 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x3647 DUP2 PUSH2 0x3A29 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x329C DUP2 PUSH2 0x3A3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x369A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3502 DUP2 PUSH2 0x3A29 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x36DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x36F1 DUP2 PUSH2 0x3A29 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x3701 DUP2 PUSH2 0x3A29 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x371E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x372A DUP11 DUP4 DUP12 ADD PUSH2 0x340D JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374D DUP10 DUP3 DUP11 ADD PUSH2 0x340D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x379C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x37BC DUP2 PUSH2 0x3A29 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x37CC DUP2 PUSH2 0x3A3E JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH2 0x37DC DUP2 PUSH2 0x3A3E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3802 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x39A0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3828 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x39A0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x329C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x37EA JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3895 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x37EA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x38A7 DUP2 DUP6 PUSH2 0x37EA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3943 JUMPI PUSH2 0x3943 PUSH2 0x39E7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3965 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3984 JUMPI PUSH2 0x3984 PUSH2 0x39E7 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x399B JUMPI PUSH2 0x399B PUSH2 0x39E7 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39BB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x39A3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x22EA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x39E0 JUMPI PUSH2 0x39E0 PUSH2 0x39E7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x24AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x24AA JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH19 0x47C2D2F48C5EF097ED83245962CBB93CDB13A6 0xDD 0xCC 0xB5 0xDF MSTORE8 0xC SWAP5 PUSH31 0xDC5BA464736F6C634300080700330000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [593, 16127],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [593, 16127],
      "op": "CALLVALUE",
      "path": "12"
    },
    "6": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "7": {
      "fn": null,
      "offset": [593, 16127],
      "op": "ISZERO",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "12": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [593, 16127],
      "op": "REVERT",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17": {
      "fn": null,
      "offset": [593, 16127],
      "op": "POP",
      "path": "12"
    },
    "18": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [593, 16127],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "21": {
      "fn": null,
      "offset": [593, 16127],
      "op": "LT",
      "path": "12"
    },
    "22": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x248"
    },
    "25": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [593, 16127],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "29": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [593, 16127],
      "op": "SHR",
      "path": "12"
    },
    "32": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "33": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6AF66772"
    },
    "38": {
      "fn": null,
      "offset": [593, 16127],
      "op": "GT",
      "path": "12"
    },
    "39": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13B"
    },
    "42": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "43": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "44": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA296454F"
    },
    "49": {
      "fn": null,
      "offset": [593, 16127],
      "op": "GT",
      "path": "12"
    },
    "50": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB8"
    },
    "53": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "54": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "55": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF0806088"
    },
    "60": {
      "fn": null,
      "offset": [593, 16127],
      "op": "GT",
      "path": "12"
    },
    "61": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "65": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "66": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF0806088"
    },
    "71": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "72": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x66A"
    },
    "75": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "76": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "77": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "83": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x67D"
    },
    "86": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "87": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "88": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF45346DC"
    },
    "93": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "94": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x690"
    },
    "97": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "98": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "99": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF6A23320"
    },
    "104": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "105": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6A3"
    },
    "108": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "109": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "110": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFF4DE86F"
    },
    "115": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "116": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6AC"
    },
    "119": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "120": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "123": {
      "fn": null,
      "offset": [593, 16127],
      "op": "REVERT",
      "path": "12"
    },
    "124": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPDEST",
      "path": "12"
    },
    "125": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "126": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA296454F"
    },
    "131": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "132": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x56A"
    },
    "135": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "136": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "137": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA4063DBC"
    },
    "142": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "143": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x57D"
    },
    "146": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "147": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "148": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0xBC063E1A"
    },
    "153": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "154": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63B"
    },
    "157": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "158": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "159": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0xDEE91FCB"
    },
    "164": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "165": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x644"
    },
    "168": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "169": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "170": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0xED9A5540"
    },
    "175": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "176": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x657"
    },
    "179": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "180": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "183": {
      "fn": null,
      "offset": [593, 16127],
      "op": "REVERT",
      "path": "12"
    },
    "184": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPDEST",
      "path": "12"
    },
    "185": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "186": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8525A65A"
    },
    "191": {
      "fn": null,
      "offset": [593, 16127],
      "op": "GT",
      "path": "12"
    },
    "192": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "196": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "197": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8525A65A"
    },
    "202": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "203": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x518"
    },
    "206": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "207": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "208": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8DA5CB5B"
    },
    "213": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "214": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x52B"
    },
    "217": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "218": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "219": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x92B3F301"
    },
    "224": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "225": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x53C"
    },
    "228": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "229": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "230": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x97EAD276"
    },
    "235": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "236": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x544"
    },
    "239": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "240": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "241": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x99CEC548"
    },
    "246": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "247": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x557"
    },
    "250": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "251": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "253": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "254": {
      "fn": null,
      "offset": [593, 16127],
      "op": "REVERT",
      "path": "12"
    },
    "255": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPDEST",
      "path": "12"
    },
    "256": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "257": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6AF66772"
    },
    "262": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "263": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4CF"
    },
    "266": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "267": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "268": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6C1A3085"
    },
    "273": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "274": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4E2"
    },
    "277": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "278": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "279": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x715018A6"
    },
    "284": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "285": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4F5"
    },
    "288": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "289": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "290": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x746C5A9F"
    },
    "295": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "296": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4FD"
    },
    "299": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "300": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "301": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x7CA20928"
    },
    "306": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "307": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x505"
    },
    "310": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "311": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "313": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "314": {
      "fn": null,
      "offset": [593, 16127],
      "op": "REVERT",
      "path": "12"
    },
    "315": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPDEST",
      "path": "12"
    },
    "316": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "317": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1DF4CCFC"
    },
    "322": {
      "fn": null,
      "offset": [593, 16127],
      "op": "GT",
      "path": "12"
    },
    "323": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C9"
    },
    "326": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "327": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "328": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x499A2818"
    },
    "333": {
      "fn": null,
      "offset": [593, 16127],
      "op": "GT",
      "path": "12"
    },
    "334": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18D"
    },
    "337": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "338": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "339": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x499A2818"
    },
    "344": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "345": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x47A"
    },
    "348": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "349": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "350": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x52F7C988"
    },
    "355": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "356": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x48D"
    },
    "359": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "360": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "361": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x53AA7DCD"
    },
    "366": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "367": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4A0"
    },
    "370": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "371": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "372": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x64A4F078"
    },
    "377": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "378": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B3"
    },
    "381": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "382": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "383": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x66B5F795"
    },
    "388": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "389": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4BC"
    },
    "392": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "393": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "395": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "396": {
      "fn": null,
      "offset": [593, 16127],
      "op": "REVERT",
      "path": "12"
    },
    "397": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPDEST",
      "path": "12"
    },
    "398": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "399": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1DF4CCFC"
    },
    "404": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "405": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E2"
    },
    "408": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "409": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "410": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2C7B09CB"
    },
    "415": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "416": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3EB"
    },
    "419": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "420": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "421": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x39D4D8B1"
    },
    "426": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "427": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x441"
    },
    "430": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "431": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "432": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3AC856E8"
    },
    "437": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "438": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x454"
    },
    "441": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "442": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "443": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3B7D0946"
    },
    "448": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "449": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x467"
    },
    "452": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "453": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "456": {
      "fn": null,
      "offset": [593, 16127],
      "op": "REVERT",
      "path": "12"
    },
    "457": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPDEST",
      "path": "12"
    },
    "458": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "459": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x11C34F91"
    },
    "464": {
      "fn": null,
      "offset": [593, 16127],
      "op": "GT",
      "path": "12"
    },
    "465": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x210"
    },
    "468": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "469": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "470": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x11C34F91"
    },
    "475": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "476": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x352"
    },
    "479": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "480": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "481": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x131EDC46"
    },
    "486": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "487": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x365"
    },
    "490": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "491": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "492": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1439069A"
    },
    "497": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "498": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x390"
    },
    "501": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "502": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "503": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1631B194"
    },
    "508": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "509": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A6"
    },
    "512": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "513": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "514": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x16762EED"
    },
    "519": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "520": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3CF"
    },
    "523": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "524": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "526": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "527": {
      "fn": null,
      "offset": [593, 16127],
      "op": "REVERT",
      "path": "12"
    },
    "528": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPDEST",
      "path": "12"
    },
    "529": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "530": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3934F81"
    },
    "535": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "536": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24D"
    },
    "539": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "540": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "541": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6BFA938"
    },
    "546": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "547": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x262"
    },
    "550": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "551": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "552": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x74CB17A"
    },
    "557": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "558": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32F"
    },
    "561": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "562": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "563": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x793613C"
    },
    "568": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "569": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x337"
    },
    "572": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "573": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "574": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH4",
      "path": "12",
      "value": "0x10809F2A"
    },
    "579": {
      "fn": null,
      "offset": [593, 16127],
      "op": "EQ",
      "path": "12"
    },
    "580": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34A"
    },
    "583": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPI",
      "path": "12"
    },
    "584": {
      "fn": null,
      "offset": [593, 16127],
      "op": "JUMPDEST",
      "path": "12"
    },
    "585": {
      "fn": null,
      "offset": [593, 16127],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "587": {
      "fn": null,
      "offset": [593, 16127],
      "op": "DUP1",
      "path": "12"
    },
    "588": {
      "first_revert": true,
      "fn": null,
      "offset": [593, 16127],
      "op": "REVERT",
      "path": "12"
    },
    "589": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "JUMPDEST",
      "path": "12"
    },
    "590": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "593": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25B"
    },
    "596": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "597": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "599": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3586"
    },
    "602": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [6350, 7365],
      "op": "JUMP",
      "path": "12"
    },
    "603": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "JUMPDEST",
      "path": "12"
    },
    "604": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6BF"
    },
    "607": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [6350, 7365],
      "op": "JUMP",
      "path": "12"
    },
    "608": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "JUMPDEST",
      "path": "12"
    },
    "609": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "STOP",
      "path": "12"
    },
    "610": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "JUMPDEST",
      "path": "12"
    },
    "611": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2D6"
    },
    "614": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "PUSH2",
      "path": "12",
      "value": "0x270"
    },
    "617": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "618": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "620": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "PUSH2",
      "path": "12",
      "value": "0x349A"
    },
    "623": {
      "fn": "MainStaking.getPoolInfo",
      "jump": "i",
      "offset": [15261, 15987],
      "op": "JUMP",
      "path": "12"
    },
    "624": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "JUMPDEST",
      "path": "12"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "631": {
      "op": "SHL"
    },
    "632": {
      "op": "SUB"
    },
    "633": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15644, 15659],
      "op": "SWAP1",
      "path": "12"
    },
    "634": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15644, 15659],
      "op": "DUP2",
      "path": "12"
    },
    "635": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15644, 15659],
      "op": "AND",
      "path": "12"
    },
    "636": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15360, 15371],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "638": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15644, 15659],
      "op": "SWAP1",
      "path": "12"
    },
    "639": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15644, 15659],
      "op": "DUP2",
      "path": "12"
    },
    "640": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15644, 15659],
      "op": "MSTORE",
      "path": "12"
    },
    "641": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15644, 15649],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "643": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15644, 15659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "645": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15644, 15659],
      "op": "MSTORE",
      "path": "12"
    },
    "646": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15644, 15659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "648": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15644, 15659],
      "op": "SWAP1",
      "path": "12"
    },
    "649": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15644, 15659],
      "op": "KECCAK256",
      "path": "12"
    },
    "650": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15675, 15688],
      "op": "DUP1",
      "path": "12",
      "statement": 0
    },
    "651": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15675, 15688],
      "op": "SLOAD",
      "path": "12"
    },
    "652": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15709, 15727],
      "op": "PUSH1",
      "path": "12",
      "statement": 1,
      "value": "0x1"
    },
    "654": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15709, 15727],
      "op": "DUP3",
      "path": "12"
    },
    "655": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15709, 15727],
      "op": "ADD",
      "path": "12"
    },
    "656": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15709, 15727],
      "op": "SLOAD",
      "path": "12"
    },
    "657": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15775, 15794],
      "op": "PUSH1",
      "path": "12",
      "statement": 2,
      "value": "0x2"
    },
    "659": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15775, 15794],
      "op": "DUP4",
      "path": "12"
    },
    "660": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15775, 15794],
      "op": "ADD",
      "path": "12"
    },
    "661": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15775, 15794],
      "op": "SLOAD",
      "path": "12"
    },
    "662": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15813, 15829],
      "op": "PUSH1",
      "path": "12",
      "statement": 3,
      "value": "0x3"
    },
    "664": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15813, 15829],
      "op": "DUP5",
      "path": "12"
    },
    "665": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15813, 15829],
      "op": "ADD",
      "path": "12"
    },
    "666": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15813, 15829],
      "op": "SLOAD",
      "path": "12"
    },
    "667": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15849, 15871],
      "op": "PUSH1",
      "path": "12",
      "statement": 4,
      "value": "0x5"
    },
    "669": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15849, 15871],
      "op": "DUP6",
      "path": "12"
    },
    "670": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15849, 15871],
      "op": "ADD",
      "path": "12"
    },
    "671": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15849, 15871],
      "op": "SLOAD",
      "path": "12"
    },
    "672": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15888, 15902],
      "op": "PUSH1",
      "path": "12",
      "statement": 5,
      "value": "0x4"
    },
    "674": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15888, 15902],
      "op": "DUP7",
      "path": "12"
    },
    "675": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15888, 15902],
      "op": "ADD",
      "path": "12"
    },
    "676": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15888, 15902],
      "op": "SLOAD",
      "path": "12"
    },
    "677": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15927, 15945],
      "op": "PUSH1",
      "path": "12",
      "statement": 6,
      "value": "0x6"
    },
    "679": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15927, 15945],
      "op": "DUP8",
      "path": "12"
    },
    "680": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15927, 15945],
      "op": "ADD",
      "path": "12"
    },
    "681": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15927, 15945],
      "op": "SLOAD",
      "path": "12"
    },
    "682": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15964, 15980],
      "op": "PUSH1",
      "path": "12",
      "statement": 7,
      "value": "0x7"
    },
    "684": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15964, 15980],
      "op": "SWAP1",
      "path": "12"
    },
    "685": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15964, 15980],
      "op": "SWAP8",
      "path": "12"
    },
    "686": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15964, 15980],
      "op": "ADD",
      "path": "12"
    },
    "687": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15964, 15980],
      "op": "SLOAD",
      "path": "12"
    },
    "688": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15675, 15688],
      "op": "SWAP6",
      "path": "12"
    },
    "689": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15675, 15688],
      "op": "SWAP9",
      "path": "12"
    },
    "690": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15709, 15727],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "692": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15709, 15727],
      "op": "DUP7",
      "path": "12"
    },
    "693": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15709, 15727],
      "op": "AND",
      "path": "12"
    },
    "694": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15709, 15727],
      "op": "SWAP9",
      "path": "12"
    },
    "695": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15709, 15727],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "698": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15745, 15760],
      "op": "SWAP1",
      "path": "12",
      "statement": 8
    },
    "699": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15745, 15760],
      "op": "SWAP7",
      "path": "12"
    },
    "700": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15745, 15760],
      "op": "DIV",
      "path": "12"
    },
    "701": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15745, 15760],
      "op": "DUP7",
      "path": "12"
    },
    "702": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15745, 15760],
      "op": "AND",
      "path": "12"
    },
    "703": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15745, 15760],
      "op": "SWAP8",
      "path": "12"
    },
    "704": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15775, 15794],
      "op": "SWAP5",
      "path": "12"
    },
    "705": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15775, 15794],
      "op": "DUP7",
      "path": "12"
    },
    "706": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15775, 15794],
      "op": "AND",
      "path": "12"
    },
    "707": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15775, 15794],
      "op": "SWAP7",
      "path": "12"
    },
    "708": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15813, 15829],
      "op": "SWAP4",
      "path": "12"
    },
    "709": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15813, 15829],
      "op": "SWAP6",
      "path": "12"
    },
    "710": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15849, 15871],
      "op": "SWAP3",
      "path": "12"
    },
    "711": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15849, 15871],
      "op": "DUP4",
      "path": "12"
    },
    "712": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15849, 15871],
      "op": "AND",
      "path": "12"
    },
    "713": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15849, 15871],
      "op": "SWAP5",
      "path": "12"
    },
    "714": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15888, 15902],
      "op": "SWAP2",
      "path": "12"
    },
    "715": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15888, 15902],
      "op": "SWAP4",
      "path": "12"
    },
    "716": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15927, 15945],
      "op": "SWAP2",
      "path": "12"
    },
    "717": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15927, 15945],
      "op": "DUP4",
      "path": "12"
    },
    "718": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15927, 15945],
      "op": "AND",
      "path": "12"
    },
    "719": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15927, 15945],
      "op": "SWAP3",
      "path": "12"
    },
    "720": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15964, 15980],
      "op": "SWAP2",
      "path": "12"
    },
    "721": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15964, 15980],
      "op": "SWAP1",
      "path": "12"
    },
    "722": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15964, 15980],
      "op": "SWAP2",
      "path": "12"
    },
    "723": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15964, 15980],
      "op": "AND",
      "path": "12"
    },
    "724": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15964, 15980],
      "op": "SWAP1",
      "path": "12"
    },
    "725": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "JUMP",
      "path": "12"
    },
    "726": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "JUMPDEST",
      "path": "12"
    },
    "727": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "729": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "DUP1",
      "path": "12"
    },
    "730": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "MLOAD",
      "path": "12"
    },
    "731": {
      "op": "SWAP10"
    },
    "732": {
      "op": "DUP11"
    },
    "733": {
      "op": "MSTORE"
    },
    "734": {
      "op": "SWAP8"
    },
    "735": {
      "op": "ISZERO"
    },
    "736": {
      "op": "ISZERO"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "739": {
      "op": "DUP11"
    },
    "740": {
      "op": "ADD"
    },
    "741": {
      "op": "MSTORE"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "op": "SUB"
    },
    "750": {
      "op": "SWAP7"
    },
    "751": {
      "op": "DUP8"
    },
    "752": {
      "op": "AND"
    },
    "753": {
      "op": "SWAP8"
    },
    "754": {
      "op": "DUP10"
    },
    "755": {
      "op": "ADD"
    },
    "756": {
      "op": "SWAP8"
    },
    "757": {
      "op": "SWAP1"
    },
    "758": {
      "op": "SWAP8"
    },
    "759": {
      "op": "MSTORE"
    },
    "760": {
      "op": "SWAP4"
    },
    "761": {
      "op": "DUP6"
    },
    "762": {
      "op": "AND"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "765": {
      "op": "DUP9"
    },
    "766": {
      "op": "ADD"
    },
    "767": {
      "op": "MSTORE"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "770": {
      "op": "DUP8"
    },
    "771": {
      "op": "ADD"
    },
    "772": {
      "op": "SWAP3"
    },
    "773": {
      "op": "SWAP1"
    },
    "774": {
      "op": "SWAP3"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "DUP4"
    },
    "777": {
      "op": "AND"
    },
    "778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "780": {
      "op": "DUP7"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "op": "MSTORE"
    },
    "783": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "785": {
      "op": "DUP6"
    },
    "786": {
      "op": "ADD"
    },
    "787": {
      "op": "MSTORE"
    },
    "788": {
      "op": "DUP2"
    },
    "789": {
      "op": "AND"
    },
    "790": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "792": {
      "op": "DUP5"
    },
    "793": {
      "op": "ADD"
    },
    "794": {
      "op": "MSTORE"
    },
    "795": {
      "op": "AND"
    },
    "796": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "799": {
      "op": "DUP3"
    },
    "800": {
      "op": "ADD"
    },
    "801": {
      "op": "MSTORE"
    },
    "802": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "805": {
      "op": "ADD"
    },
    "806": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "JUMPDEST",
      "path": "12"
    },
    "807": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "809": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "MLOAD",
      "path": "12"
    },
    "810": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "DUP1",
      "path": "12"
    },
    "811": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "SWAP2",
      "path": "12"
    },
    "812": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "SUB",
      "path": "12"
    },
    "813": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "SWAP1",
      "path": "12"
    },
    "814": {
      "fn": "MainStaking.getPoolInfo",
      "offset": [15261, 15987],
      "op": "RETURN",
      "path": "12"
    },
    "815": {
      "fn": "MainStaking.claimPTP",
      "offset": [11561, 11789],
      "op": "JUMPDEST",
      "path": "12"
    },
    "816": {
      "fn": "MainStaking.claimPTP",
      "offset": [11561, 11789],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "819": {
      "fn": "MainStaking.claimPTP",
      "offset": [11561, 11789],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA3B"
    },
    "822": {
      "fn": "MainStaking.claimPTP",
      "jump": "i",
      "offset": [11561, 11789],
      "op": "JUMP",
      "path": "12"
    },
    "823": {
      "fn": "MainStaking.stakePTP",
      "offset": [11209, 11456],
      "op": "JUMPDEST",
      "path": "12"
    },
    "824": {
      "fn": "MainStaking.stakePTP",
      "offset": [11209, 11456],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "827": {
      "fn": "MainStaking.stakePTP",
      "offset": [11209, 11456],
      "op": "PUSH2",
      "path": "12",
      "value": "0x345"
    },
    "830": {
      "fn": "MainStaking.stakePTP",
      "offset": [11209, 11456],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "831": {
      "fn": "MainStaking.stakePTP",
      "offset": [11209, 11456],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "833": {
      "fn": "MainStaking.stakePTP",
      "offset": [11209, 11456],
      "op": "PUSH2",
      "path": "12",
      "value": "0x366F"
    },
    "836": {
      "fn": "MainStaking.stakePTP",
      "jump": "i",
      "offset": [11209, 11456],
      "op": "JUMP",
      "path": "12"
    },
    "837": {
      "fn": "MainStaking.stakePTP",
      "offset": [11209, 11456],
      "op": "JUMPDEST",
      "path": "12"
    },
    "838": {
      "fn": "MainStaking.stakePTP",
      "offset": [11209, 11456],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB5F"
    },
    "841": {
      "fn": "MainStaking.stakePTP",
      "jump": "i",
      "offset": [11209, 11456],
      "op": "JUMP",
      "path": "12"
    },
    "842": {
      "fn": "MainStaking.claimdAndStakePTP",
      "offset": [11795, 11883],
      "op": "JUMPDEST",
      "path": "12"
    },
    "843": {
      "fn": "MainStaking.claimdAndStakePTP",
      "offset": [11795, 11883],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "846": {
      "fn": "MainStaking.claimdAndStakePTP",
      "offset": [11795, 11883],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC85"
    },
    "849": {
      "fn": "MainStaking.claimdAndStakePTP",
      "jump": "i",
      "offset": [11795, 11883],
      "op": "JUMP",
      "path": "12"
    },
    "850": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "JUMPDEST",
      "path": "12"
    },
    "851": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "854": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "PUSH2",
      "path": "12",
      "value": "0x360"
    },
    "857": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "858": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "860": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "PUSH2",
      "path": "12",
      "value": "0x350D"
    },
    "863": {
      "fn": "MainStaking.__MainStaking_init",
      "jump": "i",
      "offset": [2455, 3129],
      "op": "JUMP",
      "path": "12"
    },
    "864": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "JUMPDEST",
      "path": "12"
    },
    "865": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC97"
    },
    "868": {
      "fn": "MainStaking.__MainStaking_init",
      "jump": "i",
      "offset": [2455, 3129],
      "op": "JUMP",
      "path": "12"
    },
    "869": {
      "offset": [763, 782],
      "op": "JUMPDEST",
      "path": "12"
    },
    "870": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [763, 782],
      "op": "PUSH1",
      "path": "12",
      "value": "0x67"
    },
    "872": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [763, 782],
      "op": "SLOAD",
      "path": "12"
    },
    "873": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [763, 782],
      "op": "PUSH2",
      "path": "12",
      "value": "0x378"
    },
    "876": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [763, 782],
      "op": "SWAP1",
      "path": "12"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "883": {
      "op": "SHL"
    },
    "884": {
      "op": "SUB"
    },
    "885": {
      "offset": [763, 782],
      "op": "AND",
      "path": "12"
    },
    "886": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [763, 782],
      "op": "DUP2",
      "path": "12"
    },
    "887": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [763, 782],
      "op": "JUMP",
      "path": "12"
    },
    "888": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [763, 782],
      "op": "JUMPDEST",
      "path": "12"
    },
    "889": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [763, 782],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "891": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [763, 782],
      "op": "MLOAD",
      "path": "12"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "898": {
      "op": "SHL"
    },
    "899": {
      "op": "SUB"
    },
    "900": {
      "op": "SWAP1"
    },
    "901": {
      "op": "SWAP2"
    },
    "902": {
      "op": "AND"
    },
    "903": {
      "op": "DUP2"
    },
    "904": {
      "op": "MSTORE"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "907": {
      "op": "ADD"
    },
    "908": {
      "offset": [763, 782],
      "op": "PUSH2",
      "path": "12",
      "value": "0x326"
    },
    "911": {
      "op": "JUMP"
    },
    "912": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11889, 12021],
      "op": "JUMPDEST",
      "path": "12"
    },
    "913": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11889, 12021],
      "op": "PUSH2",
      "path": "12",
      "value": "0x398"
    },
    "916": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11889, 12021],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDBE"
    },
    "919": {
      "fn": "MainStaking.getStakedPtp",
      "jump": "i",
      "offset": [11889, 12021],
      "op": "JUMP",
      "path": "12"
    },
    "920": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11889, 12021],
      "op": "JUMPDEST",
      "path": "12"
    },
    "921": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11889, 12021],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "923": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11889, 12021],
      "op": "MLOAD",
      "path": "12"
    },
    "924": {
      "op": "SWAP1"
    },
    "925": {
      "op": "DUP2"
    },
    "926": {
      "op": "MSTORE"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "929": {
      "op": "ADD"
    },
    "930": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11889, 12021],
      "op": "PUSH2",
      "path": "12",
      "value": "0x326"
    },
    "933": {
      "op": "JUMP"
    },
    "934": {
      "offset": [1763, 1813],
      "op": "JUMPDEST",
      "path": "12"
    },
    "935": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "PUSH2",
      "path": "12",
      "value": "0x378"
    },
    "938": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B4"
    },
    "941": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "942": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "944": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "PUSH2",
      "path": "12",
      "value": "0x349A"
    },
    "947": {
      "fn": "MainStaking.getStakedPtp",
      "jump": "i",
      "offset": [1763, 1813],
      "op": "JUMP",
      "path": "12"
    },
    "948": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "JUMPDEST",
      "path": "12"
    },
    "949": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "PUSH1",
      "path": "12",
      "value": "0x70"
    },
    "951": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "953": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "MSTORE",
      "path": "12"
    },
    "954": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "956": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "SWAP1",
      "path": "12"
    },
    "957": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "DUP2",
      "path": "12"
    },
    "958": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "MSTORE",
      "path": "12"
    },
    "959": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "961": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "SWAP1",
      "path": "12"
    },
    "962": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "KECCAK256",
      "path": "12"
    },
    "963": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "SLOAD",
      "path": "12"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "970": {
      "op": "SHL"
    },
    "971": {
      "op": "SUB"
    },
    "972": {
      "offset": [1763, 1813],
      "op": "AND",
      "path": "12"
    },
    "973": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "DUP2",
      "path": "12"
    },
    "974": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [1763, 1813],
      "op": "JUMP",
      "path": "12"
    },
    "975": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "JUMPDEST",
      "path": "12"
    },
    "976": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "979": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3DD"
    },
    "982": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "983": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "985": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3608"
    },
    "988": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [9943, 11203],
      "op": "JUMP",
      "path": "12"
    },
    "989": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "JUMPDEST",
      "path": "12"
    },
    "990": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE40"
    },
    "993": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [9943, 11203],
      "op": "JUMP",
      "path": "12"
    },
    "994": {
      "offset": [1120, 1143],
      "op": "JUMPDEST",
      "path": "12"
    },
    "995": {
      "fn": "MainStaking.withdraw",
      "offset": [1120, 1143],
      "op": "PUSH2",
      "path": "12",
      "value": "0x398"
    },
    "998": {
      "fn": "MainStaking.withdraw",
      "offset": [1120, 1143],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6D"
    },
    "1000": {
      "fn": "MainStaking.withdraw",
      "offset": [1120, 1143],
      "op": "SLOAD",
      "path": "12"
    },
    "1001": {
      "fn": "MainStaking.withdraw",
      "offset": [1120, 1143],
      "op": "DUP2",
      "path": "12"
    },
    "1002": {
      "fn": "MainStaking.withdraw",
      "offset": [1120, 1143],
      "op": "JUMP",
      "path": "12"
    },
    "1003": {
      "offset": [1447, 1469],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1004": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FE"
    },
    "1007": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F9"
    },
    "1010": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1011": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1013": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH2",
      "path": "12",
      "value": "0x366F"
    },
    "1016": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [1447, 1469],
      "op": "JUMP",
      "path": "12"
    },
    "1017": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1018": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12AD"
    },
    "1021": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [1447, 1469],
      "op": "JUMP",
      "path": "12"
    },
    "1022": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1023": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1025": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DUP1",
      "path": "12"
    },
    "1026": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "MLOAD",
      "path": "12"
    },
    "1027": {
      "op": "SWAP8"
    },
    "1028": {
      "op": "DUP9"
    },
    "1029": {
      "op": "MSTORE"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1032": {
      "op": "DUP9"
    },
    "1033": {
      "op": "ADD"
    },
    "1034": {
      "op": "SWAP7"
    },
    "1035": {
      "op": "SWAP1"
    },
    "1036": {
      "op": "SWAP7"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "SWAP5"
    },
    "1039": {
      "op": "DUP7"
    },
    "1040": {
      "op": "ADD"
    },
    "1041": {
      "op": "SWAP4"
    },
    "1042": {
      "op": "SWAP1"
    },
    "1043": {
      "op": "SWAP4"
    },
    "1044": {
      "op": "MSTORE"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "op": "SUB"
    },
    "1053": {
      "op": "SWAP1"
    },
    "1054": {
      "op": "SWAP2"
    },
    "1055": {
      "op": "AND"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1058": {
      "op": "DUP6"
    },
    "1059": {
      "op": "ADD"
    },
    "1060": {
      "op": "MSTORE"
    },
    "1061": {
      "op": "ISZERO"
    },
    "1062": {
      "op": "ISZERO"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1065": {
      "op": "DUP5"
    },
    "1066": {
      "op": "ADD"
    },
    "1067": {
      "op": "MSTORE"
    },
    "1068": {
      "op": "ISZERO"
    },
    "1069": {
      "op": "ISZERO"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1072": {
      "op": "DUP4"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "MSTORE"
    },
    "1075": {
      "op": "ISZERO"
    },
    "1076": {
      "op": "ISZERO"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1079": {
      "op": "DUP3"
    },
    "1080": {
      "op": "ADD"
    },
    "1081": {
      "op": "MSTORE"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1084": {
      "op": "ADD"
    },
    "1085": {
      "offset": [1447, 1469],
      "op": "PUSH2",
      "path": "12",
      "value": "0x326"
    },
    "1088": {
      "op": "JUMP"
    },
    "1089": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1090": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "PUSH2",
      "path": "12",
      "value": "0x398"
    },
    "1093": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "PUSH2",
      "path": "12",
      "value": "0x44F"
    },
    "1096": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1097": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1099": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36A1"
    },
    "1102": {
      "fn": "MainStaking.getLPTokensForShares",
      "jump": "i",
      "offset": [12312, 12743],
      "op": "JUMP",
      "path": "12"
    },
    "1103": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1104": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1311"
    },
    "1107": {
      "fn": "MainStaking.getLPTokensForShares",
      "jump": "i",
      "offset": [12312, 12743],
      "op": "JUMP",
      "path": "12"
    },
    "1108": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1109": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1112": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "PUSH2",
      "path": "12",
      "value": "0x462"
    },
    "1115": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1116": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1118": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36C6"
    },
    "1121": {
      "fn": "MainStaking.registerPool",
      "jump": "i",
      "offset": [13794, 15255],
      "op": "JUMP",
      "path": "12"
    },
    "1122": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1123": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13E7"
    },
    "1126": {
      "fn": "MainStaking.registerPool",
      "jump": "i",
      "offset": [13794, 15255],
      "op": "JUMP",
      "path": "12"
    },
    "1127": {
      "fn": "MainStaking.removePool",
      "offset": [15993, 16093],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1128": {
      "fn": "MainStaking.removePool",
      "offset": [15993, 16093],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1131": {
      "fn": "MainStaking.removePool",
      "offset": [15993, 16093],
      "op": "PUSH2",
      "path": "12",
      "value": "0x475"
    },
    "1134": {
      "fn": "MainStaking.removePool",
      "offset": [15993, 16093],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1135": {
      "fn": "MainStaking.removePool",
      "offset": [15993, 16093],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1137": {
      "fn": "MainStaking.removePool",
      "offset": [15993, 16093],
      "op": "PUSH2",
      "path": "12",
      "value": "0x349A"
    },
    "1140": {
      "fn": "MainStaking.removePool",
      "jump": "i",
      "offset": [15993, 16093],
      "op": "JUMP",
      "path": "12"
    },
    "1141": {
      "fn": "MainStaking.removePool",
      "offset": [15993, 16093],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1142": {
      "fn": "MainStaking.removePool",
      "offset": [15993, 16093],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18EB"
    },
    "1145": {
      "fn": "MainStaking.removePool",
      "jump": "i",
      "offset": [15993, 16093],
      "op": "JUMP",
      "path": "12"
    },
    "1146": {
      "fn": "MainStaking.removeFee",
      "offset": [4501, 4698],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1147": {
      "fn": "MainStaking.removeFee",
      "offset": [4501, 4698],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1150": {
      "fn": "MainStaking.removeFee",
      "offset": [4501, 4698],
      "op": "PUSH2",
      "path": "12",
      "value": "0x488"
    },
    "1153": {
      "fn": "MainStaking.removeFee",
      "offset": [4501, 4698],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1154": {
      "fn": "MainStaking.removeFee",
      "offset": [4501, 4698],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1156": {
      "fn": "MainStaking.removeFee",
      "offset": [4501, 4698],
      "op": "PUSH2",
      "path": "12",
      "value": "0x366F"
    },
    "1159": {
      "fn": "MainStaking.removeFee",
      "jump": "i",
      "offset": [4501, 4698],
      "op": "JUMP",
      "path": "12"
    },
    "1160": {
      "fn": "MainStaking.removeFee",
      "offset": [4501, 4698],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1161": {
      "fn": "MainStaking.removeFee",
      "offset": [4501, 4698],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1939"
    },
    "1164": {
      "fn": "MainStaking.removeFee",
      "jump": "i",
      "offset": [4501, 4698],
      "op": "JUMP",
      "path": "12"
    },
    "1165": {
      "fn": "MainStaking.setFee",
      "offset": [4067, 4495],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1166": {
      "fn": "MainStaking.setFee",
      "offset": [4067, 4495],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1169": {
      "fn": "MainStaking.setFee",
      "offset": [4067, 4495],
      "op": "PUSH2",
      "path": "12",
      "value": "0x49B"
    },
    "1172": {
      "fn": "MainStaking.setFee",
      "offset": [4067, 4495],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1173": {
      "fn": "MainStaking.setFee",
      "offset": [4067, 4495],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1175": {
      "fn": "MainStaking.setFee",
      "offset": [4067, 4495],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3761"
    },
    "1178": {
      "fn": "MainStaking.setFee",
      "jump": "i",
      "offset": [4067, 4495],
      "op": "JUMP",
      "path": "12"
    },
    "1179": {
      "fn": "MainStaking.setFee",
      "offset": [4067, 4495],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1180": {
      "fn": "MainStaking.setFee",
      "offset": [4067, 4495],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19F5"
    },
    "1183": {
      "fn": "MainStaking.setFee",
      "jump": "i",
      "offset": [4067, 4495],
      "op": "JUMP",
      "path": "12"
    },
    "1184": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4704, 5042],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1185": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4704, 5042],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1188": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4704, 5042],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4AE"
    },
    "1191": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4704, 5042],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1192": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4704, 5042],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1194": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4704, 5042],
      "op": "PUSH2",
      "path": "12",
      "value": "0x366F"
    },
    "1197": {
      "fn": "MainStaking.setCallerFee",
      "jump": "i",
      "offset": [4704, 5042],
      "op": "JUMP",
      "path": "12"
    },
    "1198": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4704, 5042],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1199": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4704, 5042],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B6F"
    },
    "1202": {
      "fn": "MainStaking.setCallerFee",
      "jump": "i",
      "offset": [4704, 5042],
      "op": "JUMP",
      "path": "12"
    },
    "1203": {
      "offset": [1039, 1064],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1204": {
      "fn": "MainStaking.setCallerFee",
      "offset": [1039, 1064],
      "op": "PUSH2",
      "path": "12",
      "value": "0x398"
    },
    "1207": {
      "fn": "MainStaking.setCallerFee",
      "offset": [1039, 1064],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6C"
    },
    "1209": {
      "fn": "MainStaking.setCallerFee",
      "offset": [1039, 1064],
      "op": "SLOAD",
      "path": "12"
    },
    "1210": {
      "fn": "MainStaking.setCallerFee",
      "offset": [1039, 1064],
      "op": "DUP2",
      "path": "12"
    },
    "1211": {
      "fn": "MainStaking.setCallerFee",
      "offset": [1039, 1064],
      "op": "JUMP",
      "path": "12"
    },
    "1212": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3278, 3382],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1213": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3278, 3382],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1216": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3278, 3382],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4CA"
    },
    "1219": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3278, 3382],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1220": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3278, 3382],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1222": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3278, 3382],
      "op": "PUSH2",
      "path": "12",
      "value": "0x349A"
    },
    "1225": {
      "fn": "MainStaking.setComputeAPR",
      "jump": "i",
      "offset": [3278, 3382],
      "op": "JUMP",
      "path": "12"
    },
    "1226": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3278, 3382],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1227": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3278, 3382],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C44"
    },
    "1230": {
      "fn": "MainStaking.setComputeAPR",
      "jump": "i",
      "offset": [3278, 3382],
      "op": "JUMP",
      "path": "12"
    },
    "1231": {
      "offset": [739, 757],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1232": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [739, 757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x66"
    },
    "1234": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [739, 757],
      "op": "SLOAD",
      "path": "12"
    },
    "1235": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [739, 757],
      "op": "PUSH2",
      "path": "12",
      "value": "0x378"
    },
    "1238": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [739, 757],
      "op": "SWAP1",
      "path": "12"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "offset": [739, 757],
      "op": "AND",
      "path": "12"
    },
    "1248": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [739, 757],
      "op": "DUP2",
      "path": "12"
    },
    "1249": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [739, 757],
      "op": "JUMP",
      "path": "12"
    },
    "1250": {
      "fn": "MainStaking.setXPTP",
      "offset": [3135, 3272],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1251": {
      "fn": "MainStaking.setXPTP",
      "offset": [3135, 3272],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1254": {
      "fn": "MainStaking.setXPTP",
      "offset": [3135, 3272],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4F0"
    },
    "1257": {
      "fn": "MainStaking.setXPTP",
      "offset": [3135, 3272],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1258": {
      "fn": "MainStaking.setXPTP",
      "offset": [3135, 3272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1260": {
      "fn": "MainStaking.setXPTP",
      "offset": [3135, 3272],
      "op": "PUSH2",
      "path": "12",
      "value": "0x349A"
    },
    "1263": {
      "fn": "MainStaking.setXPTP",
      "jump": "i",
      "offset": [3135, 3272],
      "op": "JUMP",
      "path": "12"
    },
    "1264": {
      "fn": "MainStaking.setXPTP",
      "offset": [3135, 3272],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1265": {
      "fn": "MainStaking.setXPTP",
      "offset": [3135, 3272],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C90"
    },
    "1268": {
      "fn": "MainStaking.setXPTP",
      "jump": "i",
      "offset": [3135, 3272],
      "op": "JUMP",
      "path": "12"
    },
    "1269": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [1909, 2010],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1270": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [1909, 2010],
      "op": "PUSH2",
      "path": "20",
      "value": "0x260"
    },
    "1273": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [1909, 2010],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D28"
    },
    "1276": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "i",
      "offset": [1909, 2010],
      "op": "JUMP",
      "path": "20"
    },
    "1277": {
      "fn": "MainStaking.getVePtp",
      "offset": [12027, 12147],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1278": {
      "fn": "MainStaking.getVePtp",
      "offset": [12027, 12147],
      "op": "PUSH2",
      "path": "12",
      "value": "0x398"
    },
    "1281": {
      "fn": "MainStaking.getVePtp",
      "offset": [12027, 12147],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D5C"
    },
    "1284": {
      "fn": "MainStaking.getVePtp",
      "jump": "i",
      "offset": [12027, 12147],
      "op": "JUMP",
      "path": "12"
    },
    "1285": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1286": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1289": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "PUSH2",
      "path": "12",
      "value": "0x513"
    },
    "1292": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1293": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1295": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3783"
    },
    "1298": {
      "fn": "MainStaking.addFee",
      "jump": "i",
      "offset": [3388, 4061],
      "op": "JUMP",
      "path": "12"
    },
    "1299": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1300": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D8D"
    },
    "1303": {
      "fn": "MainStaking.addFee",
      "jump": "i",
      "offset": [3388, 4061],
      "op": "JUMP",
      "path": "12"
    },
    "1304": {
      "offset": [906, 931],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1305": {
      "fn": "MainStaking.addFee",
      "offset": [906, 931],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6B"
    },
    "1307": {
      "fn": "MainStaking.addFee",
      "offset": [906, 931],
      "op": "SLOAD",
      "path": "12"
    },
    "1308": {
      "fn": "MainStaking.addFee",
      "offset": [906, 931],
      "op": "PUSH2",
      "path": "12",
      "value": "0x378"
    },
    "1311": {
      "fn": "MainStaking.addFee",
      "offset": [906, 931],
      "op": "SWAP1",
      "path": "12"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1318": {
      "op": "SHL"
    },
    "1319": {
      "op": "SUB"
    },
    "1320": {
      "offset": [906, 931],
      "op": "AND",
      "path": "12"
    },
    "1321": {
      "fn": "MainStaking.addFee",
      "offset": [906, 931],
      "op": "DUP2",
      "path": "12"
    },
    "1322": {
      "fn": "MainStaking.addFee",
      "offset": [906, 931],
      "op": "JUMP",
      "path": "12"
    },
    "1323": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [1278, 1363],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1324": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [1350, 1356],
      "op": "PUSH1",
      "path": "20",
      "statement": 9,
      "value": "0x33"
    },
    "1326": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [1350, 1356],
      "op": "SLOAD",
      "path": "20"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1333": {
      "op": "SHL"
    },
    "1334": {
      "op": "SUB"
    },
    "1335": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [1350, 1356],
      "op": "AND",
      "path": "20"
    },
    "1336": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [1278, 1363],
      "op": "PUSH2",
      "path": "20",
      "value": "0x378"
    },
    "1339": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [1278, 1363],
      "op": "JUMP",
      "path": "20"
    },
    "1340": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11462, 11555],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1341": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11462, 11555],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1344": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11462, 11555],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2017"
    },
    "1347": {
      "fn": "MainStaking.stakeAllPtp",
      "jump": "i",
      "offset": [11462, 11555],
      "op": "JUMP",
      "path": "12"
    },
    "1348": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9535, 9937],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1349": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9535, 9937],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1352": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9535, 9937],
      "op": "PUSH2",
      "path": "12",
      "value": "0x552"
    },
    "1355": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9535, 9937],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1356": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9535, 9937],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1358": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9535, 9937],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34D4"
    },
    "1361": {
      "fn": "MainStaking.sendTokenRewards",
      "jump": "i",
      "offset": [9535, 9937],
      "op": "JUMP",
      "path": "12"
    },
    "1362": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9535, 9937],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1363": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9535, 9937],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2094"
    },
    "1366": {
      "fn": "MainStaking.sendTokenRewards",
      "jump": "i",
      "offset": [9535, 9937],
      "op": "JUMP",
      "path": "12"
    },
    "1367": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12749, 13189],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1368": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12749, 13189],
      "op": "PUSH2",
      "path": "12",
      "value": "0x398"
    },
    "1371": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12749, 13189],
      "op": "PUSH2",
      "path": "12",
      "value": "0x565"
    },
    "1374": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12749, 13189],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1375": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12749, 13189],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1377": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12749, 13189],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36A1"
    },
    "1380": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "jump": "i",
      "offset": [12749, 13189],
      "op": "JUMP",
      "path": "12"
    },
    "1381": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12749, 13189],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1382": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12749, 13189],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22F0"
    },
    "1385": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "jump": "i",
      "offset": [12749, 13189],
      "op": "JUMP",
      "path": "12"
    },
    "1386": {
      "offset": [857, 881],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1387": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [857, 881],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6A"
    },
    "1389": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [857, 881],
      "op": "SLOAD",
      "path": "12"
    },
    "1390": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [857, 881],
      "op": "PUSH2",
      "path": "12",
      "value": "0x378"
    },
    "1393": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [857, 881],
      "op": "SWAP1",
      "path": "12"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1400": {
      "op": "SHL"
    },
    "1401": {
      "op": "SUB"
    },
    "1402": {
      "offset": [857, 881],
      "op": "AND",
      "path": "12"
    },
    "1403": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [857, 881],
      "op": "DUP2",
      "path": "12"
    },
    "1404": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [857, 881],
      "op": "JUMP",
      "path": "12"
    },
    "1405": {
      "offset": [1720, 1757],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1406": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5E7"
    },
    "1409": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH2",
      "path": "12",
      "value": "0x58B"
    },
    "1412": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1413": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1415": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH2",
      "path": "12",
      "value": "0x349A"
    },
    "1418": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "jump": "i",
      "offset": [1720, 1757],
      "op": "JUMP",
      "path": "12"
    },
    "1419": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1420": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "1422": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1424": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "MSTORE",
      "path": "12"
    },
    "1425": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1427": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP1",
      "path": "12"
    },
    "1428": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP2",
      "path": "12"
    },
    "1429": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "MSTORE",
      "path": "12"
    },
    "1430": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1432": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP1",
      "path": "12"
    },
    "1433": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "KECCAK256",
      "path": "12"
    },
    "1434": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP1",
      "path": "12"
    },
    "1435": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SLOAD",
      "path": "12"
    },
    "1436": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1438": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP3",
      "path": "12"
    },
    "1439": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "ADD",
      "path": "12"
    },
    "1440": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SLOAD",
      "path": "12"
    },
    "1441": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1443": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP4",
      "path": "12"
    },
    "1444": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "ADD",
      "path": "12"
    },
    "1445": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SLOAD",
      "path": "12"
    },
    "1446": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "1448": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP5",
      "path": "12"
    },
    "1449": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "ADD",
      "path": "12"
    },
    "1450": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SLOAD",
      "path": "12"
    },
    "1451": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1453": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP6",
      "path": "12"
    },
    "1454": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "ADD",
      "path": "12"
    },
    "1455": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SLOAD",
      "path": "12"
    },
    "1456": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "1458": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP7",
      "path": "12"
    },
    "1459": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "ADD",
      "path": "12"
    },
    "1460": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SLOAD",
      "path": "12"
    },
    "1461": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "1463": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP8",
      "path": "12"
    },
    "1464": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "ADD",
      "path": "12"
    },
    "1465": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SLOAD",
      "path": "12"
    },
    "1466": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "1468": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP1",
      "path": "12"
    },
    "1469": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP8",
      "path": "12"
    },
    "1470": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "ADD",
      "path": "12"
    },
    "1471": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SLOAD",
      "path": "12"
    },
    "1472": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP6",
      "path": "12"
    },
    "1473": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP7",
      "path": "12"
    },
    "1474": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "1476": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP7",
      "path": "12"
    },
    "1477": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "AND",
      "path": "12"
    },
    "1478": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP7",
      "path": "12"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1485": {
      "op": "SHL"
    },
    "1486": {
      "op": "SUB"
    },
    "1487": {
      "offset": [1720, 1757],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "1490": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP1",
      "path": "12"
    },
    "1491": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP8",
      "path": "12"
    },
    "1492": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DIV",
      "path": "12"
    },
    "1493": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP8",
      "path": "12"
    },
    "1494": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "AND",
      "path": "12"
    },
    "1495": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP7",
      "path": "12"
    },
    "1496": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP6",
      "path": "12"
    },
    "1497": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP7",
      "path": "12"
    },
    "1498": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "AND",
      "path": "12"
    },
    "1499": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP6",
      "path": "12"
    },
    "1500": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP3",
      "path": "12"
    },
    "1501": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP4",
      "path": "12"
    },
    "1502": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "AND",
      "path": "12"
    },
    "1503": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP3",
      "path": "12"
    },
    "1504": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP2",
      "path": "12"
    },
    "1505": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP3",
      "path": "12"
    },
    "1506": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "AND",
      "path": "12"
    },
    "1507": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "SWAP2",
      "path": "12"
    },
    "1508": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "AND",
      "path": "12"
    },
    "1509": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP10",
      "path": "12"
    },
    "1510": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "JUMP",
      "path": "12"
    },
    "1511": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1512": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1514": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "DUP1",
      "path": "12"
    },
    "1515": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [1720, 1757],
      "op": "MLOAD",
      "path": "12"
    },
    "1516": {
      "op": "SWAP10"
    },
    "1517": {
      "op": "DUP11"
    },
    "1518": {
      "op": "MSTORE"
    },
    "1519": {
      "op": "SWAP8"
    },
    "1520": {
      "op": "ISZERO"
    },
    "1521": {
      "op": "ISZERO"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1524": {
      "op": "DUP11"
    },
    "1525": {
      "op": "ADD"
    },
    "1526": {
      "op": "MSTORE"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1533": {
      "op": "SHL"
    },
    "1534": {
      "op": "SUB"
    },
    "1535": {
      "op": "SWAP7"
    },
    "1536": {
      "op": "DUP8"
    },
    "1537": {
      "op": "AND"
    },
    "1538": {
      "op": "SWAP8"
    },
    "1539": {
      "op": "DUP10"
    },
    "1540": {
      "op": "ADD"
    },
    "1541": {
      "op": "SWAP8"
    },
    "1542": {
      "op": "SWAP1"
    },
    "1543": {
      "op": "SWAP8"
    },
    "1544": {
      "op": "MSTORE"
    },
    "1545": {
      "op": "SWAP4"
    },
    "1546": {
      "op": "DUP6"
    },
    "1547": {
      "op": "AND"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1550": {
      "op": "DUP9"
    },
    "1551": {
      "op": "ADD"
    },
    "1552": {
      "op": "MSTORE"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1555": {
      "op": "DUP8"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "op": "SWAP3"
    },
    "1558": {
      "op": "SWAP1"
    },
    "1559": {
      "op": "SWAP3"
    },
    "1560": {
      "op": "MSTORE"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1563": {
      "op": "DUP7"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "MSTORE"
    },
    "1566": {
      "op": "DUP3"
    },
    "1567": {
      "op": "AND"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1570": {
      "op": "DUP6"
    },
    "1571": {
      "op": "ADD"
    },
    "1572": {
      "op": "MSTORE"
    },
    "1573": {
      "op": "DUP2"
    },
    "1574": {
      "op": "AND"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1577": {
      "op": "DUP5"
    },
    "1578": {
      "op": "ADD"
    },
    "1579": {
      "op": "MSTORE"
    },
    "1580": {
      "op": "AND"
    },
    "1581": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1584": {
      "op": "DUP3"
    },
    "1585": {
      "op": "ADD"
    },
    "1586": {
      "op": "MSTORE"
    },
    "1587": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "1590": {
      "op": "ADD"
    },
    "1591": {
      "offset": [1720, 1757],
      "op": "PUSH2",
      "path": "12",
      "value": "0x326"
    },
    "1594": {
      "op": "JUMP"
    },
    "1595": {
      "offset": [995, 1033],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1596": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [995, 1033],
      "op": "PUSH2",
      "path": "12",
      "value": "0x398"
    },
    "1599": {
      "offset": [1029, 1033],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7D0"
    },
    "1602": {
      "offset": [995, 1033],
      "op": "DUP2",
      "path": "12"
    },
    "1603": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [995, 1033],
      "op": "JUMP",
      "path": "12"
    },
    "1604": {
      "offset": [788, 816],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1605": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [788, 816],
      "op": "PUSH1",
      "path": "12",
      "value": "0x68"
    },
    "1607": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [788, 816],
      "op": "SLOAD",
      "path": "12"
    },
    "1608": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [788, 816],
      "op": "PUSH2",
      "path": "12",
      "value": "0x378"
    },
    "1611": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [788, 816],
      "op": "SWAP1",
      "path": "12"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1618": {
      "op": "SHL"
    },
    "1619": {
      "op": "SUB"
    },
    "1620": {
      "offset": [788, 816],
      "op": "AND",
      "path": "12"
    },
    "1621": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [788, 816],
      "op": "DUP2",
      "path": "12"
    },
    "1622": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [788, 816],
      "op": "JUMP",
      "path": "12"
    },
    "1623": {
      "offset": [822, 851],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1624": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [822, 851],
      "op": "PUSH1",
      "path": "12",
      "value": "0x69"
    },
    "1626": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [822, 851],
      "op": "SLOAD",
      "path": "12"
    },
    "1627": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [822, 851],
      "op": "PUSH2",
      "path": "12",
      "value": "0x378"
    },
    "1630": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [822, 851],
      "op": "SWAP1",
      "path": "12"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1637": {
      "op": "SHL"
    },
    "1638": {
      "op": "SUB"
    },
    "1639": {
      "offset": [822, 851],
      "op": "AND",
      "path": "12"
    },
    "1640": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [822, 851],
      "op": "DUP2",
      "path": "12"
    },
    "1641": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [822, 851],
      "op": "JUMP",
      "path": "12"
    },
    "1642": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13354, 13788],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1643": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13354, 13788],
      "op": "PUSH2",
      "path": "12",
      "value": "0x398"
    },
    "1646": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13354, 13788],
      "op": "PUSH2",
      "path": "12",
      "value": "0x678"
    },
    "1649": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13354, 13788],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1650": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13354, 13788],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1652": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13354, 13788],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36A1"
    },
    "1655": {
      "fn": "MainStaking.getDepositTokensForShares",
      "jump": "i",
      "offset": [13354, 13788],
      "op": "JUMP",
      "path": "12"
    },
    "1656": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13354, 13788],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1657": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13354, 13788],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23B0"
    },
    "1660": {
      "fn": "MainStaking.getDepositTokensForShares",
      "jump": "i",
      "offset": [13354, 13788],
      "op": "JUMP",
      "path": "12"
    },
    "1661": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2159, 2391],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1662": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2159, 2391],
      "op": "PUSH2",
      "path": "20",
      "value": "0x260"
    },
    "1665": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2159, 2391],
      "op": "PUSH2",
      "path": "20",
      "value": "0x68B"
    },
    "1668": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2159, 2391],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1669": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2159, 2391],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1671": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2159, 2391],
      "op": "PUSH2",
      "path": "20",
      "value": "0x349A"
    },
    "1674": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "i",
      "offset": [2159, 2391],
      "op": "JUMP",
      "path": "20"
    },
    "1675": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2159, 2391],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1676": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2159, 2391],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2412"
    },
    "1679": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "i",
      "offset": [2159, 2391],
      "op": "JUMP",
      "path": "20"
    },
    "1680": {
      "fn": "MainStaking.deposit",
      "offset": [5048, 6344],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1681": {
      "fn": "MainStaking.deposit",
      "offset": [5048, 6344],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1684": {
      "fn": "MainStaking.deposit",
      "offset": [5048, 6344],
      "op": "PUSH2",
      "path": "12",
      "value": "0x69E"
    },
    "1687": {
      "fn": "MainStaking.deposit",
      "offset": [5048, 6344],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1688": {
      "fn": "MainStaking.deposit",
      "offset": [5048, 6344],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1690": {
      "fn": "MainStaking.deposit",
      "offset": [5048, 6344],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35D1"
    },
    "1693": {
      "fn": "MainStaking.deposit",
      "jump": "i",
      "offset": [5048, 6344],
      "op": "JUMP",
      "path": "12"
    },
    "1694": {
      "fn": "MainStaking.deposit",
      "offset": [5048, 6344],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1695": {
      "fn": "MainStaking.deposit",
      "offset": [5048, 6344],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24AD"
    },
    "1698": {
      "fn": "MainStaking.deposit",
      "jump": "i",
      "offset": [5048, 6344],
      "op": "JUMP",
      "path": "12"
    },
    "1699": {
      "offset": [1070, 1114],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1700": {
      "fn": "MainStaking.deposit",
      "offset": [1070, 1114],
      "op": "PUSH2",
      "path": "12",
      "value": "0x398"
    },
    "1703": {
      "offset": [1111, 1114],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F4"
    },
    "1706": {
      "offset": [1070, 1114],
      "op": "DUP2",
      "path": "12"
    },
    "1707": {
      "fn": "MainStaking.deposit",
      "offset": [1070, 1114],
      "op": "JUMP",
      "path": "12"
    },
    "1708": {
      "offset": [707, 733],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1709": {
      "fn": "MainStaking.deposit",
      "offset": [707, 733],
      "op": "PUSH1",
      "path": "12",
      "value": "0x65"
    },
    "1711": {
      "fn": "MainStaking.deposit",
      "offset": [707, 733],
      "op": "SLOAD",
      "path": "12"
    },
    "1712": {
      "fn": "MainStaking.deposit",
      "offset": [707, 733],
      "op": "PUSH2",
      "path": "12",
      "value": "0x378"
    },
    "1715": {
      "fn": "MainStaking.deposit",
      "offset": [707, 733],
      "op": "SWAP1",
      "path": "12"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1722": {
      "op": "SHL"
    },
    "1723": {
      "op": "SUB"
    },
    "1724": {
      "offset": [707, 733],
      "op": "AND",
      "path": "12"
    },
    "1725": {
      "fn": "MainStaking.deposit",
      "offset": [707, 733],
      "op": "DUP2",
      "path": "12"
    },
    "1726": {
      "fn": "MainStaking.deposit",
      "offset": [707, 733],
      "op": "JUMP",
      "path": "12"
    },
    "1727": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1734": {
      "op": "SHL"
    },
    "1735": {
      "op": "SUB"
    },
    "1736": {
      "fn": "MainStaking.harvest",
      "offset": [6480, 6492],
      "op": "DUP4",
      "path": "12"
    },
    "1737": {
      "fn": "MainStaking.harvest",
      "offset": [6480, 6492],
      "op": "AND",
      "path": "12"
    },
    "1738": {
      "fn": "MainStaking.harvest",
      "offset": [6456, 6477],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1740": {
      "fn": "MainStaking.harvest",
      "offset": [6480, 6492],
      "op": "SWAP1",
      "path": "12"
    },
    "1741": {
      "fn": "MainStaking.harvest",
      "offset": [6480, 6492],
      "op": "DUP2",
      "path": "12"
    },
    "1742": {
      "fn": "MainStaking.harvest",
      "offset": [6480, 6492],
      "op": "MSTORE",
      "path": "12"
    },
    "1743": {
      "fn": "MainStaking.harvest",
      "offset": [6480, 6485],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "1745": {
      "fn": "MainStaking.harvest",
      "offset": [6480, 6492],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1747": {
      "fn": "MainStaking.harvest",
      "offset": [6480, 6492],
      "op": "MSTORE",
      "path": "12"
    },
    "1748": {
      "fn": "MainStaking.harvest",
      "offset": [6480, 6492],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1750": {
      "fn": "MainStaking.harvest",
      "offset": [6480, 6492],
      "op": "SWAP1",
      "path": "12"
    },
    "1751": {
      "fn": "MainStaking.harvest",
      "offset": [6480, 6492],
      "op": "KECCAK256",
      "path": "12"
    },
    "1752": {
      "fn": "MainStaking.harvest",
      "offset": [6510, 6527],
      "op": "PUSH1",
      "path": "12",
      "statement": 10,
      "value": "0x1"
    },
    "1754": {
      "fn": "MainStaking.harvest",
      "offset": [6510, 6527],
      "op": "DUP2",
      "path": "12"
    },
    "1755": {
      "fn": "MainStaking.harvest",
      "offset": [6510, 6527],
      "op": "ADD",
      "path": "12"
    },
    "1756": {
      "fn": "MainStaking.harvest",
      "offset": [6510, 6527],
      "op": "SLOAD",
      "path": "12"
    },
    "1757": {
      "fn": "MainStaking.harvest",
      "offset": [6510, 6527],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "1759": {
      "branch": 124,
      "fn": "MainStaking.harvest",
      "offset": [6510, 6527],
      "op": "AND",
      "path": "12"
    },
    "1760": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "PUSH2",
      "path": "12",
      "value": "0x722"
    },
    "1763": {
      "branch": 124,
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "JUMPI",
      "path": "12"
    },
    "1764": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1766": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "MLOAD",
      "path": "12"
    },
    "1767": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1773": {
      "op": "SHL"
    },
    "1774": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "DUP2",
      "path": "12"
    },
    "1775": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "MSTORE",
      "path": "12"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1778": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1780": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "DUP3",
      "path": "12"
    },
    "1781": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "ADD",
      "path": "12"
    },
    "1782": {
      "op": "MSTORE"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1787": {
      "op": "DUP3"
    },
    "1788": {
      "op": "ADD"
    },
    "1789": {
      "op": "MSTORE"
    },
    "1790": {
      "op": "PUSH15",
      "value": "0x506F6F6C206E6F7420616374697665"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1808": {
      "op": "SHL"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1811": {
      "op": "DUP3"
    },
    "1812": {
      "op": "ADD"
    },
    "1813": {
      "op": "MSTORE"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1816": {
      "op": "ADD"
    },
    "1817": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1818": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1820": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "MLOAD",
      "path": "12"
    },
    "1821": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "DUP1",
      "path": "12"
    },
    "1822": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "SWAP2",
      "path": "12"
    },
    "1823": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "SUB",
      "path": "12"
    },
    "1824": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "SWAP1",
      "path": "12"
    },
    "1825": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "12"
    },
    "1826": {
      "fn": "MainStaking.harvest",
      "offset": [6502, 6547],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1827": {
      "fn": "MainStaking.harvest",
      "offset": [6588, 6591],
      "op": "PUSH1",
      "path": "12",
      "value": "0x66"
    },
    "1829": {
      "fn": "MainStaking.harvest",
      "offset": [6588, 6591],
      "op": "SLOAD",
      "path": "12"
    },
    "1830": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1832": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "MLOAD",
      "path": "12"
    },
    "1833": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1840": {
      "op": "SHL"
    },
    "1841": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP2",
      "path": "12"
    },
    "1842": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "MSTORE",
      "path": "12"
    },
    "1843": {
      "fn": "MainStaking.harvest",
      "offset": [6611, 6615],
      "op": "ADDRESS",
      "path": "12"
    },
    "1844": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1846": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP3",
      "path": "12"
    },
    "1847": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "ADD",
      "path": "12"
    },
    "1848": {
      "op": "MSTORE"
    },
    "1849": {
      "fn": "MainStaking.harvest",
      "offset": [6557, 6578],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1851": {
      "fn": "MainStaking.harvest",
      "offset": [6557, 6578],
      "op": "SWAP2",
      "path": "12"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1858": {
      "op": "SHL"
    },
    "1859": {
      "op": "SUB"
    },
    "1860": {
      "fn": "MainStaking.harvest",
      "offset": [6588, 6591],
      "op": "AND",
      "path": "12"
    },
    "1861": {
      "fn": "MainStaking.harvest",
      "offset": [6588, 6591],
      "op": "SWAP1",
      "path": "12"
    },
    "1862": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6602],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "1867": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6602],
      "op": "SWAP1",
      "path": "12"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1870": {
      "op": "ADD"
    },
    "1871": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1873": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1875": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "MLOAD",
      "path": "12"
    },
    "1876": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP1",
      "path": "12"
    },
    "1877": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP4",
      "path": "12"
    },
    "1878": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "SUB",
      "path": "12"
    },
    "1879": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP2",
      "path": "12"
    },
    "1880": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP7",
      "path": "12"
    },
    "1881": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP1",
      "path": "12"
    },
    "1882": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "1883": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "ISZERO",
      "path": "12"
    },
    "1884": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP1",
      "path": "12"
    },
    "1885": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "ISZERO",
      "path": "12"
    },
    "1886": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH2",
      "path": "12",
      "value": "0x766"
    },
    "1889": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "JUMPI",
      "path": "12"
    },
    "1890": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1892": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP1",
      "path": "12"
    },
    "1893": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "REVERT",
      "path": "12"
    },
    "1894": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1895": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "POP",
      "path": "12"
    },
    "1896": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "GAS",
      "path": "12"
    },
    "1897": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "STATICCALL",
      "path": "12"
    },
    "1898": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "ISZERO",
      "path": "12"
    },
    "1899": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP1",
      "path": "12"
    },
    "1900": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "ISZERO",
      "path": "12"
    },
    "1901": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH2",
      "path": "12",
      "value": "0x77A"
    },
    "1904": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "JUMPI",
      "path": "12"
    },
    "1905": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1906": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1908": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP1",
      "path": "12"
    },
    "1909": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "1910": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1911": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1913": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "REVERT",
      "path": "12"
    },
    "1914": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1915": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "POP",
      "path": "12"
    },
    "1916": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "POP",
      "path": "12"
    },
    "1917": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "POP",
      "path": "12"
    },
    "1918": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "POP",
      "path": "12"
    },
    "1919": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1921": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "MLOAD",
      "path": "12"
    },
    "1922": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1923": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "1925": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "NOT",
      "path": "12"
    },
    "1926": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "1928": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP3",
      "path": "12"
    },
    "1929": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "ADD",
      "path": "12"
    },
    "1930": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "AND",
      "path": "12"
    },
    "1931": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP3",
      "path": "12"
    },
    "1932": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "ADD",
      "path": "12"
    },
    "1933": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP1",
      "path": "12"
    },
    "1934": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1936": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "MSTORE",
      "path": "12"
    },
    "1937": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "POP",
      "path": "12"
    },
    "1938": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "DUP2",
      "path": "12"
    },
    "1939": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "ADD",
      "path": "12"
    },
    "1940": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "SWAP1",
      "path": "12"
    },
    "1941": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH2",
      "path": "12",
      "value": "0x79E"
    },
    "1944": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "SWAP2",
      "path": "12"
    },
    "1945": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "SWAP1",
      "path": "12"
    },
    "1946": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3688"
    },
    "1949": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [6581, 6617],
      "op": "JUMP",
      "path": "12"
    },
    "1950": {
      "fn": "MainStaking.harvest",
      "offset": [6581, 6617],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1951": {
      "fn": "MainStaking.harvest",
      "offset": [6643, 6657],
      "op": "PUSH1",
      "path": "12",
      "statement": 11,
      "value": "0x69"
    },
    "1953": {
      "fn": "MainStaking.harvest",
      "offset": [6643, 6657],
      "op": "SLOAD",
      "path": "12"
    },
    "1954": {
      "fn": "MainStaking.harvest",
      "offset": [6667, 6679],
      "op": "DUP4",
      "path": "12"
    },
    "1955": {
      "fn": "MainStaking.harvest",
      "offset": [6667, 6679],
      "op": "SLOAD",
      "path": "12"
    },
    "1956": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1958": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "MLOAD",
      "path": "12"
    },
    "1959": {
      "op": "PUSH4",
      "value": "0x1C57762B"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "DUP2",
      "path": "12"
    },
    "1968": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "MSTORE",
      "path": "12"
    },
    "1969": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1971": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "DUP2",
      "path": "12"
    },
    "1972": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "ADD",
      "path": "12"
    },
    "1973": {
      "op": "SWAP2"
    },
    "1974": {
      "op": "SWAP1"
    },
    "1975": {
      "op": "SWAP2"
    },
    "1976": {
      "op": "MSTORE"
    },
    "1977": {
      "fn": "MainStaking.harvest",
      "offset": [6643, 6657],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1981": {
      "op": "DUP3"
    },
    "1982": {
      "op": "ADD"
    },
    "1983": {
      "op": "MSTORE"
    },
    "1984": {
      "fn": "MainStaking.harvest",
      "offset": [6557, 6617],
      "op": "SWAP2",
      "path": "12"
    },
    "1985": {
      "fn": "MainStaking.harvest",
      "offset": [6557, 6617],
      "op": "SWAP3",
      "path": "12"
    },
    "1986": {
      "op": "POP"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1993": {
      "op": "SHL"
    },
    "1994": {
      "op": "SUB"
    },
    "1995": {
      "fn": "MainStaking.harvest",
      "offset": [6643, 6657],
      "op": "AND",
      "path": "12"
    },
    "1996": {
      "fn": "MainStaking.harvest",
      "offset": [6643, 6657],
      "op": "SWAP1",
      "path": "12"
    },
    "1997": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6666],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE2BBB158"
    },
    "2002": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6666],
      "op": "SWAP1",
      "path": "12"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2005": {
      "op": "ADD"
    },
    "2006": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2008": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2010": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "MLOAD",
      "path": "12"
    },
    "2011": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "DUP1",
      "path": "12"
    },
    "2012": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "DUP4",
      "path": "12"
    },
    "2013": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "SUB",
      "path": "12"
    },
    "2014": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "DUP2",
      "path": "12"
    },
    "2015": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2017": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "DUP8",
      "path": "12"
    },
    "2018": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "DUP1",
      "path": "12"
    },
    "2019": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2020": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "ISZERO",
      "path": "12"
    },
    "2021": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "DUP1",
      "path": "12"
    },
    "2022": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "ISZERO",
      "path": "12"
    },
    "2023": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7EF"
    },
    "2026": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "JUMPI",
      "path": "12"
    },
    "2027": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2029": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "DUP1",
      "path": "12"
    },
    "2030": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "REVERT",
      "path": "12"
    },
    "2031": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2032": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "POP",
      "path": "12"
    },
    "2033": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "GAS",
      "path": "12"
    },
    "2034": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "CALL",
      "path": "12"
    },
    "2035": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "ISZERO",
      "path": "12"
    },
    "2036": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "DUP1",
      "path": "12"
    },
    "2037": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "ISZERO",
      "path": "12"
    },
    "2038": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "PUSH2",
      "path": "12",
      "value": "0x803"
    },
    "2041": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "JUMPI",
      "path": "12"
    },
    "2042": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2043": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2045": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "DUP1",
      "path": "12"
    },
    "2046": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2047": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2048": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2050": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "REVERT",
      "path": "12"
    },
    "2051": {
      "fn": "MainStaking.harvest",
      "offset": [6627, 6683],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2052": {
      "op": "POP"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "fn": "MainStaking.harvest",
      "offset": [6760, 6763],
      "op": "PUSH1",
      "path": "12",
      "value": "0x66"
    },
    "2056": {
      "fn": "MainStaking.harvest",
      "offset": [6760, 6763],
      "op": "SLOAD",
      "path": "12"
    },
    "2057": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2059": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "MLOAD",
      "path": "12"
    },
    "2060": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2067": {
      "op": "SHL"
    },
    "2068": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP2",
      "path": "12"
    },
    "2069": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "MSTORE",
      "path": "12"
    },
    "2070": {
      "fn": "MainStaking.harvest",
      "offset": [6783, 6787],
      "op": "ADDRESS",
      "path": "12"
    },
    "2071": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2073": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP3",
      "path": "12"
    },
    "2074": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "ADD",
      "path": "12"
    },
    "2075": {
      "op": "MSTORE"
    },
    "2076": {
      "fn": "MainStaking.harvest",
      "offset": [6735, 6750],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2078": {
      "fn": "MainStaking.harvest",
      "offset": [6735, 6750],
      "op": "SWAP4",
      "path": "12"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "fn": "MainStaking.harvest",
      "offset": [6792, 6805],
      "op": "DUP5",
      "path": "12"
    },
    "2081": {
      "fn": "MainStaking.harvest",
      "offset": [6792, 6805],
      "op": "SWAP3",
      "path": "12"
    },
    "2082": {
      "op": "POP"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2089": {
      "op": "SHL"
    },
    "2090": {
      "op": "SUB"
    },
    "2091": {
      "fn": "MainStaking.harvest",
      "offset": [6760, 6763],
      "op": "SWAP1",
      "path": "12"
    },
    "2092": {
      "fn": "MainStaking.harvest",
      "offset": [6760, 6763],
      "op": "SWAP2",
      "path": "12"
    },
    "2093": {
      "fn": "MainStaking.harvest",
      "offset": [6760, 6763],
      "op": "AND",
      "path": "12"
    },
    "2094": {
      "fn": "MainStaking.harvest",
      "offset": [6760, 6763],
      "op": "SWAP1",
      "path": "12"
    },
    "2095": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6774],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "2100": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6774],
      "op": "SWAP1",
      "path": "12"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2103": {
      "op": "ADD"
    },
    "2104": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2106": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2108": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "MLOAD",
      "path": "12"
    },
    "2109": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP1",
      "path": "12"
    },
    "2110": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP4",
      "path": "12"
    },
    "2111": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "SUB",
      "path": "12"
    },
    "2112": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP2",
      "path": "12"
    },
    "2113": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP7",
      "path": "12"
    },
    "2114": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP1",
      "path": "12"
    },
    "2115": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2116": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "ISZERO",
      "path": "12"
    },
    "2117": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP1",
      "path": "12"
    },
    "2118": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "ISZERO",
      "path": "12"
    },
    "2119": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH2",
      "path": "12",
      "value": "0x84F"
    },
    "2122": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "JUMPI",
      "path": "12"
    },
    "2123": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2125": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP1",
      "path": "12"
    },
    "2126": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "REVERT",
      "path": "12"
    },
    "2127": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2128": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "POP",
      "path": "12"
    },
    "2129": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "GAS",
      "path": "12"
    },
    "2130": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "STATICCALL",
      "path": "12"
    },
    "2131": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "ISZERO",
      "path": "12"
    },
    "2132": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP1",
      "path": "12"
    },
    "2133": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "ISZERO",
      "path": "12"
    },
    "2134": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH2",
      "path": "12",
      "value": "0x863"
    },
    "2137": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "JUMPI",
      "path": "12"
    },
    "2138": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2139": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2141": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP1",
      "path": "12"
    },
    "2142": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2143": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2144": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2146": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "REVERT",
      "path": "12"
    },
    "2147": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2148": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "POP",
      "path": "12"
    },
    "2149": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "POP",
      "path": "12"
    },
    "2150": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "POP",
      "path": "12"
    },
    "2151": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "POP",
      "path": "12"
    },
    "2152": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2154": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "MLOAD",
      "path": "12"
    },
    "2155": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2156": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2158": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "NOT",
      "path": "12"
    },
    "2159": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2161": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP3",
      "path": "12"
    },
    "2162": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "ADD",
      "path": "12"
    },
    "2163": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "AND",
      "path": "12"
    },
    "2164": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP3",
      "path": "12"
    },
    "2165": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "ADD",
      "path": "12"
    },
    "2166": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP1",
      "path": "12"
    },
    "2167": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2169": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "MSTORE",
      "path": "12"
    },
    "2170": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "POP",
      "path": "12"
    },
    "2171": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "DUP2",
      "path": "12"
    },
    "2172": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "ADD",
      "path": "12"
    },
    "2173": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "SWAP1",
      "path": "12"
    },
    "2174": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH2",
      "path": "12",
      "value": "0x887"
    },
    "2177": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "SWAP2",
      "path": "12"
    },
    "2178": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "SWAP1",
      "path": "12"
    },
    "2179": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3688"
    },
    "2182": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [6753, 6789],
      "op": "JUMP",
      "path": "12"
    },
    "2183": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6789],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2184": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6805],
      "op": "PUSH2",
      "path": "12",
      "value": "0x891"
    },
    "2187": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6805],
      "op": "SWAP2",
      "path": "12"
    },
    "2188": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6805],
      "op": "SWAP1",
      "path": "12"
    },
    "2189": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6805],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3989"
    },
    "2192": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [6753, 6805],
      "op": "JUMP",
      "path": "12"
    },
    "2193": {
      "fn": "MainStaking.harvest",
      "offset": [6753, 6805],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2194": {
      "fn": "MainStaking.harvest",
      "offset": [6735, 6805],
      "op": "SWAP1",
      "path": "12"
    },
    "2195": {
      "op": "POP"
    },
    "2196": {
      "fn": "MainStaking.harvest",
      "offset": [6735, 6805],
      "op": "DUP1",
      "path": "12"
    },
    "2197": {
      "fn": "MainStaking.harvest",
      "offset": [6851, 7149],
      "op": "DUP6",
      "path": "12"
    },
    "2198": {
      "fn": "MainStaking.harvest",
      "offset": [6851, 7149],
      "op": "ISZERO",
      "path": "12"
    },
    "2199": {
      "fn": "MainStaking.harvest",
      "offset": [6851, 7149],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9C6"
    },
    "2202": {
      "fn": "MainStaking.harvest",
      "offset": [6851, 7149],
      "op": "JUMPI",
      "path": "12"
    },
    "2203": {
      "fn": "MainStaking.harvest",
      "offset": [6877, 6894],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2205": {
      "offset": [984, 989],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2710"
    },
    "2208": {
      "fn": "MainStaking.harvest",
      "offset": [6908, 6918],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6C"
    },
    "2210": {
      "fn": "MainStaking.harvest",
      "offset": [6908, 6918],
      "op": "SLOAD",
      "path": "12"
    },
    "2211": {
      "fn": "MainStaking.harvest",
      "offset": [6898, 6905],
      "op": "DUP5",
      "path": "12"
    },
    "2212": {
      "fn": "MainStaking.harvest",
      "offset": [6898, 6918],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AD"
    },
    "2215": {
      "fn": "MainStaking.harvest",
      "offset": [6898, 6918],
      "op": "SWAP2",
      "path": "12"
    },
    "2216": {
      "fn": "MainStaking.harvest",
      "offset": [6898, 6918],
      "op": "SWAP1",
      "path": "12"
    },
    "2217": {
      "fn": "MainStaking.harvest",
      "offset": [6898, 6918],
      "op": "PUSH2",
      "path": "12",
      "value": "0x396A"
    },
    "2220": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [6898, 6918],
      "op": "JUMP",
      "path": "12"
    },
    "2221": {
      "fn": "MainStaking.harvest",
      "offset": [6898, 6918],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2222": {
      "fn": "MainStaking.harvest",
      "offset": [6897, 6937],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8B7"
    },
    "2225": {
      "fn": "MainStaking.harvest",
      "offset": [6897, 6937],
      "op": "SWAP2",
      "path": "12"
    },
    "2226": {
      "fn": "MainStaking.harvest",
      "offset": [6897, 6937],
      "op": "SWAP1",
      "path": "12"
    },
    "2227": {
      "fn": "MainStaking.harvest",
      "offset": [6897, 6937],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3948"
    },
    "2230": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [6897, 6937],
      "op": "JUMP",
      "path": "12"
    },
    "2231": {
      "fn": "MainStaking.harvest",
      "offset": [6897, 6937],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2232": {
      "fn": "MainStaking.harvest",
      "offset": [6958, 6961],
      "op": "PUSH1",
      "path": "12",
      "statement": 12,
      "value": "0x66"
    },
    "2234": {
      "fn": "MainStaking.harvest",
      "offset": [6958, 6961],
      "op": "SLOAD",
      "path": "12"
    },
    "2235": {
      "fn": "MainStaking.harvest",
      "offset": [6971, 6975],
      "op": "PUSH1",
      "path": "12",
      "value": "0x67"
    },
    "2237": {
      "fn": "MainStaking.harvest",
      "offset": [6971, 6975],
      "op": "SLOAD",
      "path": "12"
    },
    "2238": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2240": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "MLOAD",
      "path": "12"
    },
    "2241": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2248": {
      "op": "SHL"
    },
    "2249": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP2",
      "path": "12"
    },
    "2250": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "MSTORE",
      "path": "12"
    },
    "2251": {
      "fn": "MainStaking.harvest",
      "offset": [6877, 6937],
      "op": "SWAP3",
      "path": "12"
    },
    "2252": {
      "fn": "MainStaking.harvest",
      "offset": [6877, 6937],
      "op": "SWAP4",
      "path": "12"
    },
    "2253": {
      "op": "POP"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2260": {
      "op": "SHL"
    },
    "2261": {
      "op": "SUB"
    },
    "2262": {
      "fn": "MainStaking.harvest",
      "offset": [6958, 6961],
      "op": "SWAP2",
      "path": "12"
    },
    "2263": {
      "fn": "MainStaking.harvest",
      "offset": [6958, 6961],
      "op": "DUP3",
      "path": "12"
    },
    "2264": {
      "fn": "MainStaking.harvest",
      "offset": [6958, 6961],
      "op": "AND",
      "path": "12"
    },
    "2265": {
      "fn": "MainStaking.harvest",
      "offset": [6958, 6961],
      "op": "SWAP3",
      "path": "12"
    },
    "2266": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6970],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95EA7B3"
    },
    "2271": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6970],
      "op": "SWAP3",
      "path": "12"
    },
    "2272": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8EF"
    },
    "2275": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "SWAP3",
      "path": "12"
    },
    "2276": {
      "fn": "MainStaking.harvest",
      "offset": [6971, 6975],
      "op": "AND",
      "path": "12"
    },
    "2277": {
      "fn": "MainStaking.harvest",
      "offset": [6971, 6975],
      "op": "SWAP1",
      "path": "12"
    },
    "2278": {
      "fn": "MainStaking.harvest",
      "offset": [6877, 6937],
      "op": "DUP6",
      "path": "12"
    },
    "2279": {
      "fn": "MainStaking.harvest",
      "offset": [6877, 6937],
      "op": "SWAP1",
      "path": "12"
    },
    "2280": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2282": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "ADD",
      "path": "12"
    },
    "2283": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "2286": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [6951, 6987],
      "op": "JUMP",
      "path": "12"
    },
    "2287": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2288": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2290": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2292": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "MLOAD",
      "path": "12"
    },
    "2293": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP1",
      "path": "12"
    },
    "2294": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP4",
      "path": "12"
    },
    "2295": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "SUB",
      "path": "12"
    },
    "2296": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP2",
      "path": "12"
    },
    "2297": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2299": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP8",
      "path": "12"
    },
    "2300": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP1",
      "path": "12"
    },
    "2301": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2302": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "ISZERO",
      "path": "12"
    },
    "2303": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP1",
      "path": "12"
    },
    "2304": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "ISZERO",
      "path": "12"
    },
    "2305": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH2",
      "path": "12",
      "value": "0x909"
    },
    "2308": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "JUMPI",
      "path": "12"
    },
    "2309": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2311": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP1",
      "path": "12"
    },
    "2312": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "REVERT",
      "path": "12"
    },
    "2313": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2314": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "POP",
      "path": "12"
    },
    "2315": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "GAS",
      "path": "12"
    },
    "2316": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "CALL",
      "path": "12"
    },
    "2317": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "ISZERO",
      "path": "12"
    },
    "2318": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP1",
      "path": "12"
    },
    "2319": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "ISZERO",
      "path": "12"
    },
    "2320": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH2",
      "path": "12",
      "value": "0x91D"
    },
    "2323": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "JUMPI",
      "path": "12"
    },
    "2324": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2325": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2327": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP1",
      "path": "12"
    },
    "2328": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2329": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2330": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2332": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "REVERT",
      "path": "12"
    },
    "2333": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2334": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "POP",
      "path": "12"
    },
    "2335": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "POP",
      "path": "12"
    },
    "2336": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "POP",
      "path": "12"
    },
    "2337": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "POP",
      "path": "12"
    },
    "2338": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2340": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "MLOAD",
      "path": "12"
    },
    "2341": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2342": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2344": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "NOT",
      "path": "12"
    },
    "2345": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2347": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP3",
      "path": "12"
    },
    "2348": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "ADD",
      "path": "12"
    },
    "2349": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "AND",
      "path": "12"
    },
    "2350": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP3",
      "path": "12"
    },
    "2351": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "ADD",
      "path": "12"
    },
    "2352": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP1",
      "path": "12"
    },
    "2353": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2355": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "MSTORE",
      "path": "12"
    },
    "2356": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "POP",
      "path": "12"
    },
    "2357": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "DUP2",
      "path": "12"
    },
    "2358": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "ADD",
      "path": "12"
    },
    "2359": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "SWAP1",
      "path": "12"
    },
    "2360": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH2",
      "path": "12",
      "value": "0x941"
    },
    "2363": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "SWAP2",
      "path": "12"
    },
    "2364": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "SWAP1",
      "path": "12"
    },
    "2365": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "2368": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [6951, 6987],
      "op": "JUMP",
      "path": "12"
    },
    "2369": {
      "fn": "MainStaking.harvest",
      "offset": [6951, 6987],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2370": {
      "op": "POP"
    },
    "2371": {
      "fn": "MainStaking.harvest",
      "offset": [7007, 7011],
      "op": "PUSH1",
      "path": "12",
      "statement": 13,
      "value": "0x67"
    },
    "2373": {
      "fn": "MainStaking.harvest",
      "offset": [7007, 7011],
      "op": "SLOAD",
      "path": "12"
    },
    "2374": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2376": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "MLOAD",
      "path": "12"
    },
    "2377": {
      "op": "PUSH4",
      "value": "0xB6B55F25"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2384": {
      "op": "SHL"
    },
    "2385": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "DUP2",
      "path": "12"
    },
    "2386": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "MSTORE",
      "path": "12"
    },
    "2387": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2389": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "DUP2",
      "path": "12"
    },
    "2390": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "ADD",
      "path": "12"
    },
    "2391": {
      "op": "DUP4"
    },
    "2392": {
      "op": "SWAP1"
    },
    "2393": {
      "op": "MSTORE"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2400": {
      "op": "SHL"
    },
    "2401": {
      "op": "SUB"
    },
    "2402": {
      "fn": "MainStaking.harvest",
      "offset": [7007, 7011],
      "op": "SWAP1",
      "path": "12"
    },
    "2403": {
      "fn": "MainStaking.harvest",
      "offset": [7007, 7011],
      "op": "SWAP2",
      "path": "12"
    },
    "2404": {
      "fn": "MainStaking.harvest",
      "offset": [7007, 7011],
      "op": "AND",
      "path": "12"
    },
    "2405": {
      "fn": "MainStaking.harvest",
      "offset": [7007, 7011],
      "op": "SWAP1",
      "path": "12"
    },
    "2406": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7020],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB6B55F25"
    },
    "2411": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7020],
      "op": "SWAP1",
      "path": "12"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2414": {
      "op": "ADD"
    },
    "2415": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2417": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2419": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "MLOAD",
      "path": "12"
    },
    "2420": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "DUP1",
      "path": "12"
    },
    "2421": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "DUP4",
      "path": "12"
    },
    "2422": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "SUB",
      "path": "12"
    },
    "2423": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "DUP2",
      "path": "12"
    },
    "2424": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2426": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "DUP8",
      "path": "12"
    },
    "2427": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "DUP1",
      "path": "12"
    },
    "2428": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2429": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "ISZERO",
      "path": "12"
    },
    "2430": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "DUP1",
      "path": "12"
    },
    "2431": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "ISZERO",
      "path": "12"
    },
    "2432": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "PUSH2",
      "path": "12",
      "value": "0x988"
    },
    "2435": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "JUMPI",
      "path": "12"
    },
    "2436": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2438": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "DUP1",
      "path": "12"
    },
    "2439": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "REVERT",
      "path": "12"
    },
    "2440": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2441": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "POP",
      "path": "12"
    },
    "2442": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "GAS",
      "path": "12"
    },
    "2443": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "CALL",
      "path": "12"
    },
    "2444": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "ISZERO",
      "path": "12"
    },
    "2445": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "DUP1",
      "path": "12"
    },
    "2446": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "ISZERO",
      "path": "12"
    },
    "2447": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "PUSH2",
      "path": "12",
      "value": "0x99C"
    },
    "2450": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "JUMPI",
      "path": "12"
    },
    "2451": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2452": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2454": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "DUP1",
      "path": "12"
    },
    "2455": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2456": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2457": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2459": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "REVERT",
      "path": "12"
    },
    "2460": {
      "fn": "MainStaking.harvest",
      "offset": [7001, 7031],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2461": {
      "op": "POP"
    },
    "2462": {
      "op": "POP"
    },
    "2463": {
      "fn": "MainStaking.harvest",
      "offset": [7052, 7056],
      "op": "PUSH1",
      "path": "12",
      "statement": 14,
      "value": "0x67"
    },
    "2465": {
      "fn": "MainStaking.harvest",
      "offset": [7052, 7056],
      "op": "SLOAD",
      "path": "12"
    },
    "2466": {
      "fn": "MainStaking.harvest",
      "offset": [7045, 7093],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9B8"
    },
    "2469": {
      "fn": "MainStaking.harvest",
      "offset": [7045, 7093],
      "op": "SWAP3",
      "path": "12"
    },
    "2470": {
      "op": "POP"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2477": {
      "op": "SHL"
    },
    "2478": {
      "op": "SUB"
    },
    "2479": {
      "fn": "MainStaking.harvest",
      "offset": [7052, 7056],
      "op": "AND",
      "path": "12"
    },
    "2480": {
      "fn": "MainStaking.harvest",
      "offset": [7052, 7056],
      "op": "SWAP1",
      "path": "12"
    },
    "2481": {
      "op": "POP"
    },
    "2482": {
      "fn": "MainStaking.harvest",
      "offset": [7071, 7081],
      "op": "CALLER",
      "path": "12"
    },
    "2483": {
      "fn": "MainStaking.harvest",
      "offset": [7083, 7092],
      "op": "DUP4",
      "path": "12"
    },
    "2484": {
      "fn": "MainStaking.harvest",
      "offset": [7045, 7070],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28EB"
    },
    "2487": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [7045, 7093],
      "op": "JUMP",
      "path": "12"
    },
    "2488": {
      "fn": "MainStaking.harvest",
      "offset": [7045, 7093],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2489": {
      "fn": "MainStaking.harvest",
      "offset": [7118, 7138],
      "op": "PUSH2",
      "path": "12",
      "statement": 15,
      "value": "0x9C2"
    },
    "2492": {
      "fn": "MainStaking.harvest",
      "offset": [7129, 7138],
      "op": "DUP2",
      "path": "12"
    },
    "2493": {
      "fn": "MainStaking.harvest",
      "offset": [7118, 7126],
      "op": "DUP4",
      "path": "12"
    },
    "2494": {
      "fn": "MainStaking.harvest",
      "offset": [7118, 7138],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3989"
    },
    "2497": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [7118, 7138],
      "op": "JUMP",
      "path": "12"
    },
    "2498": {
      "fn": "MainStaking.harvest",
      "offset": [7118, 7138],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2499": {
      "fn": "MainStaking.harvest",
      "offset": [7107, 7138],
      "op": "SWAP2",
      "path": "12"
    },
    "2500": {
      "fn": "MainStaking.harvest",
      "offset": [7107, 7138],
      "op": "POP",
      "path": "12"
    },
    "2501": {
      "fn": "MainStaking.harvest",
      "offset": [6863, 7149],
      "op": "POP",
      "path": "12"
    },
    "2502": {
      "fn": "MainStaking.harvest",
      "offset": [6851, 7149],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2503": {
      "fn": "MainStaking.harvest",
      "offset": [7183, 7197],
      "op": "PUSH1",
      "path": "12",
      "statement": 16,
      "value": "0x1"
    },
    "2505": {
      "fn": "MainStaking.harvest",
      "offset": [7183, 7197],
      "op": "DUP5",
      "path": "12"
    },
    "2506": {
      "fn": "MainStaking.harvest",
      "offset": [7183, 7197],
      "op": "ADD",
      "path": "12"
    },
    "2507": {
      "fn": "MainStaking.harvest",
      "offset": [7183, 7197],
      "op": "SLOAD",
      "path": "12"
    },
    "2508": {
      "fn": "MainStaking.harvest",
      "offset": [7211, 7228],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "2510": {
      "fn": "MainStaking.harvest",
      "offset": [7211, 7228],
      "op": "DUP6",
      "path": "12"
    },
    "2511": {
      "fn": "MainStaking.harvest",
      "offset": [7211, 7228],
      "op": "ADD",
      "path": "12"
    },
    "2512": {
      "fn": "MainStaking.harvest",
      "offset": [7211, 7228],
      "op": "SLOAD",
      "path": "12"
    },
    "2513": {
      "fn": "MainStaking.harvest",
      "offset": [7158, 7302],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9EE"
    },
    "2516": {
      "fn": "MainStaking.harvest",
      "offset": [7158, 7302],
      "op": "SWAP2",
      "path": "12"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2523": {
      "op": "SHL"
    },
    "2524": {
      "op": "SUB"
    },
    "2525": {
      "fn": "MainStaking.harvest",
      "offset": [7183, 7197],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "2528": {
      "fn": "MainStaking.harvest",
      "offset": [7183, 7197],
      "op": "SWAP1",
      "path": "12"
    },
    "2529": {
      "fn": "MainStaking.harvest",
      "offset": [7183, 7197],
      "op": "SWAP2",
      "path": "12"
    },
    "2530": {
      "fn": "MainStaking.harvest",
      "offset": [7183, 7197],
      "op": "DIV",
      "path": "12"
    },
    "2531": {
      "fn": "MainStaking.harvest",
      "offset": [7183, 7197],
      "op": "DUP2",
      "path": "12"
    },
    "2532": {
      "fn": "MainStaking.harvest",
      "offset": [7183, 7197],
      "op": "AND",
      "path": "12"
    },
    "2533": {
      "fn": "MainStaking.harvest",
      "offset": [7183, 7197],
      "op": "SWAP2",
      "path": "12"
    },
    "2534": {
      "fn": "MainStaking.harvest",
      "offset": [7211, 7228],
      "op": "AND",
      "path": "12"
    },
    "2535": {
      "fn": "MainStaking.harvest",
      "offset": [7242, 7249],
      "op": "DUP5",
      "path": "12"
    },
    "2536": {
      "fn": "MainStaking.harvest",
      "offset": [7263, 7271],
      "op": "DUP5",
      "path": "12"
    },
    "2537": {
      "fn": "MainStaking.harvest",
      "offset": [7285, 7292],
      "op": "DUP10",
      "path": "12"
    },
    "2538": {
      "fn": "MainStaking.harvest",
      "offset": [7158, 7169],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2946"
    },
    "2541": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [7158, 7302],
      "op": "JUMP",
      "path": "12"
    },
    "2542": {
      "fn": "MainStaking.harvest",
      "offset": [7158, 7302],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2543": {
      "fn": "MainStaking.harvest",
      "offset": [7317, 7358],
      "op": "PUSH32",
      "path": "12",
      "statement": 17,
      "value": "0x7EDF56D31CE00A3E83F4E441E2D7FD675722C1CEB9B699C341EE1D158D4C3623"
    },
    "2576": {
      "fn": "MainStaking.harvest",
      "offset": [7330, 7337],
      "op": "DUP3",
      "path": "12"
    },
    "2577": {
      "fn": "MainStaking.harvest",
      "offset": [7339, 7357],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA1A"
    },
    "2580": {
      "fn": "MainStaking.harvest",
      "offset": [7349, 7357],
      "op": "DUP4",
      "path": "12"
    },
    "2581": {
      "fn": "MainStaking.harvest",
      "offset": [7330, 7337],
      "op": "DUP3",
      "path": "12"
    },
    "2582": {
      "fn": "MainStaking.harvest",
      "offset": [7339, 7357],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3989"
    },
    "2585": {
      "fn": "MainStaking.harvest",
      "jump": "i",
      "offset": [7339, 7357],
      "op": "JUMP",
      "path": "12"
    },
    "2586": {
      "fn": "MainStaking.harvest",
      "offset": [7339, 7357],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2587": {
      "fn": "MainStaking.harvest",
      "offset": [7317, 7358],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2589": {
      "fn": "MainStaking.harvest",
      "offset": [7317, 7358],
      "op": "DUP1",
      "path": "12"
    },
    "2590": {
      "fn": "MainStaking.harvest",
      "offset": [7317, 7358],
      "op": "MLOAD",
      "path": "12"
    },
    "2591": {
      "op": "SWAP3"
    },
    "2592": {
      "op": "DUP4"
    },
    "2593": {
      "op": "MSTORE"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2596": {
      "op": "DUP4"
    },
    "2597": {
      "op": "ADD"
    },
    "2598": {
      "op": "SWAP2"
    },
    "2599": {
      "op": "SWAP1"
    },
    "2600": {
      "op": "SWAP2"
    },
    "2601": {
      "op": "MSTORE"
    },
    "2602": {
      "op": "ADD"
    },
    "2603": {
      "fn": "MainStaking.harvest",
      "offset": [7317, 7358],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2605": {
      "fn": "MainStaking.harvest",
      "offset": [7317, 7358],
      "op": "MLOAD",
      "path": "12"
    },
    "2606": {
      "fn": "MainStaking.harvest",
      "offset": [7317, 7358],
      "op": "DUP1",
      "path": "12"
    },
    "2607": {
      "fn": "MainStaking.harvest",
      "offset": [7317, 7358],
      "op": "SWAP2",
      "path": "12"
    },
    "2608": {
      "fn": "MainStaking.harvest",
      "offset": [7317, 7358],
      "op": "SUB",
      "path": "12"
    },
    "2609": {
      "fn": "MainStaking.harvest",
      "offset": [7317, 7358],
      "op": "SWAP1",
      "path": "12"
    },
    "2610": {
      "fn": "MainStaking.harvest",
      "offset": [7317, 7358],
      "op": "LOG1",
      "path": "12"
    },
    "2611": {
      "fn": "MainStaking.harvest",
      "offset": [6446, 7365],
      "op": "POP",
      "path": "12"
    },
    "2612": {
      "fn": "MainStaking.harvest",
      "offset": [6446, 7365],
      "op": "POP",
      "path": "12"
    },
    "2613": {
      "fn": "MainStaking.harvest",
      "offset": [6446, 7365],
      "op": "POP",
      "path": "12"
    },
    "2614": {
      "fn": "MainStaking.harvest",
      "offset": [6446, 7365],
      "op": "POP",
      "path": "12"
    },
    "2615": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "POP",
      "path": "12"
    },
    "2616": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "POP",
      "path": "12"
    },
    "2617": {
      "fn": "MainStaking.harvest",
      "offset": [6350, 7365],
      "op": "POP",
      "path": "12"
    },
    "2618": {
      "fn": "MainStaking.harvest",
      "jump": "o",
      "offset": [6350, 7365],
      "op": "JUMP",
      "path": "12"
    },
    "2619": {
      "fn": "MainStaking.claimPTP",
      "offset": [11561, 11789],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2620": {
      "fn": "MainStaking.claimPTP",
      "offset": [11627, 11638],
      "op": "PUSH1",
      "path": "12",
      "value": "0x65"
    },
    "2622": {
      "fn": "MainStaking.claimPTP",
      "offset": [11627, 11638],
      "op": "SLOAD",
      "path": "12"
    },
    "2623": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2625": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "MLOAD",
      "path": "12"
    },
    "2626": {
      "op": "PUSH4",
      "value": "0x9BC8BF75"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2633": {
      "op": "SHL"
    },
    "2634": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP2",
      "path": "12"
    },
    "2635": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "MSTORE",
      "path": "12"
    },
    "2636": {
      "fn": "MainStaking.claimPTP",
      "offset": [11661, 11665],
      "op": "ADDRESS",
      "path": "12"
    },
    "2637": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2639": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP3",
      "path": "12"
    },
    "2640": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "ADD",
      "path": "12"
    },
    "2641": {
      "op": "MSTORE"
    },
    "2642": {
      "fn": "MainStaking.claimPTP",
      "offset": [11598, 11612],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2644": {
      "fn": "MainStaking.claimPTP",
      "offset": [11598, 11612],
      "op": "SWAP2",
      "path": "12"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2651": {
      "op": "SHL"
    },
    "2652": {
      "op": "SUB"
    },
    "2653": {
      "fn": "MainStaking.claimPTP",
      "offset": [11627, 11638],
      "op": "AND",
      "path": "12"
    },
    "2654": {
      "fn": "MainStaking.claimPTP",
      "offset": [11627, 11638],
      "op": "SWAP1",
      "path": "12"
    },
    "2655": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11652],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9BC8BF75"
    },
    "2660": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11652],
      "op": "SWAP1",
      "path": "12"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2663": {
      "op": "ADD"
    },
    "2664": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2666": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2668": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "MLOAD",
      "path": "12"
    },
    "2669": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP1",
      "path": "12"
    },
    "2670": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP4",
      "path": "12"
    },
    "2671": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "SUB",
      "path": "12"
    },
    "2672": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP2",
      "path": "12"
    },
    "2673": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP7",
      "path": "12"
    },
    "2674": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP1",
      "path": "12"
    },
    "2675": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2676": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "ISZERO",
      "path": "12"
    },
    "2677": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP1",
      "path": "12"
    },
    "2678": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "ISZERO",
      "path": "12"
    },
    "2679": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA7F"
    },
    "2682": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "JUMPI",
      "path": "12"
    },
    "2683": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2685": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP1",
      "path": "12"
    },
    "2686": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "REVERT",
      "path": "12"
    },
    "2687": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2688": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "POP",
      "path": "12"
    },
    "2689": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "GAS",
      "path": "12"
    },
    "2690": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "STATICCALL",
      "path": "12"
    },
    "2691": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "ISZERO",
      "path": "12"
    },
    "2692": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP1",
      "path": "12"
    },
    "2693": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "ISZERO",
      "path": "12"
    },
    "2694": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA93"
    },
    "2697": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "JUMPI",
      "path": "12"
    },
    "2698": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2699": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2701": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP1",
      "path": "12"
    },
    "2702": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2703": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2704": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2706": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "REVERT",
      "path": "12"
    },
    "2707": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2708": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "POP",
      "path": "12"
    },
    "2709": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "POP",
      "path": "12"
    },
    "2710": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "POP",
      "path": "12"
    },
    "2711": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "POP",
      "path": "12"
    },
    "2712": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2714": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "MLOAD",
      "path": "12"
    },
    "2715": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2716": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2718": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "NOT",
      "path": "12"
    },
    "2719": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2721": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP3",
      "path": "12"
    },
    "2722": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "ADD",
      "path": "12"
    },
    "2723": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "AND",
      "path": "12"
    },
    "2724": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP3",
      "path": "12"
    },
    "2725": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "ADD",
      "path": "12"
    },
    "2726": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP1",
      "path": "12"
    },
    "2727": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2729": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "MSTORE",
      "path": "12"
    },
    "2730": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "POP",
      "path": "12"
    },
    "2731": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "DUP2",
      "path": "12"
    },
    "2732": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "ADD",
      "path": "12"
    },
    "2733": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "SWAP1",
      "path": "12"
    },
    "2734": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAB7"
    },
    "2737": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "SWAP2",
      "path": "12"
    },
    "2738": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "SWAP1",
      "path": "12"
    },
    "2739": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3688"
    },
    "2742": {
      "fn": "MainStaking.claimPTP",
      "jump": "i",
      "offset": [11615, 11667],
      "op": "JUMP",
      "path": "12"
    },
    "2743": {
      "fn": "MainStaking.claimPTP",
      "offset": [11615, 11667],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2744": {
      "fn": "MainStaking.claimPTP",
      "offset": [11598, 11667],
      "op": "SWAP1",
      "path": "12"
    },
    "2745": {
      "op": "POP"
    },
    "2746": {
      "fn": "MainStaking.claimPTP",
      "offset": [11681, 11691],
      "op": "DUP1",
      "path": "12"
    },
    "2747": {
      "branch": 125,
      "fn": "MainStaking.claimPTP",
      "offset": [11681, 11691],
      "op": "ISZERO",
      "path": "12"
    },
    "2748": {
      "fn": "MainStaking.claimPTP",
      "offset": [11677, 11750],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB28"
    },
    "2751": {
      "branch": 125,
      "fn": "MainStaking.claimPTP",
      "offset": [11677, 11750],
      "op": "JUMPI",
      "path": "12"
    },
    "2752": {
      "fn": "MainStaking.claimPTP",
      "offset": [11719, 11730],
      "op": "PUSH1",
      "path": "12",
      "statement": 18,
      "value": "0x65"
    },
    "2754": {
      "fn": "MainStaking.claimPTP",
      "offset": [11719, 11730],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2756": {
      "fn": "MainStaking.claimPTP",
      "offset": [11719, 11730],
      "op": "SWAP1",
      "path": "12"
    },
    "2757": {
      "fn": "MainStaking.claimPTP",
      "offset": [11719, 11730],
      "op": "SLOAD",
      "path": "12"
    },
    "2758": {
      "fn": "MainStaking.claimPTP",
      "offset": [11719, 11730],
      "op": "SWAP1",
      "path": "12"
    },
    "2759": {
      "fn": "MainStaking.claimPTP",
      "offset": [11719, 11730],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "2762": {
      "fn": "MainStaking.claimPTP",
      "offset": [11719, 11730],
      "op": "EXP",
      "path": "12"
    },
    "2763": {
      "fn": "MainStaking.claimPTP",
      "offset": [11719, 11730],
      "op": "SWAP1",
      "path": "12"
    },
    "2764": {
      "fn": "MainStaking.claimPTP",
      "offset": [11719, 11730],
      "op": "DIV",
      "path": "12"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2771": {
      "op": "SHL"
    },
    "2772": {
      "op": "SUB"
    },
    "2773": {
      "fn": "MainStaking.claimPTP",
      "offset": [11719, 11730],
      "op": "AND",
      "path": "12"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2780": {
      "op": "SHL"
    },
    "2781": {
      "op": "SUB"
    },
    "2782": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11737],
      "op": "AND",
      "path": "12"
    },
    "2783": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11737],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4E71D92D"
    },
    "2788": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2790": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "MLOAD",
      "path": "12"
    },
    "2791": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "DUP2",
      "path": "12"
    },
    "2792": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2797": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "AND",
      "path": "12"
    },
    "2798": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "2800": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "SHL",
      "path": "12"
    },
    "2801": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "DUP2",
      "path": "12"
    },
    "2802": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "MSTORE",
      "path": "12"
    },
    "2803": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2805": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "ADD",
      "path": "12"
    },
    "2806": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2808": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2810": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "MLOAD",
      "path": "12"
    },
    "2811": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "DUP1",
      "path": "12"
    },
    "2812": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "DUP4",
      "path": "12"
    },
    "2813": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "SUB",
      "path": "12"
    },
    "2814": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "DUP2",
      "path": "12"
    },
    "2815": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2817": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "DUP8",
      "path": "12"
    },
    "2818": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "DUP1",
      "path": "12"
    },
    "2819": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2820": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "ISZERO",
      "path": "12"
    },
    "2821": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "DUP1",
      "path": "12"
    },
    "2822": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "ISZERO",
      "path": "12"
    },
    "2823": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB0F"
    },
    "2826": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "JUMPI",
      "path": "12"
    },
    "2827": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2829": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "DUP1",
      "path": "12"
    },
    "2830": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "REVERT",
      "path": "12"
    },
    "2831": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2832": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "POP",
      "path": "12"
    },
    "2833": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "GAS",
      "path": "12"
    },
    "2834": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "CALL",
      "path": "12"
    },
    "2835": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "ISZERO",
      "path": "12"
    },
    "2836": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "DUP1",
      "path": "12"
    },
    "2837": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "ISZERO",
      "path": "12"
    },
    "2838": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB23"
    },
    "2841": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "JUMPI",
      "path": "12"
    },
    "2842": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2843": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2845": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "DUP1",
      "path": "12"
    },
    "2846": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2847": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2848": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2850": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "REVERT",
      "path": "12"
    },
    "2851": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2852": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "POP",
      "path": "12"
    },
    "2853": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "POP",
      "path": "12"
    },
    "2854": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "POP",
      "path": "12"
    },
    "2855": {
      "fn": "MainStaking.claimPTP",
      "offset": [11707, 11739],
      "op": "POP",
      "path": "12"
    },
    "2856": {
      "fn": "MainStaking.claimPTP",
      "offset": [11677, 11750],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2857": {
      "fn": "MainStaking.claimPTP",
      "offset": [11764, 11782],
      "op": "PUSH1",
      "path": "12",
      "statement": 19,
      "value": "0x40"
    },
    "2859": {
      "fn": "MainStaking.claimPTP",
      "offset": [11764, 11782],
      "op": "MLOAD",
      "path": "12"
    },
    "2860": {
      "op": "DUP2"
    },
    "2861": {
      "op": "DUP2"
    },
    "2862": {
      "op": "MSTORE"
    },
    "2863": {
      "fn": "MainStaking.claimPTP",
      "offset": [11764, 11782],
      "op": "PUSH32",
      "path": "12",
      "value": "0xF56CA5BEF7B3B41CEC7558FE59C14FD8FD059BC321A4A1473662A801842E108E"
    },
    "2896": {
      "fn": "MainStaking.claimPTP",
      "offset": [11764, 11782],
      "op": "SWAP1",
      "path": "12"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2899": {
      "op": "ADD"
    },
    "2900": {
      "fn": "MainStaking.claimPTP",
      "offset": [11764, 11782],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2901": {
      "fn": "MainStaking.claimPTP",
      "offset": [11764, 11782],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2903": {
      "fn": "MainStaking.claimPTP",
      "offset": [11764, 11782],
      "op": "MLOAD",
      "path": "12"
    },
    "2904": {
      "fn": "MainStaking.claimPTP",
      "offset": [11764, 11782],
      "op": "DUP1",
      "path": "12"
    },
    "2905": {
      "fn": "MainStaking.claimPTP",
      "offset": [11764, 11782],
      "op": "SWAP2",
      "path": "12"
    },
    "2906": {
      "fn": "MainStaking.claimPTP",
      "offset": [11764, 11782],
      "op": "SUB",
      "path": "12"
    },
    "2907": {
      "fn": "MainStaking.claimPTP",
      "offset": [11764, 11782],
      "op": "SWAP1",
      "path": "12"
    },
    "2908": {
      "fn": "MainStaking.claimPTP",
      "offset": [11764, 11782],
      "op": "LOG1",
      "path": "12"
    },
    "2909": {
      "fn": "MainStaking.claimPTP",
      "offset": [11588, 11789],
      "op": "POP",
      "path": "12"
    },
    "2910": {
      "fn": "MainStaking.claimPTP",
      "jump": "o",
      "offset": [11561, 11789],
      "op": "JUMP",
      "path": "12"
    },
    "2911": {
      "fn": "MainStaking.stakePTP",
      "offset": [11209, 11456],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2912": {
      "fn": "MainStaking.stakePTP",
      "offset": [11264, 11274],
      "op": "DUP1",
      "path": "12"
    },
    "2913": {
      "branch": 126,
      "fn": "MainStaking.stakePTP",
      "offset": [11264, 11274],
      "op": "ISZERO",
      "path": "12"
    },
    "2914": {
      "fn": "MainStaking.stakePTP",
      "offset": [11260, 11395],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC4D"
    },
    "2917": {
      "branch": 126,
      "fn": "MainStaking.stakePTP",
      "offset": [11260, 11395],
      "op": "JUMPI",
      "path": "12"
    },
    "2918": {
      "fn": "MainStaking.stakePTP",
      "offset": [11297, 11300],
      "op": "PUSH1",
      "path": "12",
      "statement": 20,
      "value": "0x66"
    },
    "2920": {
      "fn": "MainStaking.stakePTP",
      "offset": [11297, 11300],
      "op": "SLOAD",
      "path": "12"
    },
    "2921": {
      "fn": "MainStaking.stakePTP",
      "offset": [11310, 11321],
      "op": "PUSH1",
      "path": "12",
      "value": "0x65"
    },
    "2923": {
      "fn": "MainStaking.stakePTP",
      "offset": [11310, 11321],
      "op": "SLOAD",
      "path": "12"
    },
    "2924": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2926": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "MLOAD",
      "path": "12"
    },
    "2927": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2934": {
      "op": "SHL"
    },
    "2935": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP2",
      "path": "12"
    },
    "2936": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "MSTORE",
      "path": "12"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "op": "SUB"
    },
    "2945": {
      "fn": "MainStaking.stakePTP",
      "offset": [11297, 11300],
      "op": "SWAP3",
      "path": "12"
    },
    "2946": {
      "fn": "MainStaking.stakePTP",
      "offset": [11297, 11300],
      "op": "DUP4",
      "path": "12"
    },
    "2947": {
      "fn": "MainStaking.stakePTP",
      "offset": [11297, 11300],
      "op": "AND",
      "path": "12"
    },
    "2948": {
      "fn": "MainStaking.stakePTP",
      "offset": [11297, 11300],
      "op": "SWAP3",
      "path": "12"
    },
    "2949": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11309],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95EA7B3"
    },
    "2954": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11309],
      "op": "SWAP3",
      "path": "12"
    },
    "2955": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB9B"
    },
    "2958": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "SWAP3",
      "path": "12"
    },
    "2959": {
      "fn": "MainStaking.stakePTP",
      "offset": [11310, 11321],
      "op": "SWAP2",
      "path": "12"
    },
    "2960": {
      "fn": "MainStaking.stakePTP",
      "offset": [11310, 11321],
      "op": "AND",
      "path": "12"
    },
    "2961": {
      "fn": "MainStaking.stakePTP",
      "offset": [11310, 11321],
      "op": "SWAP1",
      "path": "12"
    },
    "2962": {
      "fn": "MainStaking.stakePTP",
      "offset": [11323, 11329],
      "op": "DUP6",
      "path": "12"
    },
    "2963": {
      "fn": "MainStaking.stakePTP",
      "offset": [11323, 11329],
      "op": "SWAP1",
      "path": "12"
    },
    "2964": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2966": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "ADD",
      "path": "12"
    },
    "2967": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "2970": {
      "fn": "MainStaking.stakePTP",
      "jump": "i",
      "offset": [11290, 11330],
      "op": "JUMP",
      "path": "12"
    },
    "2971": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2972": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2974": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2976": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "MLOAD",
      "path": "12"
    },
    "2977": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP1",
      "path": "12"
    },
    "2978": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP4",
      "path": "12"
    },
    "2979": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "SUB",
      "path": "12"
    },
    "2980": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP2",
      "path": "12"
    },
    "2981": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2983": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP8",
      "path": "12"
    },
    "2984": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP1",
      "path": "12"
    },
    "2985": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2986": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "ISZERO",
      "path": "12"
    },
    "2987": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP1",
      "path": "12"
    },
    "2988": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "ISZERO",
      "path": "12"
    },
    "2989": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBB5"
    },
    "2992": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "JUMPI",
      "path": "12"
    },
    "2993": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2995": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP1",
      "path": "12"
    },
    "2996": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "REVERT",
      "path": "12"
    },
    "2997": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2998": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "POP",
      "path": "12"
    },
    "2999": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "GAS",
      "path": "12"
    },
    "3000": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "CALL",
      "path": "12"
    },
    "3001": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "ISZERO",
      "path": "12"
    },
    "3002": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP1",
      "path": "12"
    },
    "3003": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "ISZERO",
      "path": "12"
    },
    "3004": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBC9"
    },
    "3007": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "JUMPI",
      "path": "12"
    },
    "3008": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3009": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3011": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP1",
      "path": "12"
    },
    "3012": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "3013": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3014": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3016": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "REVERT",
      "path": "12"
    },
    "3017": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3018": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "POP",
      "path": "12"
    },
    "3019": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "POP",
      "path": "12"
    },
    "3020": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "POP",
      "path": "12"
    },
    "3021": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "POP",
      "path": "12"
    },
    "3022": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3024": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "MLOAD",
      "path": "12"
    },
    "3025": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3026": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "3028": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "NOT",
      "path": "12"
    },
    "3029": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "3031": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP3",
      "path": "12"
    },
    "3032": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "ADD",
      "path": "12"
    },
    "3033": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "AND",
      "path": "12"
    },
    "3034": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP3",
      "path": "12"
    },
    "3035": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "ADD",
      "path": "12"
    },
    "3036": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP1",
      "path": "12"
    },
    "3037": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3039": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "MSTORE",
      "path": "12"
    },
    "3040": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "POP",
      "path": "12"
    },
    "3041": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "DUP2",
      "path": "12"
    },
    "3042": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "ADD",
      "path": "12"
    },
    "3043": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "SWAP1",
      "path": "12"
    },
    "3044": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBED"
    },
    "3047": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "SWAP2",
      "path": "12"
    },
    "3048": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "SWAP1",
      "path": "12"
    },
    "3049": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "3052": {
      "fn": "MainStaking.stakePTP",
      "jump": "i",
      "offset": [11290, 11330],
      "op": "JUMP",
      "path": "12"
    },
    "3053": {
      "fn": "MainStaking.stakePTP",
      "offset": [11290, 11330],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3054": {
      "op": "POP"
    },
    "3055": {
      "fn": "MainStaking.stakePTP",
      "offset": [11356, 11367],
      "op": "PUSH1",
      "path": "12",
      "statement": 21,
      "value": "0x65"
    },
    "3057": {
      "fn": "MainStaking.stakePTP",
      "offset": [11356, 11367],
      "op": "SLOAD",
      "path": "12"
    },
    "3058": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3060": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "MLOAD",
      "path": "12"
    },
    "3061": {
      "op": "PUSH4",
      "value": "0xB6B55F25"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3068": {
      "op": "SHL"
    },
    "3069": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "DUP2",
      "path": "12"
    },
    "3070": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "MSTORE",
      "path": "12"
    },
    "3071": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3073": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "DUP2",
      "path": "12"
    },
    "3074": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "ADD",
      "path": "12"
    },
    "3075": {
      "op": "DUP4"
    },
    "3076": {
      "op": "SWAP1"
    },
    "3077": {
      "op": "MSTORE"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3084": {
      "op": "SHL"
    },
    "3085": {
      "op": "SUB"
    },
    "3086": {
      "fn": "MainStaking.stakePTP",
      "offset": [11356, 11367],
      "op": "SWAP1",
      "path": "12"
    },
    "3087": {
      "fn": "MainStaking.stakePTP",
      "offset": [11356, 11367],
      "op": "SWAP2",
      "path": "12"
    },
    "3088": {
      "fn": "MainStaking.stakePTP",
      "offset": [11356, 11367],
      "op": "AND",
      "path": "12"
    },
    "3089": {
      "fn": "MainStaking.stakePTP",
      "offset": [11356, 11367],
      "op": "SWAP1",
      "path": "12"
    },
    "3090": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11376],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB6B55F25"
    },
    "3095": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11376],
      "op": "SWAP1",
      "path": "12"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3098": {
      "op": "ADD"
    },
    "3099": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3101": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3103": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "MLOAD",
      "path": "12"
    },
    "3104": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "DUP1",
      "path": "12"
    },
    "3105": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "DUP4",
      "path": "12"
    },
    "3106": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "SUB",
      "path": "12"
    },
    "3107": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "DUP2",
      "path": "12"
    },
    "3108": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3110": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "DUP8",
      "path": "12"
    },
    "3111": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "DUP1",
      "path": "12"
    },
    "3112": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3113": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "ISZERO",
      "path": "12"
    },
    "3114": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "DUP1",
      "path": "12"
    },
    "3115": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "ISZERO",
      "path": "12"
    },
    "3116": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC34"
    },
    "3119": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "JUMPI",
      "path": "12"
    },
    "3120": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3122": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "DUP1",
      "path": "12"
    },
    "3123": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "REVERT",
      "path": "12"
    },
    "3124": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3125": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "POP",
      "path": "12"
    },
    "3126": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "GAS",
      "path": "12"
    },
    "3127": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "CALL",
      "path": "12"
    },
    "3128": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "ISZERO",
      "path": "12"
    },
    "3129": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "DUP1",
      "path": "12"
    },
    "3130": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "ISZERO",
      "path": "12"
    },
    "3131": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC48"
    },
    "3134": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "JUMPI",
      "path": "12"
    },
    "3135": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3136": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3138": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "DUP1",
      "path": "12"
    },
    "3139": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "3140": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3141": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3143": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "REVERT",
      "path": "12"
    },
    "3144": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3145": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "POP",
      "path": "12"
    },
    "3146": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "POP",
      "path": "12"
    },
    "3147": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "POP",
      "path": "12"
    },
    "3148": {
      "fn": "MainStaking.stakePTP",
      "offset": [11344, 11384],
      "op": "POP",
      "path": "12"
    },
    "3149": {
      "fn": "MainStaking.stakePTP",
      "offset": [11260, 11395],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3150": {
      "fn": "MainStaking.stakePTP",
      "offset": [11404, 11414],
      "op": "PUSH2",
      "path": "12",
      "statement": 22,
      "value": "0xC55"
    },
    "3153": {
      "fn": "MainStaking.stakePTP",
      "offset": [11404, 11412],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA3B"
    },
    "3156": {
      "fn": "MainStaking.stakePTP",
      "jump": "i",
      "offset": [11404, 11414],
      "op": "JUMP",
      "path": "12"
    },
    "3157": {
      "fn": "MainStaking.stakePTP",
      "offset": [11404, 11414],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3158": {
      "fn": "MainStaking.stakePTP",
      "offset": [11429, 11449],
      "op": "PUSH1",
      "path": "12",
      "statement": 23,
      "value": "0x40"
    },
    "3160": {
      "fn": "MainStaking.stakePTP",
      "offset": [11429, 11449],
      "op": "MLOAD",
      "path": "12"
    },
    "3161": {
      "op": "DUP2"
    },
    "3162": {
      "op": "DUP2"
    },
    "3163": {
      "op": "MSTORE"
    },
    "3164": {
      "fn": "MainStaking.stakePTP",
      "offset": [11429, 11449],
      "op": "PUSH32",
      "path": "12",
      "value": "0x6A6F399BD745E41DFCC7AC713C8FD787618D2CB5BA6318526A21250C3854F595"
    },
    "3197": {
      "fn": "MainStaking.stakePTP",
      "offset": [11429, 11449],
      "op": "SWAP1",
      "path": "12"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3200": {
      "op": "ADD"
    },
    "3201": {
      "fn": "MainStaking.stakePTP",
      "offset": [11429, 11449],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB54"
    },
    "3204": {
      "op": "JUMP"
    },
    "3205": {
      "fn": "MainStaking.claimdAndStakePTP",
      "offset": [11795, 11883],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3206": {
      "fn": "MainStaking.claimdAndStakePTP",
      "offset": [11843, 11853],
      "op": "PUSH2",
      "path": "12",
      "statement": 24,
      "value": "0xC8D"
    },
    "3209": {
      "fn": "MainStaking.claimdAndStakePTP",
      "offset": [11843, 11851],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA3B"
    },
    "3212": {
      "fn": "MainStaking.claimdAndStakePTP",
      "jump": "i",
      "offset": [11843, 11853],
      "op": "JUMP",
      "path": "12"
    },
    "3213": {
      "fn": "MainStaking.claimdAndStakePTP",
      "offset": [11843, 11853],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3214": {
      "fn": "MainStaking.claimdAndStakePTP",
      "offset": [11863, 11876],
      "op": "PUSH2",
      "path": "12",
      "statement": 25,
      "value": "0xC95"
    },
    "3217": {
      "fn": "MainStaking.claimdAndStakePTP",
      "offset": [11863, 11874],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2017"
    },
    "3220": {
      "fn": "MainStaking.claimdAndStakePTP",
      "jump": "i",
      "offset": [11863, 11876],
      "op": "JUMP",
      "path": "12"
    },
    "3221": {
      "fn": "MainStaking.claimdAndStakePTP",
      "offset": [11863, 11876],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3222": {
      "fn": "MainStaking.claimdAndStakePTP",
      "jump": "o",
      "offset": [11795, 11883],
      "op": "JUMP",
      "path": "12"
    },
    "3223": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3224": {
      "offset": [2357, 2370],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3226": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2357, 2370],
      "op": "SLOAD",
      "path": "19"
    },
    "3227": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2357, 2370],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "3230": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2357, 2370],
      "op": "SWAP1",
      "path": "19"
    },
    "3231": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2357, 2370],
      "op": "DIV",
      "path": "19"
    },
    "3232": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2357, 2370],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "3234": {
      "branch": 151,
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2357, 2370],
      "op": "AND",
      "path": "19"
    },
    "3235": {
      "offset": [2357, 2405],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCB2"
    },
    "3238": {
      "branch": 151,
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2357, 2405],
      "op": "JUMPI",
      "path": "19"
    },
    "3239": {
      "offset": [2393, 2405],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3241": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2393, 2405],
      "op": "SLOAD",
      "path": "19"
    },
    "3242": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2393, 2405],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "3244": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2393, 2405],
      "op": "AND",
      "path": "19"
    },
    "3245": {
      "offset": [2392, 2405],
      "op": "ISZERO",
      "path": "19"
    },
    "3246": {
      "offset": [2357, 2405],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCB6"
    },
    "3249": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2357, 2405],
      "op": "JUMP",
      "path": "19"
    },
    "3250": {
      "branch": 152,
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2357, 2405],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3251": {
      "fn": "Initializable._isConstructor",
      "offset": [3156, 3160],
      "op": "ADDRESS",
      "path": "19",
      "statement": 26
    },
    "3252": {
      "op": "EXTCODESIZE"
    },
    "3253": {
      "op": "ISZERO"
    },
    "3254": {
      "offset": [2373, 2389],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3255": {
      "offset": [2336, 2477],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD19"
    },
    "3258": {
      "branch": 152,
      "offset": [2336, 2477],
      "op": "JUMPI",
      "path": "19"
    },
    "3259": {
      "fn": "Initializable._isConstructor",
      "offset": [2336, 2477],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3261": {
      "fn": "Initializable._isConstructor",
      "offset": [2336, 2477],
      "op": "MLOAD",
      "path": "19"
    },
    "3262": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3268": {
      "op": "SHL"
    },
    "3269": {
      "offset": [2336, 2477],
      "op": "DUP2",
      "path": "19"
    },
    "3270": {
      "fn": "Initializable._isConstructor",
      "offset": [2336, 2477],
      "op": "MSTORE",
      "path": "19"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3273": {
      "offset": [2336, 2477],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3275": {
      "fn": "Initializable._isConstructor",
      "offset": [2336, 2477],
      "op": "DUP3",
      "path": "19"
    },
    "3276": {
      "fn": "Initializable._isConstructor",
      "offset": [2336, 2477],
      "op": "ADD",
      "path": "19"
    },
    "3277": {
      "op": "MSTORE"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3282": {
      "op": "DUP3"
    },
    "3283": {
      "op": "ADD"
    },
    "3284": {
      "op": "MSTORE"
    },
    "3285": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3320": {
      "op": "DUP3"
    },
    "3321": {
      "op": "ADD"
    },
    "3322": {
      "op": "MSTORE"
    },
    "3323": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "3340": {
      "op": "SHL"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3343": {
      "op": "DUP3"
    },
    "3344": {
      "op": "ADD"
    },
    "3345": {
      "op": "MSTORE"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3348": {
      "op": "ADD"
    },
    "3349": {
      "offset": [2336, 2477],
      "op": "PUSH2",
      "path": "19",
      "value": "0x719"
    },
    "3352": {
      "op": "JUMP"
    },
    "3353": {
      "offset": [2336, 2477],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3354": {
      "offset": [2488, 2507],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3356": {
      "offset": [2511, 2524],
      "op": "SLOAD",
      "path": "19"
    },
    "3357": {
      "fn": "Initializable._isConstructor",
      "offset": [2511, 2524],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "3360": {
      "fn": "Initializable._isConstructor",
      "offset": [2511, 2524],
      "op": "SWAP1",
      "path": "19"
    },
    "3361": {
      "fn": "Initializable._isConstructor",
      "offset": [2511, 2524],
      "op": "DIV",
      "path": "19"
    },
    "3362": {
      "fn": "Initializable._isConstructor",
      "offset": [2511, 2524],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "3364": {
      "fn": "Initializable._isConstructor",
      "offset": [2511, 2524],
      "op": "AND",
      "path": "19"
    },
    "3365": {
      "offset": [2510, 2524],
      "op": "ISZERO",
      "path": "19"
    },
    "3366": {
      "offset": [2534, 2632],
      "op": "DUP1",
      "path": "19"
    },
    "3367": {
      "fn": "Initializable._isConstructor",
      "offset": [2534, 2632],
      "op": "ISZERO",
      "path": "19"
    },
    "3368": {
      "fn": "Initializable._isConstructor",
      "offset": [2534, 2632],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD3B"
    },
    "3371": {
      "fn": "Initializable._isConstructor",
      "offset": [2534, 2632],
      "op": "JUMPI",
      "path": "19"
    },
    "3372": {
      "offset": [2568, 2581],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3374": {
      "offset": [2568, 2588],
      "op": "DUP1",
      "path": "19"
    },
    "3375": {
      "fn": "Initializable._isConstructor",
      "offset": [2568, 2588],
      "op": "SLOAD",
      "path": "19"
    },
    "3376": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3379": {
      "op": "NOT"
    },
    "3380": {
      "offset": [2602, 2621],
      "op": "AND",
      "path": "19"
    },
    "3381": {
      "fn": "Initializable._isConstructor",
      "offset": [2602, 2621],
      "op": "PUSH2",
      "path": "19",
      "value": "0x101"
    },
    "3384": {
      "fn": "Initializable._isConstructor",
      "offset": [2602, 2621],
      "op": "OR",
      "path": "19"
    },
    "3385": {
      "fn": "Initializable._isConstructor",
      "offset": [2602, 2621],
      "op": "SWAP1",
      "path": "19"
    },
    "3386": {
      "fn": "Initializable._isConstructor",
      "offset": [2602, 2621],
      "op": "SSTORE",
      "path": "19"
    },
    "3387": {
      "offset": [2534, 2632],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3388": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2691, 2707],
      "op": "PUSH2",
      "path": "12",
      "statement": 27,
      "value": "0xD43"
    },
    "3391": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2691, 2705],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30DC"
    },
    "3394": {
      "fn": "MainStaking.__MainStaking_init",
      "jump": "i",
      "offset": [2691, 2707],
      "op": "JUMP",
      "path": "12"
    },
    "3395": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2691, 2707],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3396": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2728],
      "op": "PUSH1",
      "path": "12",
      "statement": 28,
      "value": "0x65"
    },
    "3398": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "DUP1",
      "path": "12"
    },
    "3399": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "SLOAD",
      "path": "12"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3406": {
      "op": "SHL"
    },
    "3407": {
      "op": "SUB"
    },
    "3408": {
      "op": "NOT"
    },
    "3409": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "SWAP1",
      "path": "12"
    },
    "3410": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "DUP2",
      "path": "12"
    },
    "3411": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "AND",
      "path": "12"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3418": {
      "op": "SHL"
    },
    "3419": {
      "op": "SUB"
    },
    "3420": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "DUP10",
      "path": "12"
    },
    "3421": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "DUP2",
      "path": "12"
    },
    "3422": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "AND",
      "path": "12"
    },
    "3423": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "SWAP2",
      "path": "12"
    },
    "3424": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "SWAP1",
      "path": "12"
    },
    "3425": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "SWAP2",
      "path": "12"
    },
    "3426": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "OR",
      "path": "12"
    },
    "3427": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "SWAP1",
      "path": "12"
    },
    "3428": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "SWAP3",
      "path": "12"
    },
    "3429": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2717, 2743],
      "op": "SSTORE",
      "path": "12"
    },
    "3430": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2789, 2792],
      "op": "PUSH1",
      "path": "12",
      "statement": 29,
      "value": "0x66"
    },
    "3432": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2789, 2799],
      "op": "DUP1",
      "path": "12"
    },
    "3433": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2789, 2799],
      "op": "SLOAD",
      "path": "12"
    },
    "3434": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2789, 2799],
      "op": "DUP3",
      "path": "12"
    },
    "3435": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2789, 2799],
      "op": "AND",
      "path": "12"
    },
    "3436": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2789, 2799],
      "op": "DUP11",
      "path": "12"
    },
    "3437": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2789, 2799],
      "op": "DUP5",
      "path": "12"
    },
    "3438": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2789, 2799],
      "op": "AND",
      "path": "12"
    },
    "3439": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2789, 2799],
      "op": "OR",
      "path": "12"
    },
    "3440": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2789, 2799],
      "op": "SWAP1",
      "path": "12"
    },
    "3441": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2789, 2799],
      "op": "SSTORE",
      "path": "12"
    },
    "3442": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2880, 2893],
      "op": "PUSH1",
      "path": "12",
      "statement": 30,
      "value": "0x68"
    },
    "3444": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2880, 2910],
      "op": "DUP1",
      "path": "12"
    },
    "3445": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2880, 2910],
      "op": "SLOAD",
      "path": "12"
    },
    "3446": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2880, 2910],
      "op": "DUP3",
      "path": "12"
    },
    "3447": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2880, 2910],
      "op": "AND",
      "path": "12"
    },
    "3448": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2880, 2910],
      "op": "DUP9",
      "path": "12"
    },
    "3449": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2880, 2910],
      "op": "DUP5",
      "path": "12"
    },
    "3450": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2880, 2910],
      "op": "AND",
      "path": "12"
    },
    "3451": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2880, 2910],
      "op": "OR",
      "path": "12"
    },
    "3452": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2880, 2910],
      "op": "SWAP1",
      "path": "12"
    },
    "3453": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2880, 2910],
      "op": "SSTORE",
      "path": "12"
    },
    "3454": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2994, 3008],
      "op": "PUSH1",
      "path": "12",
      "statement": 31,
      "value": "0x69"
    },
    "3456": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2994, 3026],
      "op": "DUP1",
      "path": "12"
    },
    "3457": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2994, 3026],
      "op": "SLOAD",
      "path": "12"
    },
    "3458": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2994, 3026],
      "op": "DUP3",
      "path": "12"
    },
    "3459": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2994, 3026],
      "op": "AND",
      "path": "12"
    },
    "3460": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2994, 3026],
      "op": "DUP8",
      "path": "12"
    },
    "3461": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2994, 3026],
      "op": "DUP5",
      "path": "12"
    },
    "3462": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2994, 3026],
      "op": "AND",
      "path": "12"
    },
    "3463": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2994, 3026],
      "op": "OR",
      "path": "12"
    },
    "3464": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2994, 3026],
      "op": "SWAP1",
      "path": "12"
    },
    "3465": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2994, 3026],
      "op": "SSTORE",
      "path": "12"
    },
    "3466": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3045],
      "op": "PUSH1",
      "path": "12",
      "statement": 32,
      "value": "0x6A"
    },
    "3468": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "DUP1",
      "path": "12"
    },
    "3469": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "SLOAD",
      "path": "12"
    },
    "3470": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "SWAP1",
      "path": "12"
    },
    "3471": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "SWAP2",
      "path": "12"
    },
    "3472": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "AND",
      "path": "12"
    },
    "3473": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "SWAP2",
      "path": "12"
    },
    "3474": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "DUP6",
      "path": "12"
    },
    "3475": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "AND",
      "path": "12"
    },
    "3476": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "SWAP2",
      "path": "12"
    },
    "3477": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "SWAP1",
      "path": "12"
    },
    "3478": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "SWAP2",
      "path": "12"
    },
    "3479": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "OR",
      "path": "12"
    },
    "3480": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "SWAP1",
      "path": "12"
    },
    "3481": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3036, 3058],
      "op": "SSTORE",
      "path": "12"
    },
    "3482": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3068, 3078],
      "op": "PUSH1",
      "path": "12",
      "statement": 33,
      "value": "0x6C"
    },
    "3484": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3068, 3091],
      "op": "DUP3",
      "path": "12"
    },
    "3485": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3068, 3091],
      "op": "SWAP1",
      "path": "12"
    },
    "3486": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3068, 3091],
      "op": "SSTORE",
      "path": "12"
    },
    "3487": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3101, 3109],
      "op": "PUSH1",
      "path": "12",
      "statement": 34,
      "value": "0x6D"
    },
    "3489": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3101, 3122],
      "op": "DUP3",
      "path": "12"
    },
    "3490": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3101, 3122],
      "op": "SWAP1",
      "path": "12"
    },
    "3491": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [3101, 3122],
      "op": "SSTORE",
      "path": "12"
    },
    "3492": {
      "offset": [2654, 2720],
      "op": "DUP1",
      "path": "19"
    },
    "3493": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2654, 2720],
      "op": "ISZERO",
      "path": "19"
    },
    "3494": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2654, 2720],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDB5"
    },
    "3497": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2654, 2720],
      "op": "JUMPI",
      "path": "19"
    },
    "3498": {
      "offset": [2704, 2709],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3500": {
      "offset": [2688, 2709],
      "op": "DUP1",
      "path": "19"
    },
    "3501": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2688, 2709],
      "op": "SLOAD",
      "path": "19"
    },
    "3502": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3505": {
      "op": "NOT"
    },
    "3506": {
      "offset": [2688, 2709],
      "op": "AND",
      "path": "19"
    },
    "3507": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2688, 2709],
      "op": "SWAP1",
      "path": "19"
    },
    "3508": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2688, 2709],
      "op": "SSTORE",
      "path": "19"
    },
    "3509": {
      "offset": [2654, 2720],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3510": {
      "offset": [2055, 2726],
      "op": "POP",
      "path": "19"
    },
    "3511": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "POP",
      "path": "12"
    },
    "3512": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "POP",
      "path": "12"
    },
    "3513": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "POP",
      "path": "12"
    },
    "3514": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "POP",
      "path": "12"
    },
    "3515": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "POP",
      "path": "12"
    },
    "3516": {
      "fn": "MainStaking.__MainStaking_init",
      "offset": [2455, 3129],
      "op": "POP",
      "path": "12"
    },
    "3517": {
      "fn": "MainStaking.__MainStaking_init",
      "jump": "o",
      "offset": [2455, 3129],
      "op": "JUMP",
      "path": "12"
    },
    "3518": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11889, 12021],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3519": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11974, 11985],
      "op": "PUSH1",
      "path": "12",
      "statement": 35,
      "value": "0x65"
    },
    "3521": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11974, 11985],
      "op": "SLOAD",
      "path": "12"
    },
    "3522": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3524": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "MLOAD",
      "path": "12"
    },
    "3525": {
      "op": "PUSH4",
      "value": "0x9BC8BF75"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3532": {
      "op": "SHL"
    },
    "3533": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP2",
      "path": "12"
    },
    "3534": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "MSTORE",
      "path": "12"
    },
    "3535": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [12008, 12012],
      "op": "ADDRESS",
      "path": "12"
    },
    "3536": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3538": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP3",
      "path": "12"
    },
    "3539": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "ADD",
      "path": "12"
    },
    "3540": {
      "op": "MSTORE"
    },
    "3541": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11936, 11943],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3543": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11936, 11943],
      "op": "SWAP2",
      "path": "12"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3550": {
      "op": "SHL"
    },
    "3551": {
      "op": "SUB"
    },
    "3552": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11974, 11985],
      "op": "AND",
      "path": "12"
    },
    "3553": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11974, 11985],
      "op": "SWAP1",
      "path": "12"
    },
    "3554": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 11999],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9BC8BF75"
    },
    "3559": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 11999],
      "op": "SWAP1",
      "path": "12"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3562": {
      "op": "ADD"
    },
    "3563": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3564": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3566": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3568": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "MLOAD",
      "path": "12"
    },
    "3569": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP1",
      "path": "12"
    },
    "3570": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP4",
      "path": "12"
    },
    "3571": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "SUB",
      "path": "12"
    },
    "3572": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP2",
      "path": "12"
    },
    "3573": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP7",
      "path": "12"
    },
    "3574": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP1",
      "path": "12"
    },
    "3575": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3576": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "ISZERO",
      "path": "12"
    },
    "3577": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP1",
      "path": "12"
    },
    "3578": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "ISZERO",
      "path": "12"
    },
    "3579": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE03"
    },
    "3582": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "JUMPI",
      "path": "12"
    },
    "3583": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3585": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP1",
      "path": "12"
    },
    "3586": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "REVERT",
      "path": "12"
    },
    "3587": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3588": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "POP",
      "path": "12"
    },
    "3589": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "GAS",
      "path": "12"
    },
    "3590": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "STATICCALL",
      "path": "12"
    },
    "3591": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "ISZERO",
      "path": "12"
    },
    "3592": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP1",
      "path": "12"
    },
    "3593": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "ISZERO",
      "path": "12"
    },
    "3594": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE17"
    },
    "3597": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "JUMPI",
      "path": "12"
    },
    "3598": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3599": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3601": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP1",
      "path": "12"
    },
    "3602": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "3603": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3604": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3606": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "REVERT",
      "path": "12"
    },
    "3607": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3608": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "POP",
      "path": "12"
    },
    "3609": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "POP",
      "path": "12"
    },
    "3610": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "POP",
      "path": "12"
    },
    "3611": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "POP",
      "path": "12"
    },
    "3612": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3614": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "MLOAD",
      "path": "12"
    },
    "3615": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3616": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "3618": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "NOT",
      "path": "12"
    },
    "3619": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "3621": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP3",
      "path": "12"
    },
    "3622": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "ADD",
      "path": "12"
    },
    "3623": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "AND",
      "path": "12"
    },
    "3624": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP3",
      "path": "12"
    },
    "3625": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "ADD",
      "path": "12"
    },
    "3626": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP1",
      "path": "12"
    },
    "3627": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3629": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "MSTORE",
      "path": "12"
    },
    "3630": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "POP",
      "path": "12"
    },
    "3631": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "DUP2",
      "path": "12"
    },
    "3632": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "ADD",
      "path": "12"
    },
    "3633": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "SWAP1",
      "path": "12"
    },
    "3634": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE3B"
    },
    "3637": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "SWAP2",
      "path": "12"
    },
    "3638": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "SWAP1",
      "path": "12"
    },
    "3639": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3688"
    },
    "3642": {
      "fn": "MainStaking.getStakedPtp",
      "jump": "i",
      "offset": [11962, 12014],
      "op": "JUMP",
      "path": "12"
    },
    "3643": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11962, 12014],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3644": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11955, 12014],
      "op": "SWAP1",
      "path": "12"
    },
    "3645": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11955, 12014],
      "op": "POP",
      "path": "12"
    },
    "3646": {
      "fn": "MainStaking.getStakedPtp",
      "offset": [11889, 12021],
      "op": "SWAP1",
      "path": "12"
    },
    "3647": {
      "fn": "MainStaking.getStakedPtp",
      "jump": "o",
      "offset": [11889, 12021],
      "op": "JUMP",
      "path": "12"
    },
    "3648": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3649": {
      "fn": "MainStaking.withdraw",
      "offset": [10149, 10152],
      "op": "PUSH1",
      "path": "12",
      "statement": 36,
      "value": "0x64"
    },
    "3651": {
      "fn": "MainStaking.withdraw",
      "offset": [10136, 10145],
      "op": "DUP3",
      "path": "12"
    },
    "3652": {
      "fn": "MainStaking.withdraw",
      "offset": [10136, 10152],
      "op": "GT",
      "path": "12"
    },
    "3653": {
      "branch": 127,
      "fn": "MainStaking.withdraw",
      "offset": [10136, 10152],
      "op": "ISZERO",
      "path": "12"
    },
    "3654": {
      "fn": "MainStaking.withdraw",
      "offset": [10128, 10178],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE89"
    },
    "3657": {
      "branch": 127,
      "fn": "MainStaking.withdraw",
      "offset": [10128, 10178],
      "op": "JUMPI",
      "path": "12"
    },
    "3658": {
      "fn": "MainStaking.withdraw",
      "offset": [10128, 10178],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3660": {
      "fn": "MainStaking.withdraw",
      "offset": [10128, 10178],
      "op": "MLOAD",
      "path": "12"
    },
    "3661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3667": {
      "op": "SHL"
    },
    "3668": {
      "fn": "MainStaking.withdraw",
      "offset": [10128, 10178],
      "op": "DUP2",
      "path": "12"
    },
    "3669": {
      "fn": "MainStaking.withdraw",
      "offset": [10128, 10178],
      "op": "MSTORE",
      "path": "12"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3672": {
      "fn": "MainStaking.withdraw",
      "offset": [10128, 10178],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3674": {
      "fn": "MainStaking.withdraw",
      "offset": [10128, 10178],
      "op": "DUP3",
      "path": "12"
    },
    "3675": {
      "fn": "MainStaking.withdraw",
      "offset": [10128, 10178],
      "op": "ADD",
      "path": "12"
    },
    "3676": {
      "op": "MSTORE"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3681": {
      "op": "DUP3"
    },
    "3682": {
      "op": "ADD"
    },
    "3683": {
      "op": "MSTORE"
    },
    "3684": {
      "op": "PUSH21",
      "value": "0x536C697070616765206E6F7420696E2072616E6765"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "3708": {
      "op": "SHL"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3711": {
      "op": "DUP3"
    },
    "3712": {
      "op": "ADD"
    },
    "3713": {
      "op": "MSTORE"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3716": {
      "op": "ADD"
    },
    "3717": {
      "fn": "MainStaking.withdraw",
      "offset": [10128, 10178],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "3720": {
      "op": "JUMP"
    },
    "3721": {
      "fn": "MainStaking.withdraw",
      "offset": [10128, 10178],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3728": {
      "op": "SHL"
    },
    "3729": {
      "op": "SUB"
    },
    "3730": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "DUP5",
      "path": "12"
    },
    "3731": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "DUP2",
      "path": "12"
    },
    "3732": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "AND",
      "path": "12"
    },
    "3733": {
      "fn": "MainStaking.withdraw",
      "offset": [10188, 10209],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3735": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "SWAP1",
      "path": "12"
    },
    "3736": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "DUP2",
      "path": "12"
    },
    "3737": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "MSTORE",
      "path": "12"
    },
    "3738": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10217],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "3740": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3742": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "MSTORE",
      "path": "12"
    },
    "3743": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3745": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "SWAP1",
      "path": "12"
    },
    "3746": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "KECCAK256",
      "path": "12"
    },
    "3747": {
      "fn": "MainStaking.withdraw",
      "offset": [10256, 10271],
      "op": "PUSH1",
      "path": "12",
      "statement": 37,
      "value": "0x7"
    },
    "3749": {
      "fn": "MainStaking.withdraw",
      "offset": [10256, 10271],
      "op": "DUP2",
      "path": "12"
    },
    "3750": {
      "fn": "MainStaking.withdraw",
      "offset": [10256, 10271],
      "op": "ADD",
      "path": "12"
    },
    "3751": {
      "fn": "MainStaking.withdraw",
      "offset": [10256, 10271],
      "op": "SLOAD",
      "path": "12"
    },
    "3752": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "SWAP1",
      "path": "12"
    },
    "3753": {
      "fn": "MainStaking.withdraw",
      "offset": [10212, 10224],
      "op": "SWAP2",
      "path": "12"
    },
    "3754": {
      "fn": "MainStaking.withdraw",
      "offset": [10256, 10271],
      "op": "AND",
      "path": "12"
    },
    "3755": {
      "fn": "MainStaking.withdraw",
      "offset": [10242, 10252],
      "op": "CALLER",
      "path": "12"
    },
    "3756": {
      "branch": 128,
      "fn": "MainStaking.withdraw",
      "offset": [10242, 10271],
      "op": "EQ",
      "path": "12"
    },
    "3757": {
      "fn": "MainStaking.withdraw",
      "offset": [10234, 10300],
      "op": "PUSH2",
      "path": "12",
      "value": "0xEF8"
    },
    "3760": {
      "branch": 128,
      "fn": "MainStaking.withdraw",
      "offset": [10234, 10300],
      "op": "JUMPI",
      "path": "12"
    },
    "3761": {
      "fn": "MainStaking.withdraw",
      "offset": [10234, 10300],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3763": {
      "fn": "MainStaking.withdraw",
      "offset": [10234, 10300],
      "op": "MLOAD",
      "path": "12"
    },
    "3764": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3770": {
      "op": "SHL"
    },
    "3771": {
      "fn": "MainStaking.withdraw",
      "offset": [10234, 10300],
      "op": "DUP2",
      "path": "12"
    },
    "3772": {
      "fn": "MainStaking.withdraw",
      "offset": [10234, 10300],
      "op": "MSTORE",
      "path": "12"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3775": {
      "fn": "MainStaking.withdraw",
      "offset": [10234, 10300],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3777": {
      "fn": "MainStaking.withdraw",
      "offset": [10234, 10300],
      "op": "DUP3",
      "path": "12"
    },
    "3778": {
      "fn": "MainStaking.withdraw",
      "offset": [10234, 10300],
      "op": "ADD",
      "path": "12"
    },
    "3779": {
      "op": "MSTORE"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3784": {
      "op": "DUP3"
    },
    "3785": {
      "op": "ADD"
    },
    "3786": {
      "op": "MSTORE"
    },
    "3787": {
      "op": "PUSH32",
      "value": "0x4F6E6C792068656C7065722063616E2077697468647261770000000000000000"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3822": {
      "op": "DUP3"
    },
    "3823": {
      "op": "ADD"
    },
    "3824": {
      "op": "MSTORE"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3827": {
      "op": "ADD"
    },
    "3828": {
      "fn": "MainStaking.withdraw",
      "offset": [10234, 10300],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "3831": {
      "op": "JUMP"
    },
    "3832": {
      "fn": "MainStaking.withdraw",
      "offset": [10234, 10300],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3833": {
      "fn": "MainStaking.withdraw",
      "offset": [10310, 10330],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3835": {
      "fn": "MainStaking.withdraw",
      "offset": [10333, 10374],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF04"
    },
    "3838": {
      "fn": "MainStaking.withdraw",
      "offset": [10359, 10366],
      "op": "DUP6",
      "path": "12"
    },
    "3839": {
      "fn": "MainStaking.withdraw",
      "offset": [10368, 10373],
      "op": "DUP8",
      "path": "12"
    },
    "3840": {
      "fn": "MainStaking.withdraw",
      "offset": [10333, 10358],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22F0"
    },
    "3843": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [10333, 10374],
      "op": "JUMP",
      "path": "12"
    },
    "3844": {
      "fn": "MainStaking.withdraw",
      "offset": [10333, 10374],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3845": {
      "fn": "MainStaking.withdraw",
      "offset": [10310, 10374],
      "op": "SWAP1",
      "path": "12"
    },
    "3846": {
      "fn": "MainStaking.withdraw",
      "offset": [10310, 10374],
      "op": "POP",
      "path": "12"
    },
    "3847": {
      "fn": "MainStaking.withdraw",
      "offset": [10384, 10400],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3849": {
      "fn": "MainStaking.withdraw",
      "offset": [10403, 10444],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF12"
    },
    "3852": {
      "fn": "MainStaking.withdraw",
      "offset": [10424, 10436],
      "op": "DUP3",
      "path": "12"
    },
    "3853": {
      "fn": "MainStaking.withdraw",
      "offset": [10438, 10443],
      "op": "DUP9",
      "path": "12"
    },
    "3854": {
      "fn": "MainStaking.withdraw",
      "offset": [10403, 10423],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1311"
    },
    "3857": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [10403, 10444],
      "op": "JUMP",
      "path": "12"
    },
    "3858": {
      "fn": "MainStaking.withdraw",
      "offset": [10403, 10444],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3859": {
      "fn": "MainStaking.withdraw",
      "offset": [10461, 10482],
      "op": "PUSH1",
      "path": "12",
      "statement": 38,
      "value": "0x5"
    },
    "3861": {
      "fn": "MainStaking.withdraw",
      "offset": [10461, 10482],
      "op": "DUP5",
      "path": "12"
    },
    "3862": {
      "fn": "MainStaking.withdraw",
      "offset": [10461, 10482],
      "op": "ADD",
      "path": "12"
    },
    "3863": {
      "fn": "MainStaking.withdraw",
      "offset": [10461, 10482],
      "op": "SLOAD",
      "path": "12"
    },
    "3864": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3866": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "MLOAD",
      "path": "12"
    },
    "3867": {
      "op": "PUSH4",
      "value": "0x2770A7EB"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3874": {
      "op": "SHL"
    },
    "3875": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "DUP2",
      "path": "12"
    },
    "3876": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "MSTORE",
      "path": "12"
    },
    "3877": {
      "fn": "MainStaking.withdraw",
      "offset": [10384, 10444],
      "op": "SWAP2",
      "path": "12"
    },
    "3878": {
      "fn": "MainStaking.withdraw",
      "offset": [10384, 10444],
      "op": "SWAP3",
      "path": "12"
    },
    "3879": {
      "op": "POP"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3886": {
      "op": "SHL"
    },
    "3887": {
      "op": "SUB"
    },
    "3888": {
      "fn": "MainStaking.withdraw",
      "offset": [10461, 10482],
      "op": "AND",
      "path": "12"
    },
    "3889": {
      "fn": "MainStaking.withdraw",
      "offset": [10461, 10482],
      "op": "SWAP1",
      "path": "12"
    },
    "3890": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10488],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9DC29FAC"
    },
    "3895": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10488],
      "op": "SWAP1",
      "path": "12"
    },
    "3896": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF47"
    },
    "3899": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "SWAP1",
      "path": "12"
    },
    "3900": {
      "fn": "MainStaking.withdraw",
      "offset": [10489, 10499],
      "op": "CALLER",
      "path": "12"
    },
    "3901": {
      "fn": "MainStaking.withdraw",
      "offset": [10489, 10499],
      "op": "SWAP1",
      "path": "12"
    },
    "3902": {
      "fn": "MainStaking.withdraw",
      "offset": [10501, 10513],
      "op": "DUP7",
      "path": "12"
    },
    "3903": {
      "fn": "MainStaking.withdraw",
      "offset": [10501, 10513],
      "op": "SWAP1",
      "path": "12"
    },
    "3904": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3906": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "ADD",
      "path": "12"
    },
    "3907": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "3910": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [10454, 10514],
      "op": "JUMP",
      "path": "12"
    },
    "3911": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3912": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3914": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3916": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "MLOAD",
      "path": "12"
    },
    "3917": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "DUP1",
      "path": "12"
    },
    "3918": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "DUP4",
      "path": "12"
    },
    "3919": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "SUB",
      "path": "12"
    },
    "3920": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "DUP2",
      "path": "12"
    },
    "3921": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3923": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "DUP8",
      "path": "12"
    },
    "3924": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "DUP1",
      "path": "12"
    },
    "3925": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3926": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "ISZERO",
      "path": "12"
    },
    "3927": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "DUP1",
      "path": "12"
    },
    "3928": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "ISZERO",
      "path": "12"
    },
    "3929": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF61"
    },
    "3932": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "JUMPI",
      "path": "12"
    },
    "3933": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3935": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "DUP1",
      "path": "12"
    },
    "3936": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "REVERT",
      "path": "12"
    },
    "3937": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3938": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "POP",
      "path": "12"
    },
    "3939": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "GAS",
      "path": "12"
    },
    "3940": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "CALL",
      "path": "12"
    },
    "3941": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "ISZERO",
      "path": "12"
    },
    "3942": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "DUP1",
      "path": "12"
    },
    "3943": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "ISZERO",
      "path": "12"
    },
    "3944": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF75"
    },
    "3947": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "JUMPI",
      "path": "12"
    },
    "3948": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3949": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3951": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "DUP1",
      "path": "12"
    },
    "3952": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "3953": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3954": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3956": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "REVERT",
      "path": "12"
    },
    "3957": {
      "fn": "MainStaking.withdraw",
      "offset": [10454, 10514],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3958": {
      "op": "POP"
    },
    "3959": {
      "op": "POP"
    },
    "3960": {
      "op": "POP"
    },
    "3961": {
      "fn": "MainStaking.withdraw",
      "offset": [10531, 10549],
      "op": "PUSH1",
      "path": "12",
      "statement": 39,
      "value": "0x2"
    },
    "3963": {
      "fn": "MainStaking.withdraw",
      "offset": [10531, 10549],
      "op": "DUP5",
      "path": "12"
    },
    "3964": {
      "fn": "MainStaking.withdraw",
      "offset": [10531, 10549],
      "op": "ADD",
      "path": "12"
    },
    "3965": {
      "fn": "MainStaking.withdraw",
      "offset": [10531, 10549],
      "op": "SLOAD",
      "path": "12"
    },
    "3966": {
      "fn": "MainStaking.withdraw",
      "offset": [10559, 10572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x68"
    },
    "3968": {
      "fn": "MainStaking.withdraw",
      "offset": [10559, 10572],
      "op": "SLOAD",
      "path": "12"
    },
    "3969": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3971": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "MLOAD",
      "path": "12"
    },
    "3972": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3979": {
      "op": "SHL"
    },
    "3980": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP2",
      "path": "12"
    },
    "3981": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "MSTORE",
      "path": "12"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3988": {
      "op": "SHL"
    },
    "3989": {
      "op": "SUB"
    },
    "3990": {
      "fn": "MainStaking.withdraw",
      "offset": [10531, 10549],
      "op": "SWAP3",
      "path": "12"
    },
    "3991": {
      "fn": "MainStaking.withdraw",
      "offset": [10531, 10549],
      "op": "DUP4",
      "path": "12"
    },
    "3992": {
      "fn": "MainStaking.withdraw",
      "offset": [10531, 10549],
      "op": "AND",
      "path": "12"
    },
    "3993": {
      "fn": "MainStaking.withdraw",
      "offset": [10531, 10549],
      "op": "SWAP4",
      "path": "12"
    },
    "3994": {
      "op": "POP"
    },
    "3995": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10558],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95EA7B3"
    },
    "4000": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10558],
      "op": "SWAP3",
      "path": "12"
    },
    "4001": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFB0"
    },
    "4004": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "SWAP3",
      "path": "12"
    },
    "4005": {
      "fn": "MainStaking.withdraw",
      "offset": [10559, 10572],
      "op": "AND",
      "path": "12"
    },
    "4006": {
      "fn": "MainStaking.withdraw",
      "offset": [10559, 10572],
      "op": "SWAP1",
      "path": "12"
    },
    "4007": {
      "fn": "MainStaking.withdraw",
      "offset": [10574, 10582],
      "op": "DUP6",
      "path": "12"
    },
    "4008": {
      "fn": "MainStaking.withdraw",
      "offset": [10574, 10582],
      "op": "SWAP1",
      "path": "12"
    },
    "4009": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4011": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "ADD",
      "path": "12"
    },
    "4012": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "4015": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [10524, 10583],
      "op": "JUMP",
      "path": "12"
    },
    "4016": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4017": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4019": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4021": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "MLOAD",
      "path": "12"
    },
    "4022": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP1",
      "path": "12"
    },
    "4023": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP4",
      "path": "12"
    },
    "4024": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "SUB",
      "path": "12"
    },
    "4025": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP2",
      "path": "12"
    },
    "4026": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4028": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP8",
      "path": "12"
    },
    "4029": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP1",
      "path": "12"
    },
    "4030": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4031": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "ISZERO",
      "path": "12"
    },
    "4032": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP1",
      "path": "12"
    },
    "4033": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "ISZERO",
      "path": "12"
    },
    "4034": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFCA"
    },
    "4037": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "JUMPI",
      "path": "12"
    },
    "4038": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4040": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP1",
      "path": "12"
    },
    "4041": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "REVERT",
      "path": "12"
    },
    "4042": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4043": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "POP",
      "path": "12"
    },
    "4044": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "GAS",
      "path": "12"
    },
    "4045": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "CALL",
      "path": "12"
    },
    "4046": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "ISZERO",
      "path": "12"
    },
    "4047": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP1",
      "path": "12"
    },
    "4048": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "ISZERO",
      "path": "12"
    },
    "4049": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFDE"
    },
    "4052": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "JUMPI",
      "path": "12"
    },
    "4053": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4054": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4056": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP1",
      "path": "12"
    },
    "4057": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "4058": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4059": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4061": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "REVERT",
      "path": "12"
    },
    "4062": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4063": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "POP",
      "path": "12"
    },
    "4064": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "POP",
      "path": "12"
    },
    "4065": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "POP",
      "path": "12"
    },
    "4066": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "POP",
      "path": "12"
    },
    "4067": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4069": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "MLOAD",
      "path": "12"
    },
    "4070": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4071": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "4073": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "NOT",
      "path": "12"
    },
    "4074": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "4076": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP3",
      "path": "12"
    },
    "4077": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "ADD",
      "path": "12"
    },
    "4078": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "AND",
      "path": "12"
    },
    "4079": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP3",
      "path": "12"
    },
    "4080": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "ADD",
      "path": "12"
    },
    "4081": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP1",
      "path": "12"
    },
    "4082": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4084": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "MSTORE",
      "path": "12"
    },
    "4085": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "POP",
      "path": "12"
    },
    "4086": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "DUP2",
      "path": "12"
    },
    "4087": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "ADD",
      "path": "12"
    },
    "4088": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "SWAP1",
      "path": "12"
    },
    "4089": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1002"
    },
    "4092": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "SWAP2",
      "path": "12"
    },
    "4093": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "SWAP1",
      "path": "12"
    },
    "4094": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "4097": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [10524, 10583],
      "op": "JUMP",
      "path": "12"
    },
    "4098": {
      "fn": "MainStaking.withdraw",
      "offset": [10524, 10583],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4099": {
      "op": "POP"
    },
    "4100": {
      "fn": "MainStaking.withdraw",
      "offset": [10609, 10623],
      "op": "PUSH1",
      "path": "12",
      "statement": 40,
      "value": "0x69"
    },
    "4102": {
      "fn": "MainStaking.withdraw",
      "offset": [10609, 10623],
      "op": "SLOAD",
      "path": "12"
    },
    "4103": {
      "fn": "MainStaking.withdraw",
      "offset": [10634, 10646],
      "op": "DUP4",
      "path": "12"
    },
    "4104": {
      "fn": "MainStaking.withdraw",
      "offset": [10634, 10646],
      "op": "SLOAD",
      "path": "12"
    },
    "4105": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4107": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "MLOAD",
      "path": "12"
    },
    "4108": {
      "op": "PUSH4",
      "value": "0x441A3E7"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "4115": {
      "op": "SHL"
    },
    "4116": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "DUP2",
      "path": "12"
    },
    "4117": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "MSTORE",
      "path": "12"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4124": {
      "op": "SHL"
    },
    "4125": {
      "op": "SUB"
    },
    "4126": {
      "fn": "MainStaking.withdraw",
      "offset": [10609, 10623],
      "op": "SWAP1",
      "path": "12"
    },
    "4127": {
      "fn": "MainStaking.withdraw",
      "offset": [10609, 10623],
      "op": "SWAP3",
      "path": "12"
    },
    "4128": {
      "fn": "MainStaking.withdraw",
      "offset": [10609, 10623],
      "op": "AND",
      "path": "12"
    },
    "4129": {
      "fn": "MainStaking.withdraw",
      "offset": [10609, 10623],
      "op": "SWAP2",
      "path": "12"
    },
    "4130": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10633],
      "op": "PUSH4",
      "path": "12",
      "value": "0x441A3E70"
    },
    "4135": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10633],
      "op": "SWAP2",
      "path": "12"
    },
    "4136": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "PUSH2",
      "path": "12",
      "value": "0x103E"
    },
    "4139": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "SWAP2",
      "path": "12"
    },
    "4140": {
      "fn": "MainStaking.withdraw",
      "offset": [10648, 10656],
      "op": "DUP6",
      "path": "12"
    },
    "4141": {
      "fn": "MainStaking.withdraw",
      "offset": [10648, 10656],
      "op": "SWAP1",
      "path": "12"
    },
    "4142": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4144": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "ADD",
      "path": "12"
    },
    "4145": {
      "op": "SWAP2"
    },
    "4146": {
      "op": "DUP3"
    },
    "4147": {
      "op": "MSTORE"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4150": {
      "op": "DUP3"
    },
    "4151": {
      "op": "ADD"
    },
    "4152": {
      "op": "MSTORE"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4155": {
      "op": "ADD"
    },
    "4156": {
      "op": "SWAP1"
    },
    "4157": {
      "op": "JUMP"
    },
    "4158": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4159": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4161": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4163": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "MLOAD",
      "path": "12"
    },
    "4164": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "DUP1",
      "path": "12"
    },
    "4165": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "DUP4",
      "path": "12"
    },
    "4166": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "SUB",
      "path": "12"
    },
    "4167": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "DUP2",
      "path": "12"
    },
    "4168": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4170": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "DUP8",
      "path": "12"
    },
    "4171": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "DUP1",
      "path": "12"
    },
    "4172": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4173": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "ISZERO",
      "path": "12"
    },
    "4174": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "DUP1",
      "path": "12"
    },
    "4175": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "ISZERO",
      "path": "12"
    },
    "4176": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1058"
    },
    "4179": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "JUMPI",
      "path": "12"
    },
    "4180": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4182": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "DUP1",
      "path": "12"
    },
    "4183": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "REVERT",
      "path": "12"
    },
    "4184": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4185": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "POP",
      "path": "12"
    },
    "4186": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "GAS",
      "path": "12"
    },
    "4187": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "CALL",
      "path": "12"
    },
    "4188": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "ISZERO",
      "path": "12"
    },
    "4189": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "DUP1",
      "path": "12"
    },
    "4190": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "ISZERO",
      "path": "12"
    },
    "4191": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "PUSH2",
      "path": "12",
      "value": "0x106C"
    },
    "4194": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "JUMPI",
      "path": "12"
    },
    "4195": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4196": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4198": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "DUP1",
      "path": "12"
    },
    "4199": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "4200": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4201": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4203": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "REVERT",
      "path": "12"
    },
    "4204": {
      "fn": "MainStaking.withdraw",
      "offset": [10593, 10657],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4205": {
      "op": "POP"
    },
    "4206": {
      "op": "POP"
    },
    "4207": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4209": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "MLOAD",
      "path": "12"
    },
    "4210": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4217": {
      "op": "SHL"
    },
    "4218": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP2",
      "path": "12"
    },
    "4219": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "MSTORE",
      "path": "12"
    },
    "4220": {
      "fn": "MainStaking.withdraw",
      "offset": [10724, 10728],
      "op": "ADDRESS",
      "path": "12"
    },
    "4221": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4223": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP3",
      "path": "12"
    },
    "4224": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "ADD",
      "path": "12"
    },
    "4225": {
      "op": "MSTORE"
    },
    "4226": {
      "fn": "MainStaking.withdraw",
      "offset": [10667, 10689],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4228": {
      "fn": "MainStaking.withdraw",
      "offset": [10667, 10689],
      "op": "SWAP3",
      "path": "12"
    },
    "4229": {
      "op": "POP"
    },
    "4230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4236": {
      "op": "SHL"
    },
    "4237": {
      "op": "SUB"
    },
    "4238": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10715],
      "op": "DUP11",
      "path": "12"
    },
    "4239": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10715],
      "op": "AND",
      "path": "12"
    },
    "4240": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10715],
      "op": "SWAP2",
      "path": "12"
    },
    "4241": {
      "op": "POP"
    },
    "4242": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10715],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "4247": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10715],
      "op": "SWAP1",
      "path": "12"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4250": {
      "op": "ADD"
    },
    "4251": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4253": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4255": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "MLOAD",
      "path": "12"
    },
    "4256": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP1",
      "path": "12"
    },
    "4257": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP4",
      "path": "12"
    },
    "4258": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "SUB",
      "path": "12"
    },
    "4259": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP2",
      "path": "12"
    },
    "4260": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP7",
      "path": "12"
    },
    "4261": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP1",
      "path": "12"
    },
    "4262": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4263": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "ISZERO",
      "path": "12"
    },
    "4264": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP1",
      "path": "12"
    },
    "4265": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "ISZERO",
      "path": "12"
    },
    "4266": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10B2"
    },
    "4269": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "JUMPI",
      "path": "12"
    },
    "4270": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4272": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP1",
      "path": "12"
    },
    "4273": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "REVERT",
      "path": "12"
    },
    "4274": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4275": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "POP",
      "path": "12"
    },
    "4276": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "GAS",
      "path": "12"
    },
    "4277": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "STATICCALL",
      "path": "12"
    },
    "4278": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "ISZERO",
      "path": "12"
    },
    "4279": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP1",
      "path": "12"
    },
    "4280": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "ISZERO",
      "path": "12"
    },
    "4281": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10C6"
    },
    "4284": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "JUMPI",
      "path": "12"
    },
    "4285": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4286": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4288": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP1",
      "path": "12"
    },
    "4289": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "4290": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4291": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4293": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "REVERT",
      "path": "12"
    },
    "4294": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4295": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "POP",
      "path": "12"
    },
    "4296": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "POP",
      "path": "12"
    },
    "4297": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "POP",
      "path": "12"
    },
    "4298": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "POP",
      "path": "12"
    },
    "4299": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4301": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "MLOAD",
      "path": "12"
    },
    "4302": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4303": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "4305": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "NOT",
      "path": "12"
    },
    "4306": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "4308": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP3",
      "path": "12"
    },
    "4309": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "ADD",
      "path": "12"
    },
    "4310": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "AND",
      "path": "12"
    },
    "4311": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP3",
      "path": "12"
    },
    "4312": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "ADD",
      "path": "12"
    },
    "4313": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP1",
      "path": "12"
    },
    "4314": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4316": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "MSTORE",
      "path": "12"
    },
    "4317": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "POP",
      "path": "12"
    },
    "4318": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "DUP2",
      "path": "12"
    },
    "4319": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "ADD",
      "path": "12"
    },
    "4320": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "SWAP1",
      "path": "12"
    },
    "4321": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10EA"
    },
    "4324": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "SWAP2",
      "path": "12"
    },
    "4325": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "SWAP1",
      "path": "12"
    },
    "4326": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3688"
    },
    "4329": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [10692, 10730],
      "op": "JUMP",
      "path": "12"
    },
    "4330": {
      "fn": "MainStaking.withdraw",
      "offset": [10692, 10730],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4331": {
      "fn": "MainStaking.withdraw",
      "offset": [10755, 10768],
      "op": "PUSH1",
      "path": "12",
      "statement": 41,
      "value": "0x68"
    },
    "4333": {
      "fn": "MainStaking.withdraw",
      "offset": [10755, 10768],
      "op": "SLOAD",
      "path": "12"
    },
    "4334": {
      "fn": "MainStaking.withdraw",
      "offset": [10667, 10730],
      "op": "SWAP1",
      "path": "12"
    },
    "4335": {
      "fn": "MainStaking.withdraw",
      "offset": [10667, 10730],
      "op": "SWAP2",
      "path": "12"
    },
    "4336": {
      "op": "POP"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4343": {
      "op": "SHL"
    },
    "4344": {
      "op": "SUB"
    },
    "4345": {
      "fn": "MainStaking.withdraw",
      "offset": [10755, 10768],
      "op": "AND",
      "path": "12"
    },
    "4346": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10778],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9A5FCA3"
    },
    "4351": {
      "fn": "MainStaking.withdraw",
      "offset": [10792, 10797],
      "op": "DUP10",
      "path": "12"
    },
    "4352": {
      "fn": "MainStaking.withdraw",
      "offset": [10811, 10819],
      "op": "DUP5",
      "path": "12"
    },
    "4353": {
      "fn": "MainStaking.withdraw",
      "offset": [10857, 10860],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "4355": {
      "fn": "MainStaking.withdraw",
      "offset": [10834, 10853],
      "op": "PUSH2",
      "path": "12",
      "value": "0x110C"
    },
    "4358": {
      "fn": "MainStaking.withdraw",
      "offset": [10844, 10853],
      "op": "DUP12",
      "path": "12"
    },
    "4359": {
      "fn": "MainStaking.withdraw",
      "offset": [10834, 10841],
      "op": "DUP14",
      "path": "12"
    },
    "4360": {
      "fn": "MainStaking.withdraw",
      "offset": [10834, 10853],
      "op": "PUSH2",
      "path": "12",
      "value": "0x396A"
    },
    "4363": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [10834, 10853],
      "op": "JUMP",
      "path": "12"
    },
    "4364": {
      "fn": "MainStaking.withdraw",
      "offset": [10834, 10853],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4365": {
      "fn": "MainStaking.withdraw",
      "offset": [10833, 10860],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1116"
    },
    "4368": {
      "fn": "MainStaking.withdraw",
      "offset": [10833, 10860],
      "op": "SWAP2",
      "path": "12"
    },
    "4369": {
      "fn": "MainStaking.withdraw",
      "offset": [10833, 10860],
      "op": "SWAP1",
      "path": "12"
    },
    "4370": {
      "fn": "MainStaking.withdraw",
      "offset": [10833, 10860],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3948"
    },
    "4373": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [10833, 10860],
      "op": "JUMP",
      "path": "12"
    },
    "4374": {
      "fn": "MainStaking.withdraw",
      "offset": [10833, 10860],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4375": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4377": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "MLOAD",
      "path": "12"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4384": {
      "op": "SHL"
    },
    "4385": {
      "op": "SUB"
    },
    "4386": {
      "op": "NOT"
    },
    "4387": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "4389": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "DUP7",
      "path": "12"
    },
    "4390": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "SWAP1",
      "path": "12"
    },
    "4391": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "SHL",
      "path": "12"
    },
    "4392": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "AND",
      "path": "12"
    },
    "4393": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "DUP2",
      "path": "12"
    },
    "4394": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "MSTORE",
      "path": "12"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4401": {
      "op": "SHL"
    },
    "4402": {
      "op": "SUB"
    },
    "4403": {
      "op": "SWAP1"
    },
    "4404": {
      "op": "SWAP4"
    },
    "4405": {
      "op": "AND"
    },
    "4406": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4408": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "DUP5",
      "path": "12"
    },
    "4409": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "ADD",
      "path": "12"
    },
    "4410": {
      "op": "MSTORE"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4413": {
      "op": "DUP4"
    },
    "4414": {
      "op": "ADD"
    },
    "4415": {
      "op": "SWAP2"
    },
    "4416": {
      "op": "SWAP1"
    },
    "4417": {
      "op": "SWAP2"
    },
    "4418": {
      "op": "MSTORE"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4421": {
      "op": "DUP3"
    },
    "4422": {
      "op": "ADD"
    },
    "4423": {
      "op": "MSTORE"
    },
    "4424": {
      "fn": "MainStaking.withdraw",
      "offset": [10894, 10898],
      "op": "ADDRESS",
      "path": "12"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4427": {
      "op": "DUP3"
    },
    "4428": {
      "op": "ADD"
    },
    "4429": {
      "op": "MSTORE"
    },
    "4430": {
      "fn": "MainStaking.withdraw",
      "offset": [10913, 10928],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4433": {
      "op": "DUP3"
    },
    "4434": {
      "op": "ADD"
    },
    "4435": {
      "op": "MSTORE"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4438": {
      "op": "ADD"
    },
    "4439": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4441": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4443": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "MLOAD",
      "path": "12"
    },
    "4444": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "DUP1",
      "path": "12"
    },
    "4445": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "DUP4",
      "path": "12"
    },
    "4446": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "SUB",
      "path": "12"
    },
    "4447": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "DUP2",
      "path": "12"
    },
    "4448": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4450": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "DUP8",
      "path": "12"
    },
    "4451": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "DUP1",
      "path": "12"
    },
    "4452": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4453": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "ISZERO",
      "path": "12"
    },
    "4454": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "DUP1",
      "path": "12"
    },
    "4455": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "ISZERO",
      "path": "12"
    },
    "4456": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1170"
    },
    "4459": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "JUMPI",
      "path": "12"
    },
    "4460": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4462": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "DUP1",
      "path": "12"
    },
    "4463": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "REVERT",
      "path": "12"
    },
    "4464": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4465": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "POP",
      "path": "12"
    },
    "4466": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "GAS",
      "path": "12"
    },
    "4467": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "CALL",
      "path": "12"
    },
    "4468": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "ISZERO",
      "path": "12"
    },
    "4469": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "DUP1",
      "path": "12"
    },
    "4470": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "ISZERO",
      "path": "12"
    },
    "4471": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1184"
    },
    "4474": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "JUMPI",
      "path": "12"
    },
    "4475": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4476": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4478": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "DUP1",
      "path": "12"
    },
    "4479": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "4480": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4481": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4483": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "REVERT",
      "path": "12"
    },
    "4484": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4485": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "POP",
      "path": "12"
    },
    "4486": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "POP",
      "path": "12"
    },
    "4487": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "POP",
      "path": "12"
    },
    "4488": {
      "fn": "MainStaking.withdraw",
      "offset": [10740, 10938],
      "op": "POP",
      "path": "12"
    },
    "4489": {
      "fn": "MainStaking.withdraw",
      "offset": [10966, 10973],
      "op": "DUP7",
      "path": "12",
      "statement": 42
    },
    "4490": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10957],
      "op": "DUP5",
      "path": "12"
    },
    "4491": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10962],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4493": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10962],
      "op": "ADD",
      "path": "12"
    },
    "4494": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10962],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4496": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "DUP3",
      "path": "12"
    },
    "4497": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "DUP3",
      "path": "12"
    },
    "4498": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "SLOAD",
      "path": "12"
    },
    "4499": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "PUSH2",
      "path": "12",
      "value": "0x119C"
    },
    "4502": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "SWAP2",
      "path": "12"
    },
    "4503": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "SWAP1",
      "path": "12"
    },
    "4504": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3989"
    },
    "4507": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [10949, 10973],
      "op": "JUMP",
      "path": "12"
    },
    "4508": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4509": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "SWAP3",
      "path": "12"
    },
    "4510": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "POP",
      "path": "12"
    },
    "4511": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "POP",
      "path": "12"
    },
    "4512": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "DUP2",
      "path": "12"
    },
    "4513": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "SWAP1",
      "path": "12"
    },
    "4514": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "SSTORE",
      "path": "12"
    },
    "4515": {
      "fn": "MainStaking.withdraw",
      "offset": [10949, 10973],
      "op": "POP",
      "path": "12"
    },
    "4516": {
      "fn": "MainStaking.withdraw",
      "offset": [11002, 11010],
      "op": "DUP2",
      "path": "12",
      "statement": 43
    },
    "4517": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 10991],
      "op": "DUP5",
      "path": "12"
    },
    "4518": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 10998],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "4520": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 10998],
      "op": "ADD",
      "path": "12"
    },
    "4521": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 10998],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4523": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 11010],
      "op": "DUP3",
      "path": "12"
    },
    "4524": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 11010],
      "op": "DUP3",
      "path": "12"
    },
    "4525": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 11010],
      "op": "SLOAD",
      "path": "12"
    },
    "4526": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 11010],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11B7"
    },
    "4529": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 11010],
      "op": "SWAP2",
      "path": "12"
    },
    "4530": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 11010],
      "op": "SWAP1",
      "path": "12"
    },
    "4531": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 11010],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3989"
    },
    "4534": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [10983, 11010],
      "op": "JUMP",
      "path": "12"
    },
    "4535": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 11010],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4536": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 11010],
      "op": "SWAP1",
      "path": "12"
    },
    "4537": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 11010],
      "op": "SWAP2",
      "path": "12"
    },
    "4538": {
      "fn": "MainStaking.withdraw",
      "offset": [10983, 11010],
      "op": "SSTORE",
      "path": "12"
    },
    "4539": {
      "op": "POP"
    },
    "4540": {
      "op": "POP"
    },
    "4541": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH1",
      "path": "12",
      "statement": 44,
      "value": "0x40"
    },
    "4543": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "MLOAD",
      "path": "12"
    },
    "4544": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4551": {
      "op": "SHL"
    },
    "4552": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP2",
      "path": "12"
    },
    "4553": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "MSTORE",
      "path": "12"
    },
    "4554": {
      "fn": "MainStaking.withdraw",
      "offset": [11113, 11117],
      "op": "ADDRESS",
      "path": "12"
    },
    "4555": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4557": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP3",
      "path": "12"
    },
    "4558": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "ADD",
      "path": "12"
    },
    "4559": {
      "op": "MSTORE"
    },
    "4560": {
      "fn": "MainStaking.withdraw",
      "offset": [11021, 11146],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1256"
    },
    "4563": {
      "fn": "MainStaking.withdraw",
      "offset": [11021, 11146],
      "op": "SWAP1",
      "path": "12"
    },
    "4564": {
      "fn": "MainStaking.withdraw",
      "offset": [11061, 11067],
      "op": "DUP7",
      "path": "12"
    },
    "4565": {
      "fn": "MainStaking.withdraw",
      "offset": [11061, 11067],
      "op": "SWAP1",
      "path": "12"
    },
    "4566": {
      "fn": "MainStaking.withdraw",
      "offset": [11122, 11136],
      "op": "DUP4",
      "path": "12"
    },
    "4567": {
      "fn": "MainStaking.withdraw",
      "offset": [11122, 11136],
      "op": "SWAP1",
      "path": "12"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4574": {
      "op": "SHL"
    },
    "4575": {
      "op": "SUB"
    },
    "4576": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11104],
      "op": "DUP13",
      "path": "12"
    },
    "4577": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11104],
      "op": "AND",
      "path": "12"
    },
    "4578": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11104],
      "op": "SWAP1",
      "path": "12"
    },
    "4579": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11104],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "4584": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11104],
      "op": "SWAP1",
      "path": "12"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4587": {
      "op": "ADD"
    },
    "4588": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4590": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4592": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "MLOAD",
      "path": "12"
    },
    "4593": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP1",
      "path": "12"
    },
    "4594": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP4",
      "path": "12"
    },
    "4595": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "SUB",
      "path": "12"
    },
    "4596": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP2",
      "path": "12"
    },
    "4597": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP7",
      "path": "12"
    },
    "4598": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP1",
      "path": "12"
    },
    "4599": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4600": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "ISZERO",
      "path": "12"
    },
    "4601": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP1",
      "path": "12"
    },
    "4602": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "ISZERO",
      "path": "12"
    },
    "4603": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1203"
    },
    "4606": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "JUMPI",
      "path": "12"
    },
    "4607": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4609": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP1",
      "path": "12"
    },
    "4610": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "REVERT",
      "path": "12"
    },
    "4611": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4612": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "POP",
      "path": "12"
    },
    "4613": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "GAS",
      "path": "12"
    },
    "4614": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "STATICCALL",
      "path": "12"
    },
    "4615": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "ISZERO",
      "path": "12"
    },
    "4616": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP1",
      "path": "12"
    },
    "4617": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "ISZERO",
      "path": "12"
    },
    "4618": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1217"
    },
    "4621": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "JUMPI",
      "path": "12"
    },
    "4622": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4623": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4625": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP1",
      "path": "12"
    },
    "4626": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "4627": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4628": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4630": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "REVERT",
      "path": "12"
    },
    "4631": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4632": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "POP",
      "path": "12"
    },
    "4633": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "POP",
      "path": "12"
    },
    "4634": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "POP",
      "path": "12"
    },
    "4635": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "POP",
      "path": "12"
    },
    "4636": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4638": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "MLOAD",
      "path": "12"
    },
    "4639": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4640": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "4642": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "NOT",
      "path": "12"
    },
    "4643": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "4645": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP3",
      "path": "12"
    },
    "4646": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "ADD",
      "path": "12"
    },
    "4647": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "AND",
      "path": "12"
    },
    "4648": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP3",
      "path": "12"
    },
    "4649": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "ADD",
      "path": "12"
    },
    "4650": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP1",
      "path": "12"
    },
    "4651": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4653": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "MSTORE",
      "path": "12"
    },
    "4654": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "POP",
      "path": "12"
    },
    "4655": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "DUP2",
      "path": "12"
    },
    "4656": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "ADD",
      "path": "12"
    },
    "4657": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "SWAP1",
      "path": "12"
    },
    "4658": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH2",
      "path": "12",
      "value": "0x123B"
    },
    "4661": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "SWAP2",
      "path": "12"
    },
    "4662": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "SWAP1",
      "path": "12"
    },
    "4663": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3688"
    },
    "4666": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [11081, 11119],
      "op": "JUMP",
      "path": "12"
    },
    "4667": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11119],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4668": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11136],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1245"
    },
    "4671": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11136],
      "op": "SWAP2",
      "path": "12"
    },
    "4672": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11136],
      "op": "SWAP1",
      "path": "12"
    },
    "4673": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11136],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3989"
    },
    "4676": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [11081, 11136],
      "op": "JUMP",
      "path": "12"
    },
    "4677": {
      "fn": "MainStaking.withdraw",
      "offset": [11081, 11136],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4684": {
      "op": "SHL"
    },
    "4685": {
      "op": "SUB"
    },
    "4686": {
      "fn": "MainStaking.withdraw",
      "offset": [11021, 11047],
      "op": "DUP12",
      "path": "12"
    },
    "4687": {
      "fn": "MainStaking.withdraw",
      "offset": [11021, 11047],
      "op": "AND",
      "path": "12"
    },
    "4688": {
      "fn": "MainStaking.withdraw",
      "offset": [11021, 11047],
      "op": "SWAP2",
      "path": "12"
    },
    "4689": {
      "fn": "MainStaking.withdraw",
      "offset": [11021, 11146],
      "op": "SWAP1",
      "path": "12"
    },
    "4690": {
      "fn": "MainStaking.withdraw",
      "offset": [11021, 11047],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28EB"
    },
    "4693": {
      "fn": "MainStaking.withdraw",
      "jump": "i",
      "offset": [11021, 11146],
      "op": "JUMP",
      "path": "12"
    },
    "4694": {
      "fn": "MainStaking.withdraw",
      "offset": [11021, 11146],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4695": {
      "fn": "MainStaking.withdraw",
      "offset": [11181, 11186],
      "op": "DUP8",
      "path": "12",
      "statement": 45
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4702": {
      "op": "SHL"
    },
    "4703": {
      "op": "SUB"
    },
    "4704": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "AND",
      "path": "12"
    },
    "4705": {
      "fn": "MainStaking.withdraw",
      "offset": [11173, 11179],
      "op": "DUP6",
      "path": "12"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4712": {
      "op": "SHL"
    },
    "4713": {
      "op": "SUB"
    },
    "4714": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "AND",
      "path": "12"
    },
    "4715": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "PUSH32",
      "path": "12",
      "value": "0x7715F7AEC5164B178862F96610F97644E00E0ABFCA2A6D3F425CC7D93284856F"
    },
    "4748": {
      "fn": "MainStaking.withdraw",
      "offset": [11188, 11195],
      "op": "DUP10",
      "path": "12"
    },
    "4749": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4751": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "MLOAD",
      "path": "12"
    },
    "4752": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "PUSH2",
      "path": "12",
      "value": "0x129B"
    },
    "4755": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "SWAP2",
      "path": "12"
    },
    "4756": {
      "op": "DUP2"
    },
    "4757": {
      "op": "MSTORE"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4760": {
      "op": "ADD"
    },
    "4761": {
      "op": "SWAP1"
    },
    "4762": {
      "op": "JUMP"
    },
    "4763": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4764": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4766": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "MLOAD",
      "path": "12"
    },
    "4767": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "DUP1",
      "path": "12"
    },
    "4768": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "SWAP2",
      "path": "12"
    },
    "4769": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "SUB",
      "path": "12"
    },
    "4770": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "SWAP1",
      "path": "12"
    },
    "4771": {
      "fn": "MainStaking.withdraw",
      "offset": [11161, 11196],
      "op": "LOG3",
      "path": "12"
    },
    "4772": {
      "fn": "MainStaking.withdraw",
      "offset": [10075, 11203],
      "op": "POP",
      "path": "12"
    },
    "4773": {
      "fn": "MainStaking.withdraw",
      "offset": [10075, 11203],
      "op": "POP",
      "path": "12"
    },
    "4774": {
      "fn": "MainStaking.withdraw",
      "offset": [10075, 11203],
      "op": "POP",
      "path": "12"
    },
    "4775": {
      "fn": "MainStaking.withdraw",
      "offset": [10075, 11203],
      "op": "POP",
      "path": "12"
    },
    "4776": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "POP",
      "path": "12"
    },
    "4777": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "POP",
      "path": "12"
    },
    "4778": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "POP",
      "path": "12"
    },
    "4779": {
      "fn": "MainStaking.withdraw",
      "offset": [9943, 11203],
      "op": "POP",
      "path": "12"
    },
    "4780": {
      "fn": "MainStaking.withdraw",
      "jump": "o",
      "offset": [9943, 11203],
      "op": "JUMP",
      "path": "12"
    },
    "4781": {
      "offset": [1447, 1469],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4782": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6E"
    },
    "4784": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DUP2",
      "path": "12"
    },
    "4785": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DUP2",
      "path": "12"
    },
    "4786": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SLOAD",
      "path": "12"
    },
    "4787": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DUP2",
      "path": "12"
    },
    "4788": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "LT",
      "path": "12"
    },
    "4789": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12BD"
    },
    "4792": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "JUMPI",
      "path": "12"
    },
    "4793": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4795": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DUP1",
      "path": "12"
    },
    "4796": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "REVERT",
      "path": "12"
    },
    "4797": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4798": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4800": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP2",
      "path": "12"
    },
    "4801": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DUP3",
      "path": "12"
    },
    "4802": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "MSTORE",
      "path": "12"
    },
    "4803": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4805": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP1",
      "path": "12"
    },
    "4806": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP2",
      "path": "12"
    },
    "4807": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "KECCAK256",
      "path": "12"
    },
    "4808": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4810": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP1",
      "path": "12"
    },
    "4811": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP2",
      "path": "12"
    },
    "4812": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "MUL",
      "path": "12"
    },
    "4813": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "ADD",
      "path": "12"
    },
    "4814": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DUP1",
      "path": "12"
    },
    "4815": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SLOAD",
      "path": "12"
    },
    "4816": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4818": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DUP3",
      "path": "12"
    },
    "4819": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "ADD",
      "path": "12"
    },
    "4820": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SLOAD",
      "path": "12"
    },
    "4821": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "4823": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DUP4",
      "path": "12"
    },
    "4824": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "ADD",
      "path": "12"
    },
    "4825": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SLOAD",
      "path": "12"
    },
    "4826": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "4828": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP1",
      "path": "12"
    },
    "4829": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP4",
      "path": "12"
    },
    "4830": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "ADD",
      "path": "12"
    },
    "4831": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SLOAD",
      "path": "12"
    },
    "4832": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP2",
      "path": "12"
    },
    "4833": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP4",
      "path": "12"
    },
    "4834": {
      "op": "POP"
    },
    "4835": {
      "offset": [1447, 1469],
      "op": "SWAP2",
      "path": "12"
    },
    "4836": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP1",
      "path": "12"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4843": {
      "op": "SHL"
    },
    "4844": {
      "op": "SUB"
    },
    "4845": {
      "offset": [1447, 1469],
      "op": "DUP2",
      "path": "12"
    },
    "4846": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "AND",
      "path": "12"
    },
    "4847": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP1",
      "path": "12"
    },
    "4848": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4854": {
      "op": "SHL"
    },
    "4855": {
      "offset": [1447, 1469],
      "op": "DUP3",
      "path": "12"
    },
    "4856": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DIV",
      "path": "12"
    },
    "4857": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DUP2",
      "path": "12"
    },
    "4858": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "AND",
      "path": "12"
    },
    "4859": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP2",
      "path": "12"
    },
    "4860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4864": {
      "op": "SHL"
    },
    "4865": {
      "offset": [1447, 1469],
      "op": "DUP2",
      "path": "12"
    },
    "4866": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DIV",
      "path": "12"
    },
    "4867": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DUP3",
      "path": "12"
    },
    "4868": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "AND",
      "path": "12"
    },
    "4869": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP2",
      "path": "12"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4874": {
      "op": "SHL"
    },
    "4875": {
      "offset": [1447, 1469],
      "op": "SWAP1",
      "path": "12"
    },
    "4876": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "SWAP2",
      "path": "12"
    },
    "4877": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DIV",
      "path": "12"
    },
    "4878": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "AND",
      "path": "12"
    },
    "4879": {
      "fn": "MainStaking.withdraw",
      "offset": [1447, 1469],
      "op": "DUP8",
      "path": "12"
    },
    "4880": {
      "fn": "MainStaking.withdraw",
      "jump": "o",
      "offset": [1447, 1469],
      "op": "JUMP",
      "path": "12"
    },
    "4881": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4888": {
      "op": "SHL"
    },
    "4889": {
      "op": "SUB"
    },
    "4890": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "DUP1",
      "path": "12"
    },
    "4891": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "DUP3",
      "path": "12"
    },
    "4892": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "AND",
      "path": "12"
    },
    "4893": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12418, 12425],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4895": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "SWAP1",
      "path": "12"
    },
    "4896": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "DUP2",
      "path": "12"
    },
    "4897": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "MSTORE",
      "path": "12"
    },
    "4898": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12470],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "4900": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4902": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "SWAP1",
      "path": "12"
    },
    "4903": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "DUP2",
      "path": "12"
    },
    "4904": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "MSTORE",
      "path": "12"
    },
    "4905": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4907": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "DUP1",
      "path": "12"
    },
    "4908": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "DUP4",
      "path": "12"
    },
    "4909": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "KECCAK256",
      "path": "12"
    },
    "4910": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12511, 12526],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "4912": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12511, 12526],
      "op": "DUP2",
      "path": "12"
    },
    "4913": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12511, 12526],
      "op": "ADD",
      "path": "12"
    },
    "4914": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12511, 12526],
      "op": "SLOAD",
      "path": "12"
    },
    "4915": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12565, 12586],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "4917": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12565, 12586],
      "op": "DUP3",
      "path": "12"
    },
    "4918": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12565, 12586],
      "op": "ADD",
      "path": "12"
    },
    "4919": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12565, 12586],
      "op": "SLOAD",
      "path": "12"
    },
    "4920": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP4",
      "path": "12"
    },
    "4921": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "MLOAD",
      "path": "12"
    },
    "4922": {
      "op": "PUSH4",
      "value": "0x18160DDD"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4929": {
      "op": "SHL"
    },
    "4930": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP2",
      "path": "12"
    },
    "4931": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "MSTORE",
      "path": "12"
    },
    "4932": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "SWAP4",
      "path": "12"
    },
    "4933": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "MLOAD",
      "path": "12"
    },
    "4934": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12418, 12425],
      "op": "SWAP6",
      "path": "12"
    },
    "4935": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12418, 12425],
      "op": "SWAP7",
      "path": "12"
    },
    "4936": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "SWAP3",
      "path": "12"
    },
    "4937": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12465, 12477],
      "op": "SWAP6",
      "path": "12"
    },
    "4938": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12511, 12526],
      "op": "SWAP2",
      "path": "12"
    },
    "4939": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12511, 12526],
      "op": "SWAP5",
      "path": "12"
    },
    "4940": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12418, 12425],
      "op": "DUP8",
      "path": "12"
    },
    "4941": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12418, 12425],
      "op": "SWAP5",
      "path": "12"
    },
    "4942": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12565, 12586],
      "op": "SWAP2",
      "path": "12"
    },
    "4943": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12565, 12586],
      "op": "SWAP1",
      "path": "12"
    },
    "4944": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12565, 12586],
      "op": "SWAP4",
      "path": "12"
    },
    "4945": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12565, 12586],
      "op": "AND",
      "path": "12"
    },
    "4946": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12565, 12586],
      "op": "SWAP3",
      "path": "12"
    },
    "4947": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12599],
      "op": "PUSH4",
      "path": "12",
      "value": "0x18160DDD"
    },
    "4952": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12599],
      "op": "SWAP3",
      "path": "12"
    },
    "4953": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4955": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP1",
      "path": "12"
    },
    "4956": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP5",
      "path": "12"
    },
    "4957": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "ADD",
      "path": "12"
    },
    "4958": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "SWAP4",
      "path": "12"
    },
    "4959": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP3",
      "path": "12"
    },
    "4960": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "SWAP1",
      "path": "12"
    },
    "4961": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "SUB",
      "path": "12"
    },
    "4962": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "ADD",
      "path": "12"
    },
    "4963": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP2",
      "path": "12"
    },
    "4964": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12565, 12586],
      "op": "DUP7",
      "path": "12"
    },
    "4965": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP1",
      "path": "12"
    },
    "4966": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4967": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "ISZERO",
      "path": "12"
    },
    "4968": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP1",
      "path": "12"
    },
    "4969": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "ISZERO",
      "path": "12"
    },
    "4970": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1372"
    },
    "4973": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "JUMPI",
      "path": "12"
    },
    "4974": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4976": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP1",
      "path": "12"
    },
    "4977": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "REVERT",
      "path": "12"
    },
    "4978": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4979": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "POP",
      "path": "12"
    },
    "4980": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "GAS",
      "path": "12"
    },
    "4981": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "STATICCALL",
      "path": "12"
    },
    "4982": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "ISZERO",
      "path": "12"
    },
    "4983": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP1",
      "path": "12"
    },
    "4984": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "ISZERO",
      "path": "12"
    },
    "4985": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1386"
    },
    "4988": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "JUMPI",
      "path": "12"
    },
    "4989": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4990": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4992": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP1",
      "path": "12"
    },
    "4993": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "4994": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4995": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4997": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "REVERT",
      "path": "12"
    },
    "4998": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4999": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "POP",
      "path": "12"
    },
    "5000": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "POP",
      "path": "12"
    },
    "5001": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "POP",
      "path": "12"
    },
    "5002": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "POP",
      "path": "12"
    },
    "5003": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5005": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "MLOAD",
      "path": "12"
    },
    "5006": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5007": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5009": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "NOT",
      "path": "12"
    },
    "5010": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5012": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP3",
      "path": "12"
    },
    "5013": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "ADD",
      "path": "12"
    },
    "5014": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "AND",
      "path": "12"
    },
    "5015": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP3",
      "path": "12"
    },
    "5016": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "ADD",
      "path": "12"
    },
    "5017": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP1",
      "path": "12"
    },
    "5018": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5020": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "MSTORE",
      "path": "12"
    },
    "5021": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "POP",
      "path": "12"
    },
    "5022": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "DUP2",
      "path": "12"
    },
    "5023": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "ADD",
      "path": "12"
    },
    "5024": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "SWAP1",
      "path": "12"
    },
    "5025": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13AA"
    },
    "5028": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "SWAP2",
      "path": "12"
    },
    "5029": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "SWAP1",
      "path": "12"
    },
    "5030": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3688"
    },
    "5033": {
      "fn": "MainStaking.getLPTokensForShares",
      "jump": "i",
      "offset": [12558, 12601],
      "op": "JUMP",
      "path": "12"
    },
    "5034": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12558, 12601],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5035": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12536, 12601],
      "op": "SWAP1",
      "path": "12"
    },
    "5036": {
      "op": "POP"
    },
    "5037": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12615, 12642],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13B6"
    },
    "5040": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12629, 12642],
      "op": "DUP3",
      "path": "12"
    },
    "5041": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12536, 12601],
      "op": "DUP3",
      "path": "12"
    },
    "5042": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12615, 12642],
      "op": "PUSH2",
      "path": "12",
      "value": "0x396A"
    },
    "5045": {
      "fn": "MainStaking.getLPTokensForShares",
      "jump": "i",
      "offset": [12615, 12642],
      "op": "JUMP",
      "path": "12"
    },
    "5046": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12615, 12642],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5047": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12611, 12682],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13C6"
    },
    "5050": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12611, 12682],
      "op": "JUMPI",
      "path": "12"
    },
    "5051": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12670, 12671],
      "op": "PUSH1",
      "path": "12",
      "statement": 46,
      "value": "0x0"
    },
    "5053": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12663, 12671],
      "op": "SWAP4",
      "path": "12"
    },
    "5054": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12663, 12671],
      "op": "POP",
      "path": "12"
    },
    "5055": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12663, 12671],
      "op": "POP",
      "path": "12"
    },
    "5056": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12663, 12671],
      "op": "POP",
      "path": "12"
    },
    "5057": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12663, 12671],
      "op": "POP",
      "path": "12"
    },
    "5058": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12663, 12671],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13E1"
    },
    "5061": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12663, 12671],
      "op": "JUMP",
      "path": "12"
    },
    "5062": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12611, 12682],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5063": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12725, 12736],
      "op": "DUP1",
      "path": "12",
      "statement": 47
    },
    "5064": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12699, 12721],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13D1"
    },
    "5067": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12708, 12721],
      "op": "DUP4",
      "path": "12"
    },
    "5068": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12699, 12705],
      "op": "DUP9",
      "path": "12"
    },
    "5069": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12699, 12721],
      "op": "PUSH2",
      "path": "12",
      "value": "0x396A"
    },
    "5072": {
      "fn": "MainStaking.getLPTokensForShares",
      "jump": "i",
      "offset": [12699, 12721],
      "op": "JUMP",
      "path": "12"
    },
    "5073": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12699, 12721],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5074": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12698, 12736],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13DB"
    },
    "5077": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12698, 12736],
      "op": "SWAP2",
      "path": "12"
    },
    "5078": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12698, 12736],
      "op": "SWAP1",
      "path": "12"
    },
    "5079": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12698, 12736],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3948"
    },
    "5082": {
      "fn": "MainStaking.getLPTokensForShares",
      "jump": "i",
      "offset": [12698, 12736],
      "op": "JUMP",
      "path": "12"
    },
    "5083": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12698, 12736],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5084": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12691, 12736],
      "op": "SWAP4",
      "path": "12"
    },
    "5085": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12691, 12736],
      "op": "POP",
      "path": "12"
    },
    "5086": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12691, 12736],
      "op": "POP",
      "path": "12"
    },
    "5087": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12691, 12736],
      "op": "POP",
      "path": "12"
    },
    "5088": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12691, 12736],
      "op": "POP",
      "path": "12"
    },
    "5089": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5090": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "SWAP3",
      "path": "12"
    },
    "5091": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "SWAP2",
      "path": "12"
    },
    "5092": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "POP",
      "path": "12"
    },
    "5093": {
      "fn": "MainStaking.getLPTokensForShares",
      "offset": [12312, 12743],
      "op": "POP",
      "path": "12"
    },
    "5094": {
      "fn": "MainStaking.getLPTokensForShares",
      "jump": "o",
      "offset": [12312, 12743],
      "op": "JUMP",
      "path": "12"
    },
    "5095": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5096": {
      "offset": [1490, 1496],
      "op": "PUSH1",
      "path": "20",
      "value": "0x33"
    },
    "5098": {
      "fn": "MainStaking.registerPool",
      "offset": [1490, 1496],
      "op": "SLOAD",
      "path": "20"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5105": {
      "op": "SHL"
    },
    "5106": {
      "op": "SUB"
    },
    "5107": {
      "offset": [1490, 1496],
      "op": "AND",
      "path": "20"
    },
    "5108": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [907, 917],
      "op": "CALLER",
      "path": "18",
      "statement": 48
    },
    "5109": {
      "offset": [1490, 1512],
      "op": "EQ",
      "path": "20"
    },
    "5110": {
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1411"
    },
    "5113": {
      "offset": [1482, 1549],
      "op": "JUMPI",
      "path": "20"
    },
    "5114": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5116": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MLOAD",
      "path": "20"
    },
    "5117": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5123": {
      "op": "SHL"
    },
    "5124": {
      "offset": [1482, 1549],
      "op": "DUP2",
      "path": "20"
    },
    "5125": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MSTORE",
      "path": "20"
    },
    "5126": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5128": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "ADD",
      "path": "20"
    },
    "5129": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "5132": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "SWAP1",
      "path": "20"
    },
    "5133": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38B0"
    },
    "5136": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [1482, 1549],
      "op": "JUMP",
      "path": "20"
    },
    "5137": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5144": {
      "op": "SHL"
    },
    "5145": {
      "op": "SUB"
    },
    "5146": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14060],
      "op": "DUP6",
      "path": "12",
      "statement": 49
    },
    "5147": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14060],
      "op": "AND",
      "path": "12"
    },
    "5148": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14060],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5150": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14060],
      "op": "SWAP1",
      "path": "12"
    },
    "5151": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14060],
      "op": "DUP2",
      "path": "12"
    },
    "5152": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14060],
      "op": "MSTORE",
      "path": "12"
    },
    "5153": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14052],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "5155": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14060],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5157": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14060],
      "op": "MSTORE",
      "path": "12"
    },
    "5158": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14060],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5160": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14060],
      "op": "SWAP1",
      "path": "12"
    },
    "5161": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14060],
      "op": "KECCAK256",
      "path": "12"
    },
    "5162": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14069],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5164": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14069],
      "op": "ADD",
      "path": "12"
    },
    "5165": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14069],
      "op": "SLOAD",
      "path": "12"
    },
    "5166": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14069],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "5168": {
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14069],
      "op": "AND",
      "path": "12"
    },
    "5169": {
      "branch": 129,
      "fn": "MainStaking.registerPool",
      "offset": [14047, 14078],
      "op": "ISZERO",
      "path": "12"
    },
    "5170": {
      "fn": "MainStaking.registerPool",
      "offset": [14026, 14140],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1489"
    },
    "5173": {
      "branch": 129,
      "fn": "MainStaking.registerPool",
      "offset": [14026, 14140],
      "op": "JUMPI",
      "path": "12"
    },
    "5174": {
      "fn": "MainStaking.registerPool",
      "offset": [14026, 14140],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5176": {
      "fn": "MainStaking.registerPool",
      "offset": [14026, 14140],
      "op": "MLOAD",
      "path": "12"
    },
    "5177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5183": {
      "op": "SHL"
    },
    "5184": {
      "fn": "MainStaking.registerPool",
      "offset": [14026, 14140],
      "op": "DUP2",
      "path": "12"
    },
    "5185": {
      "fn": "MainStaking.registerPool",
      "offset": [14026, 14140],
      "op": "MSTORE",
      "path": "12"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5188": {
      "fn": "MainStaking.registerPool",
      "offset": [14026, 14140],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5190": {
      "fn": "MainStaking.registerPool",
      "offset": [14026, 14140],
      "op": "DUP3",
      "path": "12"
    },
    "5191": {
      "fn": "MainStaking.registerPool",
      "offset": [14026, 14140],
      "op": "ADD",
      "path": "12"
    },
    "5192": {
      "op": "MSTORE"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5195": {
      "op": "DUP1"
    },
    "5196": {
      "op": "DUP3"
    },
    "5197": {
      "op": "ADD"
    },
    "5198": {
      "op": "MSTORE"
    },
    "5199": {
      "op": "PUSH32",
      "value": "0x506F6F6C20697320616C72656164792072656769737465726564206F72206163"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5234": {
      "op": "DUP3"
    },
    "5235": {
      "op": "ADD"
    },
    "5236": {
      "op": "MSTORE"
    },
    "5237": {
      "op": "PUSH4",
      "value": "0x74697665"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5244": {
      "op": "SHL"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5247": {
      "op": "DUP3"
    },
    "5248": {
      "op": "ADD"
    },
    "5249": {
      "op": "MSTORE"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5252": {
      "op": "ADD"
    },
    "5253": {
      "fn": "MainStaking.registerPool",
      "offset": [14026, 14140],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "5256": {
      "op": "JUMP"
    },
    "5257": {
      "fn": "MainStaking.registerPool",
      "offset": [14026, 14140],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5258": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5260": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "MLOAD",
      "path": "12"
    },
    "5261": {
      "op": "PUSH4",
      "value": "0x478064B1"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5268": {
      "op": "SHL"
    },
    "5269": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP2",
      "path": "12"
    },
    "5270": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "MSTORE",
      "path": "12"
    },
    "5271": {
      "fn": "MainStaking.registerPool",
      "offset": [14150, 14165],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5273": {
      "fn": "MainStaking.registerPool",
      "offset": [14150, 14165],
      "op": "SWAP1",
      "path": "12"
    },
    "5274": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14203],
      "op": "PUSH20",
      "path": "12",
      "value": "0x0"
    },
    "5295": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14203],
      "op": "SWAP1",
      "path": "12"
    },
    "5296": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14215],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8F00C962"
    },
    "5301": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14215],
      "op": "SWAP1",
      "path": "12"
    },
    "5302": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14C5"
    },
    "5305": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "SWAP1",
      "path": "12"
    },
    "5306": {
      "fn": "MainStaking.registerPool",
      "offset": [14216, 14227],
      "op": "DUP8",
      "path": "12"
    },
    "5307": {
      "fn": "MainStaking.registerPool",
      "offset": [14216, 14227],
      "op": "SWAP1",
      "path": "12"
    },
    "5308": {
      "fn": "MainStaking.registerPool",
      "offset": [14229, 14242],
      "op": "DUP8",
      "path": "12"
    },
    "5309": {
      "fn": "MainStaking.registerPool",
      "offset": [14229, 14242],
      "op": "SWAP1",
      "path": "12"
    },
    "5310": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5312": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "ADD",
      "path": "12"
    },
    "5313": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3882"
    },
    "5316": {
      "fn": "MainStaking.registerPool",
      "jump": "i",
      "offset": [14188, 14243],
      "op": "JUMP",
      "path": "12"
    },
    "5317": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5318": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5320": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5322": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "MLOAD",
      "path": "12"
    },
    "5323": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP1",
      "path": "12"
    },
    "5324": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP4",
      "path": "12"
    },
    "5325": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "SUB",
      "path": "12"
    },
    "5326": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP2",
      "path": "12"
    },
    "5327": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP7",
      "path": "12"
    },
    "5328": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP1",
      "path": "12"
    },
    "5329": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "5330": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "ISZERO",
      "path": "12"
    },
    "5331": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP1",
      "path": "12"
    },
    "5332": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "ISZERO",
      "path": "12"
    },
    "5333": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14DD"
    },
    "5336": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "JUMPI",
      "path": "12"
    },
    "5337": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5339": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP1",
      "path": "12"
    },
    "5340": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "REVERT",
      "path": "12"
    },
    "5341": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5342": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "POP",
      "path": "12"
    },
    "5343": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "GAS",
      "path": "12"
    },
    "5344": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DELEGATECALL",
      "path": "12"
    },
    "5345": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "ISZERO",
      "path": "12"
    },
    "5346": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP1",
      "path": "12"
    },
    "5347": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "ISZERO",
      "path": "12"
    },
    "5348": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14F1"
    },
    "5351": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "JUMPI",
      "path": "12"
    },
    "5352": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5353": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5355": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP1",
      "path": "12"
    },
    "5356": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "5357": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5358": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5360": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "REVERT",
      "path": "12"
    },
    "5361": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5362": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "POP",
      "path": "12"
    },
    "5363": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "POP",
      "path": "12"
    },
    "5364": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "POP",
      "path": "12"
    },
    "5365": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "POP",
      "path": "12"
    },
    "5366": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5368": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "MLOAD",
      "path": "12"
    },
    "5369": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5370": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5372": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "NOT",
      "path": "12"
    },
    "5373": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5375": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP3",
      "path": "12"
    },
    "5376": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "ADD",
      "path": "12"
    },
    "5377": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "AND",
      "path": "12"
    },
    "5378": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP3",
      "path": "12"
    },
    "5379": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "ADD",
      "path": "12"
    },
    "5380": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP1",
      "path": "12"
    },
    "5381": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5383": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "MSTORE",
      "path": "12"
    },
    "5384": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "POP",
      "path": "12"
    },
    "5385": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "DUP2",
      "path": "12"
    },
    "5386": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "ADD",
      "path": "12"
    },
    "5387": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "SWAP1",
      "path": "12"
    },
    "5388": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1515"
    },
    "5391": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "SWAP2",
      "path": "12"
    },
    "5392": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "SWAP1",
      "path": "12"
    },
    "5393": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34B7"
    },
    "5396": {
      "fn": "MainStaking.registerPool",
      "jump": "i",
      "offset": [14188, 14243],
      "op": "JUMP",
      "path": "12"
    },
    "5397": {
      "fn": "MainStaking.registerPool",
      "offset": [14188, 14243],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5398": {
      "fn": "MainStaking.registerPool",
      "offset": [14297, 14306],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6A"
    },
    "5400": {
      "fn": "MainStaking.registerPool",
      "offset": [14297, 14306],
      "op": "SLOAD",
      "path": "12"
    },
    "5401": {
      "fn": "MainStaking.registerPool",
      "offset": [14375, 14378],
      "op": "PUSH1",
      "path": "12",
      "value": "0x66"
    },
    "5403": {
      "fn": "MainStaking.registerPool",
      "offset": [14375, 14378],
      "op": "SLOAD",
      "path": "12"
    },
    "5404": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5406": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "MLOAD",
      "path": "12"
    },
    "5407": {
      "op": "PUSH4",
      "value": "0x1D9F8773"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5414": {
      "op": "SHL"
    },
    "5415": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP2",
      "path": "12"
    },
    "5416": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "MSTORE",
      "path": "12"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5423": {
      "op": "SHL"
    },
    "5424": {
      "op": "SUB"
    },
    "5425": {
      "op": "DUP1"
    },
    "5426": {
      "op": "DUP6"
    },
    "5427": {
      "op": "AND"
    },
    "5428": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5430": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP4",
      "path": "12"
    },
    "5431": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "ADD",
      "path": "12"
    },
    "5432": {
      "op": "MSTORE"
    },
    "5433": {
      "fn": "MainStaking.registerPool",
      "offset": [14375, 14378],
      "op": "SWAP2",
      "path": "12"
    },
    "5434": {
      "fn": "MainStaking.registerPool",
      "offset": [14375, 14378],
      "op": "DUP3",
      "path": "12"
    },
    "5435": {
      "fn": "MainStaking.registerPool",
      "offset": [14375, 14378],
      "op": "AND",
      "path": "12"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5438": {
      "op": "DUP3"
    },
    "5439": {
      "op": "ADD"
    },
    "5440": {
      "op": "MSTORE"
    },
    "5441": {
      "fn": "MainStaking.registerPool",
      "offset": [14150, 14253],
      "op": "SWAP3",
      "path": "12"
    },
    "5442": {
      "fn": "MainStaking.registerPool",
      "offset": [14150, 14253],
      "op": "SWAP4",
      "path": "12"
    },
    "5443": {
      "op": "POP"
    },
    "5444": {
      "fn": "MainStaking.registerPool",
      "offset": [14263, 14279],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5446": {
      "fn": "MainStaking.registerPool",
      "offset": [14263, 14279],
      "op": "SWAP3",
      "path": "12"
    },
    "5447": {
      "fn": "MainStaking.registerPool",
      "offset": [14297, 14306],
      "op": "SWAP2",
      "path": "12"
    },
    "5448": {
      "fn": "MainStaking.registerPool",
      "offset": [14297, 14306],
      "op": "AND",
      "path": "12"
    },
    "5449": {
      "fn": "MainStaking.registerPool",
      "offset": [14297, 14306],
      "op": "SWAP1",
      "path": "12"
    },
    "5450": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14322],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3B3F0EE6"
    },
    "5455": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14322],
      "op": "SWAP1",
      "path": "12"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5458": {
      "op": "ADD"
    },
    "5459": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5461": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5463": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "MLOAD",
      "path": "12"
    },
    "5464": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP1",
      "path": "12"
    },
    "5465": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP4",
      "path": "12"
    },
    "5466": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "SUB",
      "path": "12"
    },
    "5467": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP2",
      "path": "12"
    },
    "5468": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5470": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP8",
      "path": "12"
    },
    "5471": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP1",
      "path": "12"
    },
    "5472": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "5473": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "ISZERO",
      "path": "12"
    },
    "5474": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP1",
      "path": "12"
    },
    "5475": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "ISZERO",
      "path": "12"
    },
    "5476": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH2",
      "path": "12",
      "value": "0x156C"
    },
    "5479": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "JUMPI",
      "path": "12"
    },
    "5480": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5482": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP1",
      "path": "12"
    },
    "5483": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "REVERT",
      "path": "12"
    },
    "5484": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5485": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "POP",
      "path": "12"
    },
    "5486": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "GAS",
      "path": "12"
    },
    "5487": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "CALL",
      "path": "12"
    },
    "5488": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "ISZERO",
      "path": "12"
    },
    "5489": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP1",
      "path": "12"
    },
    "5490": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "ISZERO",
      "path": "12"
    },
    "5491": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1580"
    },
    "5494": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "JUMPI",
      "path": "12"
    },
    "5495": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5496": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5498": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP1",
      "path": "12"
    },
    "5499": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "5500": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5501": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5503": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "REVERT",
      "path": "12"
    },
    "5504": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5505": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "POP",
      "path": "12"
    },
    "5506": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "POP",
      "path": "12"
    },
    "5507": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "POP",
      "path": "12"
    },
    "5508": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "POP",
      "path": "12"
    },
    "5509": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5511": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "MLOAD",
      "path": "12"
    },
    "5512": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5513": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5515": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "NOT",
      "path": "12"
    },
    "5516": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5518": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP3",
      "path": "12"
    },
    "5519": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "ADD",
      "path": "12"
    },
    "5520": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "AND",
      "path": "12"
    },
    "5521": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP3",
      "path": "12"
    },
    "5522": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "ADD",
      "path": "12"
    },
    "5523": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP1",
      "path": "12"
    },
    "5524": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5526": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "MSTORE",
      "path": "12"
    },
    "5527": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "POP",
      "path": "12"
    },
    "5528": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "DUP2",
      "path": "12"
    },
    "5529": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "ADD",
      "path": "12"
    },
    "5530": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "SWAP1",
      "path": "12"
    },
    "5531": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15A4"
    },
    "5534": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "SWAP2",
      "path": "12"
    },
    "5535": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "SWAP1",
      "path": "12"
    },
    "5536": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34B7"
    },
    "5539": {
      "fn": "MainStaking.registerPool",
      "jump": "i",
      "offset": [14282, 14389],
      "op": "JUMP",
      "path": "12"
    },
    "5540": {
      "fn": "MainStaking.registerPool",
      "offset": [14282, 14389],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5541": {
      "fn": "MainStaking.registerPool",
      "offset": [14629, 14638],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6A"
    },
    "5543": {
      "fn": "MainStaking.registerPool",
      "offset": [14629, 14638],
      "op": "SLOAD",
      "path": "12"
    },
    "5544": {
      "fn": "MainStaking.registerPool",
      "offset": [14700, 14704],
      "op": "PUSH1",
      "path": "12",
      "value": "0x67"
    },
    "5546": {
      "fn": "MainStaking.registerPool",
      "offset": [14700, 14704],
      "op": "SLOAD",
      "path": "12"
    },
    "5547": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5549": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "MLOAD",
      "path": "12"
    },
    "5550": {
      "op": "PUSH4",
      "value": "0x3A368CFB"
    },
    "5555": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5557": {
      "op": "SHL"
    },
    "5558": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP2",
      "path": "12"
    },
    "5559": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "MSTORE",
      "path": "12"
    },
    "5560": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5562": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP2",
      "path": "12"
    },
    "5563": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "ADD",
      "path": "12"
    },
    "5564": {
      "op": "DUP13"
    },
    "5565": {
      "op": "SWAP1"
    },
    "5566": {
      "op": "MSTORE"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5573": {
      "op": "SHL"
    },
    "5574": {
      "op": "SUB"
    },
    "5575": {
      "op": "DUP1"
    },
    "5576": {
      "op": "DUP8"
    },
    "5577": {
      "op": "AND"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5580": {
      "op": "DUP4"
    },
    "5581": {
      "op": "ADD"
    },
    "5582": {
      "op": "MSTORE"
    },
    "5583": {
      "op": "DUP1"
    },
    "5584": {
      "op": "DUP13"
    },
    "5585": {
      "op": "AND"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5588": {
      "op": "DUP4"
    },
    "5589": {
      "op": "ADD"
    },
    "5590": {
      "op": "MSTORE"
    },
    "5591": {
      "fn": "MainStaking.registerPool",
      "offset": [14598, 14602],
      "op": "ADDRESS",
      "path": "12"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5594": {
      "op": "DUP4"
    },
    "5595": {
      "op": "ADD"
    },
    "5596": {
      "op": "MSTORE"
    },
    "5597": {
      "fn": "MainStaking.registerPool",
      "offset": [14629, 14638],
      "op": "SWAP3",
      "path": "12"
    },
    "5598": {
      "fn": "MainStaking.registerPool",
      "offset": [14629, 14638],
      "op": "DUP4",
      "path": "12"
    },
    "5599": {
      "fn": "MainStaking.registerPool",
      "offset": [14629, 14638],
      "op": "AND",
      "path": "12"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5602": {
      "op": "DUP3"
    },
    "5603": {
      "op": "ADD"
    },
    "5604": {
      "op": "MSTORE"
    },
    "5605": {
      "op": "DUP3"
    },
    "5606": {
      "op": "DUP5"
    },
    "5607": {
      "op": "AND"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5610": {
      "op": "DUP3"
    },
    "5611": {
      "op": "ADD"
    },
    "5612": {
      "op": "MSTORE"
    },
    "5613": {
      "fn": "MainStaking.registerPool",
      "offset": [14700, 14704],
      "op": "SWAP2",
      "path": "12"
    },
    "5614": {
      "fn": "MainStaking.registerPool",
      "offset": [14700, 14704],
      "op": "AND",
      "path": "12"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "5617": {
      "op": "DUP3"
    },
    "5618": {
      "op": "ADD"
    },
    "5619": {
      "op": "MSTORE"
    },
    "5620": {
      "fn": "MainStaking.registerPool",
      "offset": [14263, 14389],
      "op": "SWAP1",
      "path": "12"
    },
    "5621": {
      "fn": "MainStaking.registerPool",
      "offset": [14263, 14389],
      "op": "SWAP2",
      "path": "12"
    },
    "5622": {
      "op": "POP"
    },
    "5623": {
      "fn": "MainStaking.registerPool",
      "offset": [14399, 14417],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5625": {
      "fn": "MainStaking.registerPool",
      "offset": [14399, 14417],
      "op": "SWAP1",
      "path": "12"
    },
    "5626": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14465],
      "op": "PUSH20",
      "path": "12",
      "value": "0x0"
    },
    "5647": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14465],
      "op": "SWAP1",
      "path": "12"
    },
    "5648": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14482],
      "op": "PUSH4",
      "path": "12",
      "value": "0x746D19F6"
    },
    "5653": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14482],
      "op": "SWAP1",
      "path": "12"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "5656": {
      "op": "ADD"
    },
    "5657": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5659": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5661": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "MLOAD",
      "path": "12"
    },
    "5662": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP1",
      "path": "12"
    },
    "5663": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP4",
      "path": "12"
    },
    "5664": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "SUB",
      "path": "12"
    },
    "5665": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP2",
      "path": "12"
    },
    "5666": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP7",
      "path": "12"
    },
    "5667": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP1",
      "path": "12"
    },
    "5668": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "5669": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "ISZERO",
      "path": "12"
    },
    "5670": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP1",
      "path": "12"
    },
    "5671": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "ISZERO",
      "path": "12"
    },
    "5672": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1630"
    },
    "5675": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "JUMPI",
      "path": "12"
    },
    "5676": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5678": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP1",
      "path": "12"
    },
    "5679": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "REVERT",
      "path": "12"
    },
    "5680": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5681": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "POP",
      "path": "12"
    },
    "5682": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "GAS",
      "path": "12"
    },
    "5683": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DELEGATECALL",
      "path": "12"
    },
    "5684": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "ISZERO",
      "path": "12"
    },
    "5685": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP1",
      "path": "12"
    },
    "5686": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "ISZERO",
      "path": "12"
    },
    "5687": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1644"
    },
    "5690": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "JUMPI",
      "path": "12"
    },
    "5691": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5692": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5694": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP1",
      "path": "12"
    },
    "5695": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "5696": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5697": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5699": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "REVERT",
      "path": "12"
    },
    "5700": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5701": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "POP",
      "path": "12"
    },
    "5702": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "POP",
      "path": "12"
    },
    "5703": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "POP",
      "path": "12"
    },
    "5704": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "POP",
      "path": "12"
    },
    "5705": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5707": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "MLOAD",
      "path": "12"
    },
    "5708": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5709": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5711": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "NOT",
      "path": "12"
    },
    "5712": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5714": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP3",
      "path": "12"
    },
    "5715": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "ADD",
      "path": "12"
    },
    "5716": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "AND",
      "path": "12"
    },
    "5717": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP3",
      "path": "12"
    },
    "5718": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "ADD",
      "path": "12"
    },
    "5719": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP1",
      "path": "12"
    },
    "5720": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5722": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "MSTORE",
      "path": "12"
    },
    "5723": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "POP",
      "path": "12"
    },
    "5724": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "DUP2",
      "path": "12"
    },
    "5725": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "ADD",
      "path": "12"
    },
    "5726": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "SWAP1",
      "path": "12"
    },
    "5727": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1668"
    },
    "5730": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "SWAP2",
      "path": "12"
    },
    "5731": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "SWAP1",
      "path": "12"
    },
    "5732": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34B7"
    },
    "5735": {
      "fn": "MainStaking.registerPool",
      "jump": "i",
      "offset": [14445, 14719],
      "op": "JUMP",
      "path": "12"
    },
    "5736": {
      "fn": "MainStaking.registerPool",
      "offset": [14445, 14719],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5737": {
      "fn": "MainStaking.registerPool",
      "offset": [14754, 14763],
      "op": "PUSH1",
      "path": "12",
      "statement": 50,
      "value": "0x6A"
    },
    "5739": {
      "fn": "MainStaking.registerPool",
      "offset": [14754, 14763],
      "op": "SLOAD",
      "path": "12"
    },
    "5740": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5742": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "MLOAD",
      "path": "12"
    },
    "5743": {
      "op": "PUSH4",
      "value": "0x266F24B7"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5750": {
      "op": "SHL"
    },
    "5751": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "DUP2",
      "path": "12"
    },
    "5752": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "MSTORE",
      "path": "12"
    },
    "5753": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5755": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "DUP2",
      "path": "12"
    },
    "5756": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "ADD",
      "path": "12"
    },
    "5757": {
      "op": "DUP8"
    },
    "5758": {
      "op": "SWAP1"
    },
    "5759": {
      "op": "MSTORE"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5766": {
      "op": "SHL"
    },
    "5767": {
      "op": "SUB"
    },
    "5768": {
      "op": "DUP7"
    },
    "5769": {
      "op": "DUP2"
    },
    "5770": {
      "op": "AND"
    },
    "5771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5773": {
      "op": "DUP4"
    },
    "5774": {
      "op": "ADD"
    },
    "5775": {
      "op": "MSTORE"
    },
    "5776": {
      "op": "DUP6"
    },
    "5777": {
      "op": "DUP2"
    },
    "5778": {
      "op": "AND"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5781": {
      "op": "DUP4"
    },
    "5782": {
      "op": "ADD"
    },
    "5783": {
      "op": "MSTORE"
    },
    "5784": {
      "op": "DUP1"
    },
    "5785": {
      "op": "DUP5"
    },
    "5786": {
      "op": "AND"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5789": {
      "op": "DUP4"
    },
    "5790": {
      "op": "ADD"
    },
    "5791": {
      "op": "MSTORE"
    },
    "5792": {
      "fn": "MainStaking.registerPool",
      "offset": [14399, 14729],
      "op": "SWAP3",
      "path": "12"
    },
    "5793": {
      "fn": "MainStaking.registerPool",
      "offset": [14399, 14729],
      "op": "SWAP4",
      "path": "12"
    },
    "5794": {
      "op": "POP"
    },
    "5795": {
      "fn": "MainStaking.registerPool",
      "offset": [14754, 14763],
      "op": "SWAP2",
      "path": "12"
    },
    "5796": {
      "fn": "MainStaking.registerPool",
      "offset": [14754, 14763],
      "op": "AND",
      "path": "12"
    },
    "5797": {
      "fn": "MainStaking.registerPool",
      "offset": [14754, 14763],
      "op": "SWAP1",
      "path": "12"
    },
    "5798": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14768],
      "op": "PUSH4",
      "path": "12",
      "value": "0x266F24B7"
    },
    "5803": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14768],
      "op": "SWAP1",
      "path": "12"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5806": {
      "op": "ADD"
    },
    "5807": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5809": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5811": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "MLOAD",
      "path": "12"
    },
    "5812": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "DUP1",
      "path": "12"
    },
    "5813": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "DUP4",
      "path": "12"
    },
    "5814": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "SUB",
      "path": "12"
    },
    "5815": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "DUP2",
      "path": "12"
    },
    "5816": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5818": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "DUP8",
      "path": "12"
    },
    "5819": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "DUP1",
      "path": "12"
    },
    "5820": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "5821": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "ISZERO",
      "path": "12"
    },
    "5822": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "DUP1",
      "path": "12"
    },
    "5823": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "ISZERO",
      "path": "12"
    },
    "5824": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16C8"
    },
    "5827": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "JUMPI",
      "path": "12"
    },
    "5828": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5830": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "DUP1",
      "path": "12"
    },
    "5831": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "REVERT",
      "path": "12"
    },
    "5832": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5833": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "POP",
      "path": "12"
    },
    "5834": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "GAS",
      "path": "12"
    },
    "5835": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "CALL",
      "path": "12"
    },
    "5836": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "ISZERO",
      "path": "12"
    },
    "5837": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "DUP1",
      "path": "12"
    },
    "5838": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "ISZERO",
      "path": "12"
    },
    "5839": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16DC"
    },
    "5842": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "JUMPI",
      "path": "12"
    },
    "5843": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5844": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5846": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "DUP1",
      "path": "12"
    },
    "5847": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "5848": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5849": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5851": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "REVERT",
      "path": "12"
    },
    "5852": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5853": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "POP",
      "path": "12"
    },
    "5854": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "POP",
      "path": "12"
    },
    "5855": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "POP",
      "path": "12"
    },
    "5856": {
      "fn": "MainStaking.registerPool",
      "offset": [14739, 14894],
      "op": "POP",
      "path": "12"
    },
    "5857": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "PUSH1",
      "path": "12",
      "statement": 51,
      "value": "0x40"
    },
    "5859": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "MLOAD",
      "path": "12"
    },
    "5860": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "DUP1",
      "path": "12"
    },
    "5861": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "PUSH2",
      "path": "12",
      "value": "0x120"
    },
    "5864": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "ADD",
      "path": "12"
    },
    "5865": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5867": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "MSTORE",
      "path": "12"
    },
    "5868": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "DUP1",
      "path": "12"
    },
    "5869": {
      "fn": "MainStaking.registerPool",
      "offset": [14944, 14948],
      "op": "DUP11",
      "path": "12"
    },
    "5870": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "5871": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "MSTORE",
      "path": "12"
    },
    "5872": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5874": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "ADD",
      "path": "12"
    },
    "5875": {
      "fn": "MainStaking.registerPool",
      "offset": [14972, 14976],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5877": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "ISZERO",
      "path": "12"
    },
    "5878": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "ISZERO",
      "path": "12"
    },
    "5879": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "5880": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "MSTORE",
      "path": "12"
    },
    "5881": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5883": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "ADD",
      "path": "12"
    },
    "5884": {
      "fn": "MainStaking.registerPool",
      "offset": [14997, 15003],
      "op": "DUP10",
      "path": "12"
    },
    "5885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5891": {
      "op": "SHL"
    },
    "5892": {
      "op": "SUB"
    },
    "5893": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "AND",
      "path": "12"
    },
    "5894": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "5895": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "MSTORE",
      "path": "12"
    },
    "5896": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5898": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "ADD",
      "path": "12"
    },
    "5899": {
      "fn": "MainStaking.registerPool",
      "offset": [15028, 15038],
      "op": "DUP9",
      "path": "12"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5906": {
      "op": "SHL"
    },
    "5907": {
      "op": "SUB"
    },
    "5908": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "AND",
      "path": "12"
    },
    "5909": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "5910": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "MSTORE",
      "path": "12"
    },
    "5911": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5913": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "ADD",
      "path": "12"
    },
    "5914": {
      "fn": "MainStaking.registerPool",
      "offset": [15060, 15061],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5916": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "5917": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "MSTORE",
      "path": "12"
    },
    "5918": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5920": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "ADD",
      "path": "12"
    },
    "5921": {
      "fn": "MainStaking.registerPool",
      "offset": [15081, 15082],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5923": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "5924": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "MSTORE",
      "path": "12"
    },
    "5925": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5927": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "ADD",
      "path": "12"
    },
    "5928": {
      "fn": "MainStaking.registerPool",
      "offset": [15118, 15126],
      "op": "DUP5",
      "path": "12"
    },
    "5929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5935": {
      "op": "SHL"
    },
    "5936": {
      "op": "SUB"
    },
    "5937": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "AND",
      "path": "12"
    },
    "5938": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "5939": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "MSTORE",
      "path": "12"
    },
    "5940": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5942": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "ADD",
      "path": "12"
    },
    "5943": {
      "fn": "MainStaking.registerPool",
      "offset": [15159, 15167],
      "op": "DUP4",
      "path": "12"
    },
    "5944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5950": {
      "op": "SHL"
    },
    "5951": {
      "op": "SUB"
    },
    "5952": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "AND",
      "path": "12"
    },
    "5953": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "5954": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "MSTORE",
      "path": "12"
    },
    "5955": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5957": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "ADD",
      "path": "12"
    },
    "5958": {
      "fn": "MainStaking.registerPool",
      "offset": [15198, 15204],
      "op": "DUP3",
      "path": "12"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5965": {
      "op": "SHL"
    },
    "5966": {
      "op": "SUB"
    },
    "5967": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "AND",
      "path": "12"
    },
    "5968": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "5969": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "MSTORE",
      "path": "12"
    },
    "5970": {
      "fn": "MainStaking.registerPool",
      "offset": [14920, 15216],
      "op": "POP",
      "path": "12"
    },
    "5971": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14909],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "5973": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5975": {
      "fn": "MainStaking.registerPool",
      "offset": [14910, 14916],
      "op": "DUP11",
      "path": "12"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5982": {
      "op": "SHL"
    },
    "5983": {
      "op": "SUB"
    },
    "5984": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "AND",
      "path": "12"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5991": {
      "op": "SHL"
    },
    "5992": {
      "op": "SUB"
    },
    "5993": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "AND",
      "path": "12"
    },
    "5994": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "DUP2",
      "path": "12"
    },
    "5995": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "MSTORE",
      "path": "12"
    },
    "5996": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5998": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "ADD",
      "path": "12"
    },
    "5999": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "SWAP1",
      "path": "12"
    },
    "6000": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "DUP2",
      "path": "12"
    },
    "6001": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "MSTORE",
      "path": "12"
    },
    "6002": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6004": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "ADD",
      "path": "12"
    },
    "6005": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6007": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 14917],
      "op": "KECCAK256",
      "path": "12"
    },
    "6008": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6010": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP3",
      "path": "12"
    },
    "6011": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6012": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MLOAD",
      "path": "12"
    },
    "6013": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6014": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6016": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6017": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SSTORE",
      "path": "12"
    },
    "6018": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6020": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP3",
      "path": "12"
    },
    "6021": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6022": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MLOAD",
      "path": "12"
    },
    "6023": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6024": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6026": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6027": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6029": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "6032": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "EXP",
      "path": "12"
    },
    "6033": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6034": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SLOAD",
      "path": "12"
    },
    "6035": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6036": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "6038": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MUL",
      "path": "12"
    },
    "6039": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "NOT",
      "path": "12"
    },
    "6040": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "AND",
      "path": "12"
    },
    "6041": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6042": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP4",
      "path": "12"
    },
    "6043": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ISZERO",
      "path": "12"
    },
    "6044": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ISZERO",
      "path": "12"
    },
    "6045": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MUL",
      "path": "12"
    },
    "6046": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "OR",
      "path": "12"
    },
    "6047": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6048": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SSTORE",
      "path": "12"
    },
    "6049": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "POP",
      "path": "12"
    },
    "6050": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6052": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP3",
      "path": "12"
    },
    "6053": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6054": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MLOAD",
      "path": "12"
    },
    "6055": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6056": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6058": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6059": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6061": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "6064": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "EXP",
      "path": "12"
    },
    "6065": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6066": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SLOAD",
      "path": "12"
    },
    "6067": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6074": {
      "op": "SHL"
    },
    "6075": {
      "op": "SUB"
    },
    "6076": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MUL",
      "path": "12"
    },
    "6077": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "NOT",
      "path": "12"
    },
    "6078": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "AND",
      "path": "12"
    },
    "6079": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6080": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP4",
      "path": "12"
    },
    "6081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6087": {
      "op": "SHL"
    },
    "6088": {
      "op": "SUB"
    },
    "6089": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "AND",
      "path": "12"
    },
    "6090": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MUL",
      "path": "12"
    },
    "6091": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "OR",
      "path": "12"
    },
    "6092": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6093": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SSTORE",
      "path": "12"
    },
    "6094": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "POP",
      "path": "12"
    },
    "6095": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "6097": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP3",
      "path": "12"
    },
    "6098": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6099": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MLOAD",
      "path": "12"
    },
    "6100": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6101": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "6103": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6104": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6106": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "6109": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "EXP",
      "path": "12"
    },
    "6110": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6111": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SLOAD",
      "path": "12"
    },
    "6112": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6119": {
      "op": "SHL"
    },
    "6120": {
      "op": "SUB"
    },
    "6121": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MUL",
      "path": "12"
    },
    "6122": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "NOT",
      "path": "12"
    },
    "6123": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "AND",
      "path": "12"
    },
    "6124": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6125": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP4",
      "path": "12"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6132": {
      "op": "SHL"
    },
    "6133": {
      "op": "SUB"
    },
    "6134": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "AND",
      "path": "12"
    },
    "6135": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MUL",
      "path": "12"
    },
    "6136": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "OR",
      "path": "12"
    },
    "6137": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6138": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SSTORE",
      "path": "12"
    },
    "6139": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "POP",
      "path": "12"
    },
    "6140": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "6142": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP3",
      "path": "12"
    },
    "6143": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6144": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MLOAD",
      "path": "12"
    },
    "6145": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6146": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "6148": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6149": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SSTORE",
      "path": "12"
    },
    "6150": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "6152": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP3",
      "path": "12"
    },
    "6153": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6154": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MLOAD",
      "path": "12"
    },
    "6155": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6156": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6158": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6159": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SSTORE",
      "path": "12"
    },
    "6160": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC0"
    },
    "6162": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP3",
      "path": "12"
    },
    "6163": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6164": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MLOAD",
      "path": "12"
    },
    "6165": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6166": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "6168": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6169": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6171": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "6174": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "EXP",
      "path": "12"
    },
    "6175": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6176": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SLOAD",
      "path": "12"
    },
    "6177": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6184": {
      "op": "SHL"
    },
    "6185": {
      "op": "SUB"
    },
    "6186": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MUL",
      "path": "12"
    },
    "6187": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "NOT",
      "path": "12"
    },
    "6188": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "AND",
      "path": "12"
    },
    "6189": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6190": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP4",
      "path": "12"
    },
    "6191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6197": {
      "op": "SHL"
    },
    "6198": {
      "op": "SUB"
    },
    "6199": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "AND",
      "path": "12"
    },
    "6200": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MUL",
      "path": "12"
    },
    "6201": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "OR",
      "path": "12"
    },
    "6202": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6203": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SSTORE",
      "path": "12"
    },
    "6204": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "POP",
      "path": "12"
    },
    "6205": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "6207": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP3",
      "path": "12"
    },
    "6208": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6209": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MLOAD",
      "path": "12"
    },
    "6210": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6211": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "6213": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6214": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6216": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "6219": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "EXP",
      "path": "12"
    },
    "6220": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6221": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SLOAD",
      "path": "12"
    },
    "6222": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6229": {
      "op": "SHL"
    },
    "6230": {
      "op": "SUB"
    },
    "6231": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MUL",
      "path": "12"
    },
    "6232": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "NOT",
      "path": "12"
    },
    "6233": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "AND",
      "path": "12"
    },
    "6234": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6235": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP4",
      "path": "12"
    },
    "6236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6242": {
      "op": "SHL"
    },
    "6243": {
      "op": "SUB"
    },
    "6244": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "AND",
      "path": "12"
    },
    "6245": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MUL",
      "path": "12"
    },
    "6246": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "OR",
      "path": "12"
    },
    "6247": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6248": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SSTORE",
      "path": "12"
    },
    "6249": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "POP",
      "path": "12"
    },
    "6250": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "6253": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP3",
      "path": "12"
    },
    "6254": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6255": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MLOAD",
      "path": "12"
    },
    "6256": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6257": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "6259": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "ADD",
      "path": "12"
    },
    "6260": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6262": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "6265": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "EXP",
      "path": "12"
    },
    "6266": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6267": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SLOAD",
      "path": "12"
    },
    "6268": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP2",
      "path": "12"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6275": {
      "op": "SHL"
    },
    "6276": {
      "op": "SUB"
    },
    "6277": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MUL",
      "path": "12"
    },
    "6278": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "NOT",
      "path": "12"
    },
    "6279": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "AND",
      "path": "12"
    },
    "6280": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6281": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "DUP4",
      "path": "12"
    },
    "6282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6288": {
      "op": "SHL"
    },
    "6289": {
      "op": "SUB"
    },
    "6290": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "AND",
      "path": "12"
    },
    "6291": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "MUL",
      "path": "12"
    },
    "6292": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "OR",
      "path": "12"
    },
    "6293": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6294": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SSTORE",
      "path": "12"
    },
    "6295": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "POP",
      "path": "12"
    },
    "6296": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "SWAP1",
      "path": "12"
    },
    "6297": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "POP",
      "path": "12"
    },
    "6298": {
      "fn": "MainStaking.registerPool",
      "offset": [14904, 15216],
      "op": "POP",
      "path": "12"
    },
    "6299": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "PUSH32",
      "path": "12",
      "statement": 52,
      "value": "0x73CCA62AB1B520C9715BF4E6C71E3E518C754E7148F65102F43289A7DF0EFEA6"
    },
    "6332": {
      "fn": "MainStaking.registerPool",
      "offset": [15241, 15247],
      "op": "DUP9",
      "path": "12"
    },
    "6333": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6335": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "MLOAD",
      "path": "12"
    },
    "6336": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18D8"
    },
    "6339": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "SWAP2",
      "path": "12"
    },
    "6340": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "SWAP1",
      "path": "12"
    },
    "6341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6347": {
      "op": "SHL"
    },
    "6348": {
      "op": "SUB"
    },
    "6349": {
      "op": "SWAP2"
    },
    "6350": {
      "op": "SWAP1"
    },
    "6351": {
      "op": "SWAP2"
    },
    "6352": {
      "op": "AND"
    },
    "6353": {
      "op": "DUP2"
    },
    "6354": {
      "op": "MSTORE"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6357": {
      "op": "ADD"
    },
    "6358": {
      "op": "SWAP1"
    },
    "6359": {
      "op": "JUMP"
    },
    "6360": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6361": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6363": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "MLOAD",
      "path": "12"
    },
    "6364": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "DUP1",
      "path": "12"
    },
    "6365": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "SWAP2",
      "path": "12"
    },
    "6366": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "SUB",
      "path": "12"
    },
    "6367": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "SWAP1",
      "path": "12"
    },
    "6368": {
      "fn": "MainStaking.registerPool",
      "offset": [15231, 15248],
      "op": "LOG1",
      "path": "12"
    },
    "6369": {
      "fn": "MainStaking.registerPool",
      "offset": [14016, 15255],
      "op": "POP",
      "path": "12"
    },
    "6370": {
      "fn": "MainStaking.registerPool",
      "offset": [14016, 15255],
      "op": "POP",
      "path": "12"
    },
    "6371": {
      "fn": "MainStaking.registerPool",
      "offset": [14016, 15255],
      "op": "POP",
      "path": "12"
    },
    "6372": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "POP",
      "path": "12"
    },
    "6373": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "POP",
      "path": "12"
    },
    "6374": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "POP",
      "path": "12"
    },
    "6375": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "POP",
      "path": "12"
    },
    "6376": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "POP",
      "path": "12"
    },
    "6377": {
      "fn": "MainStaking.registerPool",
      "offset": [13794, 15255],
      "op": "POP",
      "path": "12"
    },
    "6378": {
      "fn": "MainStaking.registerPool",
      "jump": "o",
      "offset": [13794, 15255],
      "op": "JUMP",
      "path": "12"
    },
    "6379": {
      "fn": "MainStaking.removePool",
      "offset": [15993, 16093],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6380": {
      "offset": [1490, 1496],
      "op": "PUSH1",
      "path": "20",
      "value": "0x33"
    },
    "6382": {
      "fn": "MainStaking.removePool",
      "offset": [1490, 1496],
      "op": "SLOAD",
      "path": "20"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6389": {
      "op": "SHL"
    },
    "6390": {
      "op": "SUB"
    },
    "6391": {
      "offset": [1490, 1496],
      "op": "AND",
      "path": "20"
    },
    "6392": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [907, 917],
      "op": "CALLER",
      "path": "18"
    },
    "6393": {
      "offset": [1490, 1512],
      "op": "EQ",
      "path": "20"
    },
    "6394": {
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1915"
    },
    "6397": {
      "offset": [1482, 1549],
      "op": "JUMPI",
      "path": "20"
    },
    "6398": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6400": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MLOAD",
      "path": "20"
    },
    "6401": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6405": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6407": {
      "op": "SHL"
    },
    "6408": {
      "offset": [1482, 1549],
      "op": "DUP2",
      "path": "20"
    },
    "6409": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MSTORE",
      "path": "20"
    },
    "6410": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6412": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "ADD",
      "path": "20"
    },
    "6413": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "6416": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "SWAP1",
      "path": "20"
    },
    "6417": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38B0"
    },
    "6420": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [1482, 1549],
      "op": "JUMP",
      "path": "20"
    },
    "6421": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6428": {
      "op": "SHL"
    },
    "6429": {
      "op": "SUB"
    },
    "6430": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16069],
      "op": "AND",
      "path": "12",
      "statement": 53
    },
    "6431": {
      "fn": "MainStaking.removePool",
      "offset": [16081, 16086],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6433": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16069],
      "op": "SWAP1",
      "path": "12"
    },
    "6434": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16069],
      "op": "DUP2",
      "path": "12"
    },
    "6435": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16069],
      "op": "MSTORE",
      "path": "12"
    },
    "6436": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16062],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "6438": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16069],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6440": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16069],
      "op": "MSTORE",
      "path": "12"
    },
    "6441": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16069],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6443": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16069],
      "op": "SWAP1",
      "path": "12"
    },
    "6444": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16069],
      "op": "KECCAK256",
      "path": "12"
    },
    "6445": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16078],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6447": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16078],
      "op": "ADD",
      "path": "12"
    },
    "6448": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16086],
      "op": "DUP1",
      "path": "12"
    },
    "6449": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16086],
      "op": "SLOAD",
      "path": "12"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6452": {
      "op": "NOT"
    },
    "6453": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16086],
      "op": "AND",
      "path": "12"
    },
    "6454": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16086],
      "op": "SWAP1",
      "path": "12"
    },
    "6455": {
      "fn": "MainStaking.removePool",
      "offset": [16057, 16086],
      "op": "SSTORE",
      "path": "12"
    },
    "6456": {
      "fn": "MainStaking.removePool",
      "jump": "o",
      "offset": [15993, 16093],
      "op": "JUMP",
      "path": "12"
    },
    "6457": {
      "fn": "MainStaking.removeFee",
      "offset": [4501, 4698],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6458": {
      "offset": [1490, 1496],
      "op": "PUSH1",
      "path": "20",
      "value": "0x33"
    },
    "6460": {
      "fn": "MainStaking.removeFee",
      "offset": [1490, 1496],
      "op": "SLOAD",
      "path": "20"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6467": {
      "op": "SHL"
    },
    "6468": {
      "op": "SUB"
    },
    "6469": {
      "offset": [1490, 1496],
      "op": "AND",
      "path": "20"
    },
    "6470": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [907, 917],
      "op": "CALLER",
      "path": "18"
    },
    "6471": {
      "offset": [1490, 1512],
      "op": "EQ",
      "path": "20"
    },
    "6472": {
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1963"
    },
    "6475": {
      "offset": [1482, 1549],
      "op": "JUMPI",
      "path": "20"
    },
    "6476": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6478": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MLOAD",
      "path": "20"
    },
    "6479": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6483": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6485": {
      "op": "SHL"
    },
    "6486": {
      "offset": [1482, 1549],
      "op": "DUP2",
      "path": "20"
    },
    "6487": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MSTORE",
      "path": "20"
    },
    "6488": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6490": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "ADD",
      "path": "20"
    },
    "6491": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "6494": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "SWAP1",
      "path": "20"
    },
    "6495": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38B0"
    },
    "6498": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [1482, 1549],
      "op": "JUMP",
      "path": "20"
    },
    "6499": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6500": {
      "fn": "MainStaking.removeFee",
      "offset": [4564, 4580],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6502": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4591],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6E"
    },
    "6504": {
      "fn": "MainStaking.removeFee",
      "offset": [4592, 4597],
      "op": "DUP3",
      "path": "12"
    },
    "6505": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "DUP2",
      "path": "12"
    },
    "6506": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "SLOAD",
      "path": "12"
    },
    "6507": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "DUP2",
      "path": "12"
    },
    "6508": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "LT",
      "path": "12"
    },
    "6509": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1978"
    },
    "6512": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "6513": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1978"
    },
    "6516": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39FD"
    },
    "6519": {
      "fn": "MainStaking.removeFee",
      "jump": "i",
      "offset": [4583, 4598],
      "op": "JUMP",
      "path": "12"
    },
    "6520": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6521": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "SWAP1",
      "path": "12"
    },
    "6522": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6524": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "MSTORE",
      "path": "12"
    },
    "6525": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6527": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6529": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "KECCAK256",
      "path": "12"
    },
    "6530": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "SWAP1",
      "path": "12"
    },
    "6531": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6533": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "MUL",
      "path": "12"
    },
    "6534": {
      "fn": "MainStaking.removeFee",
      "offset": [4583, 4598],
      "op": "ADD",
      "path": "12"
    },
    "6535": {
      "fn": "MainStaking.removeFee",
      "offset": [4564, 4598],
      "op": "SWAP1",
      "path": "12"
    },
    "6536": {
      "fn": "MainStaking.removeFee",
      "offset": [4564, 4598],
      "op": "POP",
      "path": "12"
    },
    "6537": {
      "fn": "MainStaking.removeFee",
      "offset": [4620, 4623],
      "op": "DUP1",
      "path": "12",
      "statement": 54
    },
    "6538": {
      "fn": "MainStaking.removeFee",
      "offset": [4620, 4629],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "6540": {
      "fn": "MainStaking.removeFee",
      "offset": [4620, 4629],
      "op": "ADD",
      "path": "12"
    },
    "6541": {
      "fn": "MainStaking.removeFee",
      "offset": [4620, 4629],
      "op": "SLOAD",
      "path": "12"
    },
    "6542": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4616],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6D"
    },
    "6544": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4616],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6546": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4629],
      "op": "DUP3",
      "path": "12"
    },
    "6547": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4629],
      "op": "DUP3",
      "path": "12"
    },
    "6548": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4629],
      "op": "SLOAD",
      "path": "12"
    },
    "6549": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4629],
      "op": "PUSH2",
      "path": "12",
      "value": "0x199E"
    },
    "6552": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4629],
      "op": "SWAP2",
      "path": "12"
    },
    "6553": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4629],
      "op": "SWAP1",
      "path": "12"
    },
    "6554": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4629],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3989"
    },
    "6557": {
      "fn": "MainStaking.removeFee",
      "jump": "i",
      "offset": [4608, 4629],
      "op": "JUMP",
      "path": "12"
    },
    "6558": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4629],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6559": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4629],
      "op": "SWAP1",
      "path": "12"
    },
    "6560": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4629],
      "op": "SWAP2",
      "path": "12"
    },
    "6561": {
      "fn": "MainStaking.removeFee",
      "offset": [4608, 4629],
      "op": "SSTORE",
      "path": "12"
    },
    "6562": {
      "op": "POP"
    },
    "6563": {
      "op": "POP"
    },
    "6564": {
      "fn": "MainStaking.removeFee",
      "offset": [4639, 4651],
      "op": "PUSH1",
      "path": "12",
      "statement": 55,
      "value": "0x3"
    },
    "6566": {
      "fn": "MainStaking.removeFee",
      "offset": [4639, 4651],
      "op": "DUP2",
      "path": "12"
    },
    "6567": {
      "fn": "MainStaking.removeFee",
      "offset": [4639, 4651],
      "op": "ADD",
      "path": "12"
    },
    "6568": {
      "fn": "MainStaking.removeFee",
      "offset": [4639, 4659],
      "op": "DUP1",
      "path": "12"
    },
    "6569": {
      "fn": "MainStaking.removeFee",
      "offset": [4639, 4659],
      "op": "SLOAD",
      "path": "12"
    },
    "6570": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6572": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6574": {
      "op": "SHL"
    },
    "6575": {
      "op": "NOT"
    },
    "6576": {
      "fn": "MainStaking.removeFee",
      "offset": [4639, 4659],
      "op": "DUP2",
      "path": "12"
    },
    "6577": {
      "fn": "MainStaking.removeFee",
      "offset": [4639, 4659],
      "op": "AND",
      "path": "12"
    },
    "6578": {
      "fn": "MainStaking.removeFee",
      "offset": [4639, 4659],
      "op": "SWAP1",
      "path": "12"
    },
    "6579": {
      "fn": "MainStaking.removeFee",
      "offset": [4639, 4659],
      "op": "SWAP2",
      "path": "12"
    },
    "6580": {
      "fn": "MainStaking.removeFee",
      "offset": [4639, 4659],
      "op": "SSTORE",
      "path": "12"
    },
    "6581": {
      "fn": "MainStaking.removeFee",
      "offset": [4674, 4691],
      "op": "PUSH1",
      "path": "12",
      "statement": 56,
      "value": "0x40"
    },
    "6583": {
      "fn": "MainStaking.removeFee",
      "offset": [4674, 4691],
      "op": "MLOAD",
      "path": "12"
    },
    "6584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6590": {
      "op": "SHL"
    },
    "6591": {
      "op": "SUB"
    },
    "6592": {
      "fn": "MainStaking.removeFee",
      "offset": [4684, 4690],
      "op": "SWAP1",
      "path": "12"
    },
    "6593": {
      "fn": "MainStaking.removeFee",
      "offset": [4684, 4690],
      "op": "SWAP2",
      "path": "12"
    },
    "6594": {
      "fn": "MainStaking.removeFee",
      "offset": [4684, 4690],
      "op": "AND",
      "path": "12"
    },
    "6595": {
      "op": "DUP2"
    },
    "6596": {
      "op": "MSTORE"
    },
    "6597": {
      "fn": "MainStaking.removeFee",
      "offset": [4674, 4691],
      "op": "PUSH32",
      "path": "12",
      "value": "0x5493DB1723859B50D9E2F6DBCDA6DA662098EA59BF451AD2A31AD62289ED54A1"
    },
    "6630": {
      "fn": "MainStaking.removeFee",
      "offset": [4674, 4691],
      "op": "SWAP1",
      "path": "12"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6633": {
      "op": "ADD"
    },
    "6634": {
      "fn": "MainStaking.removeFee",
      "offset": [4674, 4691],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6636": {
      "fn": "MainStaking.removeFee",
      "offset": [4674, 4691],
      "op": "MLOAD",
      "path": "12"
    },
    "6637": {
      "fn": "MainStaking.removeFee",
      "offset": [4674, 4691],
      "op": "DUP1",
      "path": "12"
    },
    "6638": {
      "fn": "MainStaking.removeFee",
      "offset": [4674, 4691],
      "op": "SWAP2",
      "path": "12"
    },
    "6639": {
      "fn": "MainStaking.removeFee",
      "offset": [4674, 4691],
      "op": "SUB",
      "path": "12"
    },
    "6640": {
      "fn": "MainStaking.removeFee",
      "offset": [4674, 4691],
      "op": "SWAP1",
      "path": "12"
    },
    "6641": {
      "fn": "MainStaking.removeFee",
      "offset": [4674, 4691],
      "op": "LOG1",
      "path": "12"
    },
    "6642": {
      "fn": "MainStaking.removeFee",
      "offset": [4554, 4698],
      "op": "POP",
      "path": "12"
    },
    "6643": {
      "fn": "MainStaking.removeFee",
      "offset": [4501, 4698],
      "op": "POP",
      "path": "12"
    },
    "6644": {
      "fn": "MainStaking.removeFee",
      "jump": "o",
      "offset": [4501, 4698],
      "op": "JUMP",
      "path": "12"
    },
    "6645": {
      "fn": "MainStaking.setFee",
      "offset": [4067, 4495],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6646": {
      "offset": [1490, 1496],
      "op": "PUSH1",
      "path": "20",
      "value": "0x33"
    },
    "6648": {
      "fn": "MainStaking.setFee",
      "offset": [1490, 1496],
      "op": "SLOAD",
      "path": "20"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6655": {
      "op": "SHL"
    },
    "6656": {
      "op": "SUB"
    },
    "6657": {
      "offset": [1490, 1496],
      "op": "AND",
      "path": "20"
    },
    "6658": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [907, 917],
      "op": "CALLER",
      "path": "18"
    },
    "6659": {
      "offset": [1490, 1512],
      "op": "EQ",
      "path": "20"
    },
    "6660": {
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A1F"
    },
    "6663": {
      "offset": [1482, 1549],
      "op": "JUMPI",
      "path": "20"
    },
    "6664": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6666": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MLOAD",
      "path": "20"
    },
    "6667": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6671": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6673": {
      "op": "SHL"
    },
    "6674": {
      "offset": [1482, 1549],
      "op": "DUP2",
      "path": "20"
    },
    "6675": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MSTORE",
      "path": "20"
    },
    "6676": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6678": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "ADD",
      "path": "20"
    },
    "6679": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "6682": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "SWAP1",
      "path": "20"
    },
    "6683": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38B0"
    },
    "6686": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [1482, 1549],
      "op": "JUMP",
      "path": "20"
    },
    "6687": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6688": {
      "fn": "MainStaking.setFee",
      "offset": [4142, 4158],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6690": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4169],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6E"
    },
    "6692": {
      "fn": "MainStaking.setFee",
      "offset": [4170, 4175],
      "op": "DUP4",
      "path": "12"
    },
    "6693": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "DUP2",
      "path": "12"
    },
    "6694": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "SLOAD",
      "path": "12"
    },
    "6695": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "DUP2",
      "path": "12"
    },
    "6696": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "LT",
      "path": "12"
    },
    "6697": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A34"
    },
    "6700": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "JUMPI",
      "path": "12"
    },
    "6701": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A34"
    },
    "6704": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39FD"
    },
    "6707": {
      "fn": "MainStaking.setFee",
      "jump": "i",
      "offset": [4161, 4176],
      "op": "JUMP",
      "path": "12"
    },
    "6708": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6709": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "SWAP1",
      "path": "12"
    },
    "6710": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6712": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "MSTORE",
      "path": "12"
    },
    "6713": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6715": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6717": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "KECCAK256",
      "path": "12"
    },
    "6718": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "SWAP1",
      "path": "12"
    },
    "6719": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6721": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "MUL",
      "path": "12"
    },
    "6722": {
      "fn": "MainStaking.setFee",
      "offset": [4161, 4176],
      "op": "ADD",
      "path": "12"
    },
    "6723": {
      "fn": "MainStaking.setFee",
      "offset": [4142, 4176],
      "op": "SWAP1",
      "path": "12"
    },
    "6724": {
      "fn": "MainStaking.setFee",
      "offset": [4142, 4176],
      "op": "POP",
      "path": "12"
    },
    "6725": {
      "fn": "MainStaking.setFee",
      "offset": [4224, 4229],
      "op": "DUP2",
      "path": "12",
      "statement": 57
    },
    "6726": {
      "fn": "MainStaking.setFee",
      "offset": [4207, 4210],
      "op": "DUP2",
      "path": "12"
    },
    "6727": {
      "fn": "MainStaking.setFee",
      "offset": [4207, 4220],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6729": {
      "fn": "MainStaking.setFee",
      "offset": [4207, 4220],
      "op": "ADD",
      "path": "12"
    },
    "6730": {
      "fn": "MainStaking.setFee",
      "offset": [4207, 4220],
      "op": "SLOAD",
      "path": "12"
    },
    "6731": {
      "fn": "MainStaking.setFee",
      "offset": [4207, 4229],
      "op": "GT",
      "path": "12"
    },
    "6732": {
      "branch": 130,
      "fn": "MainStaking.setFee",
      "offset": [4207, 4229],
      "op": "ISZERO",
      "path": "12"
    },
    "6733": {
      "fn": "MainStaking.setFee",
      "offset": [4207, 4255],
      "op": "DUP1",
      "path": "12"
    },
    "6734": {
      "fn": "MainStaking.setFee",
      "offset": [4207, 4255],
      "op": "ISZERO",
      "path": "12"
    },
    "6735": {
      "fn": "MainStaking.setFee",
      "offset": [4207, 4255],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A59"
    },
    "6738": {
      "branch": 130,
      "fn": "MainStaking.setFee",
      "offset": [4207, 4255],
      "op": "JUMPI",
      "path": "12"
    },
    "6739": {
      "op": "POP"
    },
    "6740": {
      "fn": "MainStaking.setFee",
      "offset": [4242, 4255],
      "op": "DUP1",
      "path": "12"
    },
    "6741": {
      "fn": "MainStaking.setFee",
      "offset": [4242, 4255],
      "op": "SLOAD",
      "path": "12"
    },
    "6742": {
      "fn": "MainStaking.setFee",
      "offset": [4233, 4255],
      "op": "DUP3",
      "path": "12"
    },
    "6743": {
      "fn": "MainStaking.setFee",
      "offset": [4233, 4255],
      "op": "GT",
      "path": "12"
    },
    "6744": {
      "branch": 131,
      "fn": "MainStaking.setFee",
      "offset": [4233, 4255],
      "op": "ISZERO",
      "path": "12"
    },
    "6745": {
      "fn": "MainStaking.setFee",
      "offset": [4207, 4255],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6746": {
      "fn": "MainStaking.setFee",
      "offset": [4186, 4299],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A9A"
    },
    "6749": {
      "branch": 131,
      "fn": "MainStaking.setFee",
      "offset": [4186, 4299],
      "op": "JUMPI",
      "path": "12"
    },
    "6750": {
      "fn": "MainStaking.setFee",
      "offset": [4186, 4299],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6752": {
      "fn": "MainStaking.setFee",
      "offset": [4186, 4299],
      "op": "MLOAD",
      "path": "12"
    },
    "6753": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6757": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6759": {
      "op": "SHL"
    },
    "6760": {
      "fn": "MainStaking.setFee",
      "offset": [4186, 4299],
      "op": "DUP2",
      "path": "12"
    },
    "6761": {
      "fn": "MainStaking.setFee",
      "offset": [4186, 4299],
      "op": "MSTORE",
      "path": "12"
    },
    "6762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6764": {
      "fn": "MainStaking.setFee",
      "offset": [4186, 4299],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6766": {
      "fn": "MainStaking.setFee",
      "offset": [4186, 4299],
      "op": "DUP3",
      "path": "12"
    },
    "6767": {
      "fn": "MainStaking.setFee",
      "offset": [4186, 4299],
      "op": "ADD",
      "path": "12"
    },
    "6768": {
      "op": "MSTORE"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6773": {
      "op": "DUP3"
    },
    "6774": {
      "op": "ADD"
    },
    "6775": {
      "op": "MSTORE"
    },
    "6776": {
      "op": "PUSH18",
      "value": "0x56616C7565206E6F7420696E2072616E6765"
    },
    "6795": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6797": {
      "op": "SHL"
    },
    "6798": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6800": {
      "op": "DUP3"
    },
    "6801": {
      "op": "ADD"
    },
    "6802": {
      "op": "MSTORE"
    },
    "6803": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6805": {
      "op": "ADD"
    },
    "6806": {
      "fn": "MainStaking.setFee",
      "offset": [4186, 4299],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "6809": {
      "op": "JUMP"
    },
    "6810": {
      "fn": "MainStaking.setFee",
      "offset": [4186, 4299],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6811": {
      "offset": [1029, 1033],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7D0"
    },
    "6814": {
      "fn": "MainStaking.setFee",
      "offset": [4336, 4339],
      "op": "DUP2",
      "path": "12",
      "statement": 58
    },
    "6815": {
      "fn": "MainStaking.setFee",
      "offset": [4336, 4345],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "6817": {
      "fn": "MainStaking.setFee",
      "offset": [4336, 4345],
      "op": "ADD",
      "path": "12"
    },
    "6818": {
      "fn": "MainStaking.setFee",
      "offset": [4336, 4345],
      "op": "SLOAD",
      "path": "12"
    },
    "6819": {
      "fn": "MainStaking.setFee",
      "offset": [4328, 4333],
      "op": "DUP4",
      "path": "12"
    },
    "6820": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4325],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6D"
    },
    "6822": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4325],
      "op": "SLOAD",
      "path": "12"
    },
    "6823": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4333],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1AB0"
    },
    "6826": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4333],
      "op": "SWAP2",
      "path": "12"
    },
    "6827": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4333],
      "op": "SWAP1",
      "path": "12"
    },
    "6828": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4333],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3930"
    },
    "6831": {
      "fn": "MainStaking.setFee",
      "jump": "i",
      "offset": [4317, 4333],
      "op": "JUMP",
      "path": "12"
    },
    "6832": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4333],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6833": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4345],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1ABA"
    },
    "6836": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4345],
      "op": "SWAP2",
      "path": "12"
    },
    "6837": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4345],
      "op": "SWAP1",
      "path": "12"
    },
    "6838": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4345],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3989"
    },
    "6841": {
      "fn": "MainStaking.setFee",
      "jump": "i",
      "offset": [4317, 4345],
      "op": "JUMP",
      "path": "12"
    },
    "6842": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4345],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6843": {
      "fn": "MainStaking.setFee",
      "offset": [4317, 4356],
      "op": "GT",
      "path": "12"
    },
    "6844": {
      "branch": 132,
      "fn": "MainStaking.setFee",
      "offset": [4317, 4356],
      "op": "ISZERO",
      "path": "12"
    },
    "6845": {
      "fn": "MainStaking.setFee",
      "offset": [4309, 4376],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1AFA"
    },
    "6848": {
      "branch": 132,
      "fn": "MainStaking.setFee",
      "offset": [4309, 4376],
      "op": "JUMPI",
      "path": "12"
    },
    "6849": {
      "fn": "MainStaking.setFee",
      "offset": [4309, 4376],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6851": {
      "fn": "MainStaking.setFee",
      "offset": [4309, 4376],
      "op": "MLOAD",
      "path": "12"
    },
    "6852": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6856": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6858": {
      "op": "SHL"
    },
    "6859": {
      "fn": "MainStaking.setFee",
      "offset": [4309, 4376],
      "op": "DUP2",
      "path": "12"
    },
    "6860": {
      "fn": "MainStaking.setFee",
      "offset": [4309, 4376],
      "op": "MSTORE",
      "path": "12"
    },
    "6861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6863": {
      "fn": "MainStaking.setFee",
      "offset": [4309, 4376],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6865": {
      "fn": "MainStaking.setFee",
      "offset": [4309, 4376],
      "op": "DUP3",
      "path": "12"
    },
    "6866": {
      "fn": "MainStaking.setFee",
      "offset": [4309, 4376],
      "op": "ADD",
      "path": "12"
    },
    "6867": {
      "op": "MSTORE"
    },
    "6868": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6872": {
      "op": "DUP3"
    },
    "6873": {
      "op": "ADD"
    },
    "6874": {
      "op": "MSTORE"
    },
    "6875": {
      "op": "PUSH15",
      "value": "0x13585E08199959481C995858DA1959"
    },
    "6891": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "6893": {
      "op": "SHL"
    },
    "6894": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6896": {
      "op": "DUP3"
    },
    "6897": {
      "op": "ADD"
    },
    "6898": {
      "op": "MSTORE"
    },
    "6899": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6901": {
      "op": "ADD"
    },
    "6902": {
      "fn": "MainStaking.setFee",
      "offset": [4309, 4376],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "6905": {
      "op": "JUMP"
    },
    "6906": {
      "fn": "MainStaking.setFee",
      "offset": [4309, 4376],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6907": {
      "fn": "MainStaking.setFee",
      "offset": [4420, 4425],
      "op": "DUP2",
      "path": "12",
      "statement": 59
    },
    "6908": {
      "fn": "MainStaking.setFee",
      "offset": [4408, 4411],
      "op": "DUP2",
      "path": "12"
    },
    "6909": {
      "fn": "MainStaking.setFee",
      "offset": [4408, 4417],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "6911": {
      "fn": "MainStaking.setFee",
      "offset": [4408, 4417],
      "op": "ADD",
      "path": "12"
    },
    "6912": {
      "fn": "MainStaking.setFee",
      "offset": [4408, 4417],
      "op": "SLOAD",
      "path": "12"
    },
    "6913": {
      "fn": "MainStaking.setFee",
      "offset": [4397, 4405],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6D"
    },
    "6915": {
      "fn": "MainStaking.setFee",
      "offset": [4397, 4405],
      "op": "SLOAD",
      "path": "12"
    },
    "6916": {
      "fn": "MainStaking.setFee",
      "offset": [4397, 4417],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B0D"
    },
    "6919": {
      "fn": "MainStaking.setFee",
      "offset": [4397, 4417],
      "op": "SWAP2",
      "path": "12"
    },
    "6920": {
      "fn": "MainStaking.setFee",
      "offset": [4397, 4417],
      "op": "SWAP1",
      "path": "12"
    },
    "6921": {
      "fn": "MainStaking.setFee",
      "offset": [4397, 4417],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3989"
    },
    "6924": {
      "fn": "MainStaking.setFee",
      "jump": "i",
      "offset": [4397, 4417],
      "op": "JUMP",
      "path": "12"
    },
    "6925": {
      "fn": "MainStaking.setFee",
      "offset": [4397, 4417],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6926": {
      "fn": "MainStaking.setFee",
      "offset": [4397, 4425],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B17"
    },
    "6929": {
      "fn": "MainStaking.setFee",
      "offset": [4397, 4425],
      "op": "SWAP2",
      "path": "12"
    },
    "6930": {
      "fn": "MainStaking.setFee",
      "offset": [4397, 4425],
      "op": "SWAP1",
      "path": "12"
    },
    "6931": {
      "fn": "MainStaking.setFee",
      "offset": [4397, 4425],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3930"
    },
    "6934": {
      "fn": "MainStaking.setFee",
      "jump": "i",
      "offset": [4397, 4425],
      "op": "JUMP",
      "path": "12"
    },
    "6935": {
      "fn": "MainStaking.setFee",
      "offset": [4397, 4425],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6936": {
      "fn": "MainStaking.setFee",
      "offset": [4386, 4394],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6D"
    },
    "6938": {
      "fn": "MainStaking.setFee",
      "offset": [4386, 4425],
      "op": "SSTORE",
      "path": "12"
    },
    "6939": {
      "fn": "MainStaking.setFee",
      "offset": [4435, 4444],
      "op": "PUSH1",
      "path": "12",
      "statement": 60,
      "value": "0x2"
    },
    "6941": {
      "fn": "MainStaking.setFee",
      "offset": [4435, 4444],
      "op": "DUP2",
      "path": "12"
    },
    "6942": {
      "fn": "MainStaking.setFee",
      "offset": [4435, 4444],
      "op": "ADD",
      "path": "12"
    },
    "6943": {
      "fn": "MainStaking.setFee",
      "offset": [4435, 4452],
      "op": "DUP3",
      "path": "12"
    },
    "6944": {
      "fn": "MainStaking.setFee",
      "offset": [4435, 4452],
      "op": "SWAP1",
      "path": "12"
    },
    "6945": {
      "fn": "MainStaking.setFee",
      "offset": [4435, 4452],
      "op": "SSTORE",
      "path": "12"
    },
    "6946": {
      "fn": "MainStaking.setFee",
      "offset": [4474, 4480],
      "op": "PUSH1",
      "path": "12",
      "statement": 61,
      "value": "0x3"
    },
    "6948": {
      "fn": "MainStaking.setFee",
      "offset": [4474, 4480],
      "op": "DUP2",
      "path": "12"
    },
    "6949": {
      "fn": "MainStaking.setFee",
      "offset": [4474, 4480],
      "op": "ADD",
      "path": "12"
    },
    "6950": {
      "fn": "MainStaking.setFee",
      "offset": [4474, 4480],
      "op": "SLOAD",
      "path": "12"
    },
    "6951": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6953": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "MLOAD",
      "path": "12"
    },
    "6954": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "PUSH32",
      "path": "12",
      "value": "0x1FE2943BAEE27F47ADD82886C2200F910C749C461C9B63C5FE83901A53BDB49"
    },
    "6987": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "SWAP2",
      "path": "12"
    },
    "6988": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B62"
    },
    "6991": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "SWAP2",
      "path": "12"
    },
    "6992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6998": {
      "op": "SHL"
    },
    "6999": {
      "op": "SUB"
    },
    "7000": {
      "fn": "MainStaking.setFee",
      "offset": [4474, 4480],
      "op": "SWAP1",
      "path": "12"
    },
    "7001": {
      "fn": "MainStaking.setFee",
      "offset": [4474, 4480],
      "op": "SWAP2",
      "path": "12"
    },
    "7002": {
      "fn": "MainStaking.setFee",
      "offset": [4474, 4480],
      "op": "AND",
      "path": "12"
    },
    "7003": {
      "fn": "MainStaking.setFee",
      "offset": [4474, 4480],
      "op": "SWAP1",
      "path": "12"
    },
    "7004": {
      "fn": "MainStaking.setFee",
      "offset": [4447, 4452],
      "op": "DUP6",
      "path": "12"
    },
    "7005": {
      "fn": "MainStaking.setFee",
      "offset": [4447, 4452],
      "op": "SWAP1",
      "path": "12"
    },
    "7006": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "7009": {
      "fn": "MainStaking.setFee",
      "jump": "i",
      "offset": [4467, 4488],
      "op": "JUMP",
      "path": "12"
    },
    "7010": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7011": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7013": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "MLOAD",
      "path": "12"
    },
    "7014": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "DUP1",
      "path": "12"
    },
    "7015": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "SWAP2",
      "path": "12"
    },
    "7016": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "SUB",
      "path": "12"
    },
    "7017": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "SWAP1",
      "path": "12"
    },
    "7018": {
      "fn": "MainStaking.setFee",
      "offset": [4467, 4488],
      "op": "LOG1",
      "path": "12"
    },
    "7019": {
      "fn": "MainStaking.setFee",
      "offset": [4132, 4495],
      "op": "POP",
      "path": "12"
    },
    "7020": {
      "fn": "MainStaking.setFee",
      "offset": [4067, 4495],
      "op": "POP",
      "path": "12"
    },
    "7021": {
      "fn": "MainStaking.setFee",
      "offset": [4067, 4495],
      "op": "POP",
      "path": "12"
    },
    "7022": {
      "fn": "MainStaking.setFee",
      "jump": "o",
      "offset": [4067, 4495],
      "op": "JUMP",
      "path": "12"
    },
    "7023": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4704, 5042],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7024": {
      "offset": [1490, 1496],
      "op": "PUSH1",
      "path": "20",
      "value": "0x33"
    },
    "7026": {
      "fn": "MainStaking.setCallerFee",
      "offset": [1490, 1496],
      "op": "SLOAD",
      "path": "20"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7033": {
      "op": "SHL"
    },
    "7034": {
      "op": "SUB"
    },
    "7035": {
      "offset": [1490, 1496],
      "op": "AND",
      "path": "20"
    },
    "7036": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [907, 917],
      "op": "CALLER",
      "path": "18"
    },
    "7037": {
      "offset": [1490, 1512],
      "op": "EQ",
      "path": "20"
    },
    "7038": {
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B99"
    },
    "7041": {
      "offset": [1482, 1549],
      "op": "JUMPI",
      "path": "20"
    },
    "7042": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7044": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MLOAD",
      "path": "20"
    },
    "7045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7051": {
      "op": "SHL"
    },
    "7052": {
      "offset": [1482, 1549],
      "op": "DUP2",
      "path": "20"
    },
    "7053": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MSTORE",
      "path": "20"
    },
    "7054": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7056": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "ADD",
      "path": "20"
    },
    "7057": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "7060": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "SWAP1",
      "path": "20"
    },
    "7061": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38B0"
    },
    "7064": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [1482, 1549],
      "op": "JUMP",
      "path": "20"
    },
    "7065": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7066": {
      "offset": [1111, 1114],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F4"
    },
    "7069": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4778, 4783],
      "op": "DUP2",
      "path": "12",
      "statement": 62
    },
    "7070": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4778, 4801],
      "op": "GT",
      "path": "12"
    },
    "7071": {
      "branch": 133,
      "fn": "MainStaking.setCallerFee",
      "offset": [4778, 4801],
      "op": "ISZERO",
      "path": "12"
    },
    "7072": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4770, 4820],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BDC"
    },
    "7075": {
      "branch": 133,
      "fn": "MainStaking.setCallerFee",
      "offset": [4770, 4820],
      "op": "JUMPI",
      "path": "12"
    },
    "7076": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4770, 4820],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7078": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4770, 4820],
      "op": "MLOAD",
      "path": "12"
    },
    "7079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7085": {
      "op": "SHL"
    },
    "7086": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4770, 4820],
      "op": "DUP2",
      "path": "12"
    },
    "7087": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4770, 4820],
      "op": "MSTORE",
      "path": "12"
    },
    "7088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7090": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4770, 4820],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7092": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4770, 4820],
      "op": "DUP3",
      "path": "12"
    },
    "7093": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4770, 4820],
      "op": "ADD",
      "path": "12"
    },
    "7094": {
      "op": "MSTORE"
    },
    "7095": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7099": {
      "op": "DUP3"
    },
    "7100": {
      "op": "ADD"
    },
    "7101": {
      "op": "MSTORE"
    },
    "7102": {
      "op": "PUSH14",
      "value": "0xACC2D8EACA40E8DEDE40D0D2CED"
    },
    "7117": {
      "op": "PUSH1",
      "value": "0x93"
    },
    "7119": {
      "op": "SHL"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7122": {
      "op": "DUP3"
    },
    "7123": {
      "op": "ADD"
    },
    "7124": {
      "op": "MSTORE"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7127": {
      "op": "ADD"
    },
    "7128": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4770, 4820],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "7131": {
      "op": "JUMP"
    },
    "7132": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4770, 4820],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7133": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4940, 4950],
      "op": "PUSH1",
      "path": "12",
      "statement": 63,
      "value": "0x6C"
    },
    "7135": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4940, 4950],
      "op": "SLOAD",
      "path": "12"
    },
    "7136": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4932, 4937],
      "op": "DUP2",
      "path": "12"
    },
    "7137": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4921, 4929],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6D"
    },
    "7139": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4921, 4929],
      "op": "SLOAD",
      "path": "12"
    },
    "7140": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4921, 4937],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BED"
    },
    "7143": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4921, 4937],
      "op": "SWAP2",
      "path": "12"
    },
    "7144": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4921, 4937],
      "op": "SWAP1",
      "path": "12"
    },
    "7145": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4921, 4937],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3930"
    },
    "7148": {
      "fn": "MainStaking.setCallerFee",
      "jump": "i",
      "offset": [4921, 4937],
      "op": "JUMP",
      "path": "12"
    },
    "7149": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4921, 4937],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7150": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4921, 4950],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BF7"
    },
    "7153": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4921, 4950],
      "op": "SWAP2",
      "path": "12"
    },
    "7154": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4921, 4950],
      "op": "SWAP1",
      "path": "12"
    },
    "7155": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4921, 4950],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3989"
    },
    "7158": {
      "fn": "MainStaking.setCallerFee",
      "jump": "i",
      "offset": [4921, 4950],
      "op": "JUMP",
      "path": "12"
    },
    "7159": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4921, 4950],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7160": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4910, 4918],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6D"
    },
    "7162": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4910, 4950],
      "op": "DUP2",
      "path": "12"
    },
    "7163": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4910, 4950],
      "op": "SWAP1",
      "path": "12"
    },
    "7164": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4910, 4950],
      "op": "SSTORE",
      "path": "12"
    },
    "7165": {
      "offset": [1029, 1033],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7D0"
    },
    "7168": {
      "op": "LT"
    },
    "7169": {
      "branch": 134,
      "fn": "MainStaking.setCallerFee",
      "offset": [4968, 4987],
      "op": "ISZERO",
      "path": "12",
      "statement": 64
    },
    "7170": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4960, 5007],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C3F"
    },
    "7173": {
      "branch": 134,
      "fn": "MainStaking.setCallerFee",
      "offset": [4960, 5007],
      "op": "JUMPI",
      "path": "12"
    },
    "7174": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4960, 5007],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7176": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4960, 5007],
      "op": "MLOAD",
      "path": "12"
    },
    "7177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7183": {
      "op": "SHL"
    },
    "7184": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4960, 5007],
      "op": "DUP2",
      "path": "12"
    },
    "7185": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4960, 5007],
      "op": "MSTORE",
      "path": "12"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7188": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4960, 5007],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7190": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4960, 5007],
      "op": "DUP3",
      "path": "12"
    },
    "7191": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4960, 5007],
      "op": "ADD",
      "path": "12"
    },
    "7192": {
      "op": "MSTORE"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "7195": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7197": {
      "op": "DUP3"
    },
    "7198": {
      "op": "ADD"
    },
    "7199": {
      "op": "MSTORE"
    },
    "7200": {
      "op": "PUSH15",
      "value": "0x13505608119959481C995858DA1959"
    },
    "7216": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "7218": {
      "op": "SHL"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7221": {
      "op": "DUP3"
    },
    "7222": {
      "op": "ADD"
    },
    "7223": {
      "op": "MSTORE"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7226": {
      "op": "ADD"
    },
    "7227": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4960, 5007],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "7230": {
      "op": "JUMP"
    },
    "7231": {
      "fn": "MainStaking.setCallerFee",
      "offset": [4960, 5007],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7232": {
      "fn": "MainStaking.setCallerFee",
      "offset": [5017, 5027],
      "op": "PUSH1",
      "path": "12",
      "statement": 65,
      "value": "0x6C"
    },
    "7234": {
      "fn": "MainStaking.setCallerFee",
      "offset": [5017, 5035],
      "op": "SSTORE",
      "path": "12"
    },
    "7235": {
      "fn": "MainStaking.setCallerFee",
      "jump": "o",
      "offset": [4704, 5042],
      "op": "JUMP",
      "path": "12"
    },
    "7236": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3278, 3382],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7237": {
      "offset": [1490, 1496],
      "op": "PUSH1",
      "path": "20",
      "value": "0x33"
    },
    "7239": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [1490, 1496],
      "op": "SLOAD",
      "path": "20"
    },
    "7240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7246": {
      "op": "SHL"
    },
    "7247": {
      "op": "SUB"
    },
    "7248": {
      "offset": [1490, 1496],
      "op": "AND",
      "path": "20"
    },
    "7249": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [907, 917],
      "op": "CALLER",
      "path": "18"
    },
    "7250": {
      "offset": [1490, 1512],
      "op": "EQ",
      "path": "20"
    },
    "7251": {
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C6E"
    },
    "7254": {
      "offset": [1482, 1549],
      "op": "JUMPI",
      "path": "20"
    },
    "7255": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7257": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MLOAD",
      "path": "20"
    },
    "7258": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7262": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7264": {
      "op": "SHL"
    },
    "7265": {
      "offset": [1482, 1549],
      "op": "DUP2",
      "path": "20"
    },
    "7266": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MSTORE",
      "path": "20"
    },
    "7267": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7269": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "ADD",
      "path": "20"
    },
    "7270": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "7273": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "SWAP1",
      "path": "20"
    },
    "7274": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38B0"
    },
    "7277": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [1482, 1549],
      "op": "JUMP",
      "path": "20"
    },
    "7278": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7279": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3361],
      "op": "PUSH1",
      "path": "12",
      "statement": 66,
      "value": "0x6B"
    },
    "7281": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "DUP1",
      "path": "12"
    },
    "7282": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "SLOAD",
      "path": "12"
    },
    "7283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7289": {
      "op": "SHL"
    },
    "7290": {
      "op": "SUB"
    },
    "7291": {
      "op": "NOT"
    },
    "7292": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "AND",
      "path": "12"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7299": {
      "op": "SHL"
    },
    "7300": {
      "op": "SUB"
    },
    "7301": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "SWAP3",
      "path": "12"
    },
    "7302": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "SWAP1",
      "path": "12"
    },
    "7303": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "SWAP3",
      "path": "12"
    },
    "7304": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "AND",
      "path": "12"
    },
    "7305": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "SWAP2",
      "path": "12"
    },
    "7306": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "SWAP1",
      "path": "12"
    },
    "7307": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "SWAP2",
      "path": "12"
    },
    "7308": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "OR",
      "path": "12"
    },
    "7309": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "SWAP1",
      "path": "12"
    },
    "7310": {
      "fn": "MainStaking.setComputeAPR",
      "offset": [3351, 3375],
      "op": "SSTORE",
      "path": "12"
    },
    "7311": {
      "fn": "MainStaking.setComputeAPR",
      "jump": "o",
      "offset": [3278, 3382],
      "op": "JUMP",
      "path": "12"
    },
    "7312": {
      "fn": "MainStaking.setXPTP",
      "offset": [3135, 3272],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7313": {
      "offset": [1490, 1496],
      "op": "PUSH1",
      "path": "20",
      "value": "0x33"
    },
    "7315": {
      "fn": "MainStaking.setXPTP",
      "offset": [1490, 1496],
      "op": "SLOAD",
      "path": "20"
    },
    "7316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7322": {
      "op": "SHL"
    },
    "7323": {
      "op": "SUB"
    },
    "7324": {
      "offset": [1490, 1496],
      "op": "AND",
      "path": "20"
    },
    "7325": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [907, 917],
      "op": "CALLER",
      "path": "18"
    },
    "7326": {
      "offset": [1490, 1512],
      "op": "EQ",
      "path": "20"
    },
    "7327": {
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CBA"
    },
    "7330": {
      "offset": [1482, 1549],
      "op": "JUMPI",
      "path": "20"
    },
    "7331": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7333": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MLOAD",
      "path": "20"
    },
    "7334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7340": {
      "op": "SHL"
    },
    "7341": {
      "offset": [1482, 1549],
      "op": "DUP2",
      "path": "20"
    },
    "7342": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MSTORE",
      "path": "20"
    },
    "7343": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7345": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "ADD",
      "path": "20"
    },
    "7346": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "7349": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "SWAP1",
      "path": "20"
    },
    "7350": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38B0"
    },
    "7353": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [1482, 1549],
      "op": "JUMP",
      "path": "20"
    },
    "7354": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7355": {
      "fn": "MainStaking.setXPTP",
      "offset": [3204, 3208],
      "op": "PUSH1",
      "path": "12",
      "statement": 67,
      "value": "0x67"
    },
    "7357": {
      "fn": "MainStaking.setXPTP",
      "offset": [3204, 3208],
      "op": "SLOAD",
      "path": "12"
    },
    "7358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7364": {
      "op": "SHL"
    },
    "7365": {
      "op": "SUB"
    },
    "7366": {
      "fn": "MainStaking.setXPTP",
      "offset": [3204, 3208],
      "op": "AND",
      "path": "12"
    },
    "7367": {
      "branch": 135,
      "fn": "MainStaking.setXPTP",
      "offset": [3204, 3222],
      "op": "ISZERO",
      "path": "12"
    },
    "7368": {
      "fn": "MainStaking.setXPTP",
      "offset": [3196, 3243],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D06"
    },
    "7371": {
      "branch": 135,
      "fn": "MainStaking.setXPTP",
      "offset": [3196, 3243],
      "op": "JUMPI",
      "path": "12"
    },
    "7372": {
      "fn": "MainStaking.setXPTP",
      "offset": [3196, 3243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7374": {
      "fn": "MainStaking.setXPTP",
      "offset": [3196, 3243],
      "op": "MLOAD",
      "path": "12"
    },
    "7375": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7379": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7381": {
      "op": "SHL"
    },
    "7382": {
      "fn": "MainStaking.setXPTP",
      "offset": [3196, 3243],
      "op": "DUP2",
      "path": "12"
    },
    "7383": {
      "fn": "MainStaking.setXPTP",
      "offset": [3196, 3243],
      "op": "MSTORE",
      "path": "12"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7386": {
      "fn": "MainStaking.setXPTP",
      "offset": [3196, 3243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7388": {
      "fn": "MainStaking.setXPTP",
      "offset": [3196, 3243],
      "op": "DUP3",
      "path": "12"
    },
    "7389": {
      "fn": "MainStaking.setXPTP",
      "offset": [3196, 3243],
      "op": "ADD",
      "path": "12"
    },
    "7390": {
      "op": "MSTORE"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7395": {
      "op": "DUP3"
    },
    "7396": {
      "op": "ADD"
    },
    "7397": {
      "op": "MSTORE"
    },
    "7398": {
      "op": "PUSH16",
      "value": "0x1E14151408185B1C9958591E481CD95D"
    },
    "7415": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "7417": {
      "op": "SHL"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7420": {
      "op": "DUP3"
    },
    "7421": {
      "op": "ADD"
    },
    "7422": {
      "op": "MSTORE"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7425": {
      "op": "ADD"
    },
    "7426": {
      "fn": "MainStaking.setXPTP",
      "offset": [3196, 3243],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "7429": {
      "op": "JUMP"
    },
    "7430": {
      "fn": "MainStaking.setXPTP",
      "offset": [3196, 3243],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7431": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3257],
      "op": "PUSH1",
      "path": "12",
      "statement": 68,
      "value": "0x67"
    },
    "7433": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "DUP1",
      "path": "12"
    },
    "7434": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "SLOAD",
      "path": "12"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7441": {
      "op": "SHL"
    },
    "7442": {
      "op": "SUB"
    },
    "7443": {
      "op": "NOT"
    },
    "7444": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "AND",
      "path": "12"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7451": {
      "op": "SHL"
    },
    "7452": {
      "op": "SUB"
    },
    "7453": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "SWAP3",
      "path": "12"
    },
    "7454": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "SWAP1",
      "path": "12"
    },
    "7455": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "SWAP3",
      "path": "12"
    },
    "7456": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "AND",
      "path": "12"
    },
    "7457": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "SWAP2",
      "path": "12"
    },
    "7458": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "SWAP1",
      "path": "12"
    },
    "7459": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "SWAP2",
      "path": "12"
    },
    "7460": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "OR",
      "path": "12"
    },
    "7461": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "SWAP1",
      "path": "12"
    },
    "7462": {
      "fn": "MainStaking.setXPTP",
      "offset": [3253, 3265],
      "op": "SSTORE",
      "path": "12"
    },
    "7463": {
      "fn": "MainStaking.setXPTP",
      "jump": "o",
      "offset": [3135, 3272],
      "op": "JUMP",
      "path": "12"
    },
    "7464": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [1909, 2010],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7465": {
      "offset": [1490, 1496],
      "op": "PUSH1",
      "path": "20",
      "value": "0x33"
    },
    "7467": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [1490, 1496],
      "op": "SLOAD",
      "path": "20"
    },
    "7468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7474": {
      "op": "SHL"
    },
    "7475": {
      "op": "SUB"
    },
    "7476": {
      "offset": [1490, 1496],
      "op": "AND",
      "path": "20"
    },
    "7477": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [907, 917],
      "op": "CALLER",
      "path": "18"
    },
    "7478": {
      "offset": [1490, 1512],
      "op": "EQ",
      "path": "20"
    },
    "7479": {
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D52"
    },
    "7482": {
      "offset": [1482, 1549],
      "op": "JUMPI",
      "path": "20"
    },
    "7483": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7485": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MLOAD",
      "path": "20"
    },
    "7486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7492": {
      "op": "SHL"
    },
    "7493": {
      "offset": [1482, 1549],
      "op": "DUP2",
      "path": "20"
    },
    "7494": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MSTORE",
      "path": "20"
    },
    "7495": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7497": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "ADD",
      "path": "20"
    },
    "7498": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "7501": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "SWAP1",
      "path": "20"
    },
    "7502": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38B0"
    },
    "7505": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [1482, 1549],
      "op": "JUMP",
      "path": "20"
    },
    "7506": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7507": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [1973, 2003],
      "op": "PUSH2",
      "path": "20",
      "statement": 69,
      "value": "0xC95"
    },
    "7510": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [2000, 2001],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7512": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [1973, 1991],
      "op": "PUSH2",
      "path": "20",
      "value": "0x310B"
    },
    "7515": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "i",
      "offset": [1973, 2003],
      "op": "JUMP",
      "path": "20"
    },
    "7516": {
      "fn": "MainStaking.getVePtp",
      "offset": [12027, 12147],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7517": {
      "fn": "MainStaking.getVePtp",
      "offset": [12103, 12114],
      "op": "PUSH1",
      "path": "12",
      "statement": 70,
      "value": "0x65"
    },
    "7519": {
      "fn": "MainStaking.getVePtp",
      "offset": [12103, 12114],
      "op": "SLOAD",
      "path": "12"
    },
    "7520": {
      "fn": "MainStaking.getVePtp",
      "offset": [12096, 12140],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7522": {
      "fn": "MainStaking.getVePtp",
      "offset": [12096, 12140],
      "op": "MLOAD",
      "path": "12"
    },
    "7523": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7528": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7530": {
      "op": "SHL"
    },
    "7531": {
      "fn": "MainStaking.getVePtp",
      "offset": [12096, 12140],
      "op": "DUP2",
      "path": "12"
    },
    "7532": {
      "fn": "MainStaking.getVePtp",
      "offset": [12096, 12140],
      "op": "MSTORE",
      "path": "12"
    },
    "7533": {
      "fn": "MainStaking.getVePtp",
      "offset": [12134, 12138],
      "op": "ADDRESS",
      "path": "12"
    },
    "7534": {
      "fn": "MainStaking.getVePtp",
      "offset": [12096, 12140],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7536": {
      "fn": "MainStaking.getVePtp",
      "offset": [12096, 12140],
      "op": "DUP3",
      "path": "12"
    },
    "7537": {
      "fn": "MainStaking.getVePtp",
      "offset": [12096, 12140],
      "op": "ADD",
      "path": "12"
    },
    "7538": {
      "op": "MSTORE"
    },
    "7539": {
      "fn": "MainStaking.getVePtp",
      "offset": [12070, 12077],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7541": {
      "fn": "MainStaking.getVePtp",
      "offset": [12070, 12077],
      "op": "SWAP2",
      "path": "12"
    },
    "7542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7548": {
      "op": "SHL"
    },
    "7549": {
      "op": "SUB"
    },
    "7550": {
      "fn": "MainStaking.getVePtp",
      "offset": [12103, 12114],
      "op": "AND",
      "path": "12"
    },
    "7551": {
      "fn": "MainStaking.getVePtp",
      "offset": [12103, 12114],
      "op": "SWAP1",
      "path": "12"
    },
    "7552": {
      "fn": "MainStaking.getVePtp",
      "offset": [12096, 12125],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "7557": {
      "fn": "MainStaking.getVePtp",
      "offset": [12096, 12125],
      "op": "SWAP1",
      "path": "12"
    },
    "7558": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7560": {
      "op": "ADD"
    },
    "7561": {
      "fn": "MainStaking.getVePtp",
      "offset": [12096, 12140],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDEB"
    },
    "7564": {
      "op": "JUMP"
    },
    "7565": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7566": {
      "offset": [1490, 1496],
      "op": "PUSH1",
      "path": "20",
      "value": "0x33"
    },
    "7568": {
      "fn": "MainStaking.addFee",
      "offset": [1490, 1496],
      "op": "SLOAD",
      "path": "20"
    },
    "7569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7575": {
      "op": "SHL"
    },
    "7576": {
      "op": "SUB"
    },
    "7577": {
      "offset": [1490, 1496],
      "op": "AND",
      "path": "20"
    },
    "7578": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [907, 917],
      "op": "CALLER",
      "path": "18"
    },
    "7579": {
      "offset": [1490, 1512],
      "op": "EQ",
      "path": "20"
    },
    "7580": {
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DB7"
    },
    "7583": {
      "offset": [1482, 1549],
      "op": "JUMPI",
      "path": "20"
    },
    "7584": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7586": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MLOAD",
      "path": "20"
    },
    "7587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7593": {
      "op": "SHL"
    },
    "7594": {
      "offset": [1482, 1549],
      "op": "DUP2",
      "path": "20"
    },
    "7595": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MSTORE",
      "path": "20"
    },
    "7596": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7598": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "ADD",
      "path": "20"
    },
    "7599": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "7602": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "SWAP1",
      "path": "20"
    },
    "7603": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38B0"
    },
    "7606": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [1482, 1549],
      "op": "JUMP",
      "path": "20"
    },
    "7607": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7608": {
      "offset": [1029, 1033],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7D0"
    },
    "7611": {
      "fn": "MainStaking.addFee",
      "offset": [3587, 3592],
      "op": "DUP5",
      "path": "12",
      "statement": 71
    },
    "7612": {
      "fn": "MainStaking.addFee",
      "offset": [3576, 3584],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6D"
    },
    "7614": {
      "fn": "MainStaking.addFee",
      "offset": [3576, 3584],
      "op": "SLOAD",
      "path": "12"
    },
    "7615": {
      "fn": "MainStaking.addFee",
      "offset": [3576, 3592],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1DC8"
    },
    "7618": {
      "fn": "MainStaking.addFee",
      "offset": [3576, 3592],
      "op": "SWAP2",
      "path": "12"
    },
    "7619": {
      "fn": "MainStaking.addFee",
      "offset": [3576, 3592],
      "op": "SWAP1",
      "path": "12"
    },
    "7620": {
      "fn": "MainStaking.addFee",
      "offset": [3576, 3592],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3930"
    },
    "7623": {
      "fn": "MainStaking.addFee",
      "jump": "i",
      "offset": [3576, 3592],
      "op": "JUMP",
      "path": "12"
    },
    "7624": {
      "fn": "MainStaking.addFee",
      "offset": [3576, 3592],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7625": {
      "fn": "MainStaking.addFee",
      "offset": [3576, 3603],
      "op": "GT",
      "path": "12"
    },
    "7626": {
      "branch": 136,
      "fn": "MainStaking.addFee",
      "offset": [3576, 3603],
      "op": "ISZERO",
      "path": "12"
    },
    "7627": {
      "fn": "MainStaking.addFee",
      "offset": [3568, 3623],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E08"
    },
    "7630": {
      "branch": 136,
      "fn": "MainStaking.addFee",
      "offset": [3568, 3623],
      "op": "JUMPI",
      "path": "12"
    },
    "7631": {
      "fn": "MainStaking.addFee",
      "offset": [3568, 3623],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7633": {
      "fn": "MainStaking.addFee",
      "offset": [3568, 3623],
      "op": "MLOAD",
      "path": "12"
    },
    "7634": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7638": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7640": {
      "op": "SHL"
    },
    "7641": {
      "fn": "MainStaking.addFee",
      "offset": [3568, 3623],
      "op": "DUP2",
      "path": "12"
    },
    "7642": {
      "fn": "MainStaking.addFee",
      "offset": [3568, 3623],
      "op": "MSTORE",
      "path": "12"
    },
    "7643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7645": {
      "fn": "MainStaking.addFee",
      "offset": [3568, 3623],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7647": {
      "fn": "MainStaking.addFee",
      "offset": [3568, 3623],
      "op": "DUP3",
      "path": "12"
    },
    "7648": {
      "fn": "MainStaking.addFee",
      "offset": [3568, 3623],
      "op": "ADD",
      "path": "12"
    },
    "7649": {
      "op": "MSTORE"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "7652": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7654": {
      "op": "DUP3"
    },
    "7655": {
      "op": "ADD"
    },
    "7656": {
      "op": "MSTORE"
    },
    "7657": {
      "op": "PUSH15",
      "value": "0x13585E08199959481C995858DA1959"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "7675": {
      "op": "SHL"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7678": {
      "op": "DUP3"
    },
    "7679": {
      "op": "ADD"
    },
    "7680": {
      "op": "MSTORE"
    },
    "7681": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7683": {
      "op": "ADD"
    },
    "7684": {
      "fn": "MainStaking.addFee",
      "offset": [3568, 3623],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "7687": {
      "op": "JUMP"
    },
    "7688": {
      "fn": "MainStaking.addFee",
      "offset": [3568, 3623],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7689": {
      "fn": "MainStaking.addFee",
      "offset": [3648, 3653],
      "op": "DUP4",
      "path": "12",
      "statement": 72
    },
    "7690": {
      "fn": "MainStaking.addFee",
      "offset": [3641, 3644],
      "op": "DUP6",
      "path": "12"
    },
    "7691": {
      "fn": "MainStaking.addFee",
      "offset": [3641, 3653],
      "op": "GT",
      "path": "12"
    },
    "7692": {
      "branch": 137,
      "fn": "MainStaking.addFee",
      "offset": [3641, 3653],
      "op": "ISZERO",
      "path": "12"
    },
    "7693": {
      "fn": "MainStaking.addFee",
      "offset": [3641, 3669],
      "op": "DUP1",
      "path": "12"
    },
    "7694": {
      "fn": "MainStaking.addFee",
      "offset": [3641, 3669],
      "op": "ISZERO",
      "path": "12"
    },
    "7695": {
      "fn": "MainStaking.addFee",
      "offset": [3641, 3669],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E18"
    },
    "7698": {
      "branch": 137,
      "fn": "MainStaking.addFee",
      "offset": [3641, 3669],
      "op": "JUMPI",
      "path": "12"
    },
    "7699": {
      "fn": "MainStaking.addFee",
      "offset": [3641, 3669],
      "op": "POP",
      "path": "12"
    },
    "7700": {
      "fn": "MainStaking.addFee",
      "offset": [3666, 3669],
      "op": "DUP6",
      "path": "12"
    },
    "7701": {
      "fn": "MainStaking.addFee",
      "offset": [3657, 3662],
      "op": "DUP5",
      "path": "12"
    },
    "7702": {
      "fn": "MainStaking.addFee",
      "offset": [3657, 3669],
      "op": "GT",
      "path": "12"
    },
    "7703": {
      "branch": 138,
      "fn": "MainStaking.addFee",
      "offset": [3657, 3669],
      "op": "ISZERO",
      "path": "12"
    },
    "7704": {
      "fn": "MainStaking.addFee",
      "offset": [3641, 3669],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7705": {
      "fn": "MainStaking.addFee",
      "offset": [3633, 3692],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E59"
    },
    "7708": {
      "branch": 138,
      "fn": "MainStaking.addFee",
      "offset": [3633, 3692],
      "op": "JUMPI",
      "path": "12"
    },
    "7709": {
      "fn": "MainStaking.addFee",
      "offset": [3633, 3692],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7711": {
      "fn": "MainStaking.addFee",
      "offset": [3633, 3692],
      "op": "MLOAD",
      "path": "12"
    },
    "7712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7718": {
      "op": "SHL"
    },
    "7719": {
      "fn": "MainStaking.addFee",
      "offset": [3633, 3692],
      "op": "DUP2",
      "path": "12"
    },
    "7720": {
      "fn": "MainStaking.addFee",
      "offset": [3633, 3692],
      "op": "MSTORE",
      "path": "12"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7723": {
      "fn": "MainStaking.addFee",
      "offset": [3633, 3692],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7725": {
      "fn": "MainStaking.addFee",
      "offset": [3633, 3692],
      "op": "DUP3",
      "path": "12"
    },
    "7726": {
      "fn": "MainStaking.addFee",
      "offset": [3633, 3692],
      "op": "ADD",
      "path": "12"
    },
    "7727": {
      "op": "MSTORE"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7732": {
      "op": "DUP3"
    },
    "7733": {
      "op": "ADD"
    },
    "7734": {
      "op": "MSTORE"
    },
    "7735": {
      "op": "PUSH18",
      "value": "0x56616C7565206E6F7420696E2072616E6765"
    },
    "7754": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7756": {
      "op": "SHL"
    },
    "7757": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7759": {
      "op": "DUP3"
    },
    "7760": {
      "op": "ADD"
    },
    "7761": {
      "op": "MSTORE"
    },
    "7762": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7764": {
      "op": "ADD"
    },
    "7765": {
      "fn": "MainStaking.addFee",
      "offset": [3633, 3692],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "7768": {
      "op": "JUMP"
    },
    "7769": {
      "fn": "MainStaking.addFee",
      "offset": [3633, 3692],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7770": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "PUSH1",
      "path": "12",
      "statement": 73,
      "value": "0x40"
    },
    "7772": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP1",
      "path": "12"
    },
    "7773": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "MLOAD",
      "path": "12"
    },
    "7774": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "7776": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP2",
      "path": "12"
    },
    "7777": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "ADD",
      "path": "12"
    },
    "7778": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP3",
      "path": "12"
    },
    "7779": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "MSTORE",
      "path": "12"
    },
    "7780": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP8",
      "path": "12"
    },
    "7781": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP2",
      "path": "12"
    },
    "7782": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "MSTORE",
      "path": "12"
    },
    "7783": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7785": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP2",
      "path": "12"
    },
    "7786": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "ADD",
      "path": "12"
    },
    "7787": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP8",
      "path": "12"
    },
    "7788": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP2",
      "path": "12"
    },
    "7789": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "MSTORE",
      "path": "12"
    },
    "7790": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "SWAP2",
      "path": "12"
    },
    "7791": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP2",
      "path": "12"
    },
    "7792": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "ADD",
      "path": "12"
    },
    "7793": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP7",
      "path": "12"
    },
    "7794": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP2",
      "path": "12"
    },
    "7795": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "MSTORE",
      "path": "12"
    },
    "7796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7802": {
      "op": "SHL"
    },
    "7803": {
      "op": "SUB"
    },
    "7804": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP1",
      "path": "12"
    },
    "7805": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP8",
      "path": "12"
    },
    "7806": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "AND",
      "path": "12"
    },
    "7807": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "7809": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP5",
      "path": "12"
    },
    "7810": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "ADD",
      "path": "12"
    },
    "7811": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "SWAP1",
      "path": "12"
    },
    "7812": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP2",
      "path": "12"
    },
    "7813": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "MSTORE",
      "path": "12"
    },
    "7814": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP7",
      "path": "12"
    },
    "7815": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "ISZERO",
      "path": "12"
    },
    "7816": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "ISZERO",
      "path": "12"
    },
    "7817": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "7819": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP6",
      "path": "12"
    },
    "7820": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "ADD",
      "path": "12"
    },
    "7821": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "SWAP1",
      "path": "12"
    },
    "7822": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP2",
      "path": "12"
    },
    "7823": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "MSTORE",
      "path": "12"
    },
    "7824": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP7",
      "path": "12"
    },
    "7825": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "ISZERO",
      "path": "12"
    },
    "7826": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "ISZERO",
      "path": "12"
    },
    "7827": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "7829": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP7",
      "path": "12"
    },
    "7830": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "ADD",
      "path": "12"
    },
    "7831": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "SWAP1",
      "path": "12"
    },
    "7832": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP2",
      "path": "12"
    },
    "7833": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "MSTORE",
      "path": "12"
    },
    "7834": {
      "fn": "MainStaking.addFee",
      "offset": [3948, 3952],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7836": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC0"
    },
    "7838": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP8",
      "path": "12"
    },
    "7839": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "ADD",
      "path": "12"
    },
    "7840": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP2",
      "path": "12"
    },
    "7841": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "DUP2",
      "path": "12"
    },
    "7842": {
      "fn": "MainStaking.addFee",
      "offset": [3729, 3967],
      "op": "MSTORE",
      "path": "12"
    },
    "7843": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3710],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6E"
    },
    "7845": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "DUP1",
      "path": "12"
    },
    "7846": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SLOAD",
      "path": "12"
    },
    "7847": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP3",
      "path": "12"
    },
    "7848": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "DUP4",
      "path": "12"
    },
    "7849": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "ADD",
      "path": "12"
    },
    "7850": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "DUP2",
      "path": "12"
    },
    "7851": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SSTORE",
      "path": "12"
    },
    "7852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7854": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP1",
      "path": "12"
    },
    "7855": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "DUP2",
      "path": "12"
    },
    "7856": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "MSTORE",
      "path": "12"
    },
    "7857": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP8",
      "path": "12"
    },
    "7858": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "MLOAD",
      "path": "12"
    },
    "7859": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7861": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP1",
      "path": "12"
    },
    "7862": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP3",
      "path": "12"
    },
    "7863": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "MUL",
      "path": "12"
    },
    "7864": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "PUSH32",
      "path": "12",
      "value": "0x9930D9FF0DEE0EF5CA2F7710EA66B8F84DD0F5F5351ECFFE72B952CD9DB7142A"
    },
    "7897": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "DUP2",
      "path": "12"
    },
    "7898": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "ADD",
      "path": "12"
    },
    "7899": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP3",
      "path": "12"
    },
    "7900": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP1",
      "path": "12"
    },
    "7901": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP3",
      "path": "12"
    },
    "7902": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SSTORE",
      "path": "12"
    },
    "7903": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP8",
      "path": "12"
    },
    "7904": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "MLOAD",
      "path": "12"
    },
    "7905": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "PUSH32",
      "path": "12",
      "value": "0x9930D9FF0DEE0EF5CA2F7710EA66B8F84DD0F5F5351ECFFE72B952CD9DB7142B"
    },
    "7938": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "DUP3",
      "path": "12"
    },
    "7939": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "ADD",
      "path": "12"
    },
    "7940": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SSTORE",
      "path": "12"
    },
    "7941": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP5",
      "path": "12"
    },
    "7942": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "MLOAD",
      "path": "12"
    },
    "7943": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "PUSH32",
      "path": "12",
      "value": "0x9930D9FF0DEE0EF5CA2F7710EA66B8F84DD0F5F5351ECFFE72B952CD9DB7142C"
    },
    "7976": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "DUP7",
      "path": "12"
    },
    "7977": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "ADD",
      "path": "12"
    },
    "7978": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SSTORE",
      "path": "12"
    },
    "7979": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP2",
      "path": "12"
    },
    "7980": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "MLOAD",
      "path": "12"
    },
    "7981": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "PUSH32",
      "path": "12",
      "value": "0x9930D9FF0DEE0EF5CA2F7710EA66B8F84DD0F5F5351ECFFE72B952CD9DB7142D"
    },
    "8014": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP1",
      "path": "12"
    },
    "8015": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP5",
      "path": "12"
    },
    "8016": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "ADD",
      "path": "12"
    },
    "8017": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "DUP1",
      "path": "12"
    },
    "8018": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SLOAD",
      "path": "12"
    },
    "8019": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP2",
      "path": "12"
    },
    "8020": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "MLOAD",
      "path": "12"
    },
    "8021": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP3",
      "path": "12"
    },
    "8022": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "MLOAD",
      "path": "12"
    },
    "8023": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP7",
      "path": "12"
    },
    "8024": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "MLOAD",
      "path": "12"
    },
    "8025": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "ISZERO",
      "path": "12"
    },
    "8026": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "ISZERO",
      "path": "12"
    },
    "8027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8029": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8031": {
      "op": "SHL"
    },
    "8032": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "MUL",
      "path": "12"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8037": {
      "op": "SHL"
    },
    "8038": {
      "op": "NOT"
    },
    "8039": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP8",
      "path": "12"
    },
    "8040": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "ISZERO",
      "path": "12"
    },
    "8041": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "ISZERO",
      "path": "12"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8046": {
      "op": "SHL"
    },
    "8047": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "MUL",
      "path": "12"
    },
    "8048": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP8",
      "path": "12"
    },
    "8049": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP1",
      "path": "12"
    },
    "8050": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP8",
      "path": "12"
    },
    "8051": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "AND",
      "path": "12"
    },
    "8052": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8057": {
      "op": "SHL"
    },
    "8058": {
      "op": "NOT"
    },
    "8059": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP4",
      "path": "12"
    },
    "8060": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "ISZERO",
      "path": "12"
    },
    "8061": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "ISZERO",
      "path": "12"
    },
    "8062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8066": {
      "op": "SHL"
    },
    "8067": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "MUL",
      "path": "12"
    },
    "8068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8072": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8074": {
      "op": "SHL"
    },
    "8075": {
      "op": "SUB"
    },
    "8076": {
      "op": "NOT"
    },
    "8077": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP1",
      "path": "12"
    },
    "8078": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP4",
      "path": "12"
    },
    "8079": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "AND",
      "path": "12"
    },
    "8080": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP6",
      "path": "12"
    },
    "8081": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP1",
      "path": "12"
    },
    "8082": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP5",
      "path": "12"
    },
    "8083": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "AND",
      "path": "12"
    },
    "8084": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP5",
      "path": "12"
    },
    "8085": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP1",
      "path": "12"
    },
    "8086": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP5",
      "path": "12"
    },
    "8087": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "OR",
      "path": "12"
    },
    "8088": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "OR",
      "path": "12"
    },
    "8089": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "AND",
      "path": "12"
    },
    "8090": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "OR",
      "path": "12"
    },
    "8091": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP3",
      "path": "12"
    },
    "8092": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP1",
      "path": "12"
    },
    "8093": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP3",
      "path": "12"
    },
    "8094": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "OR",
      "path": "12"
    },
    "8095": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP1",
      "path": "12"
    },
    "8096": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SWAP2",
      "path": "12"
    },
    "8097": {
      "fn": "MainStaking.addFee",
      "offset": [3702, 3977],
      "op": "SSTORE",
      "path": "12"
    },
    "8098": {
      "fn": "MainStaking.addFee",
      "offset": [3987, 3995],
      "op": "PUSH1",
      "path": "12",
      "statement": 74,
      "value": "0x6D"
    },
    "8100": {
      "fn": "MainStaking.addFee",
      "offset": [3987, 4004],
      "op": "DUP1",
      "path": "12"
    },
    "8101": {
      "fn": "MainStaking.addFee",
      "offset": [3987, 4004],
      "op": "SLOAD",
      "path": "12"
    },
    "8102": {
      "fn": "MainStaking.addFee",
      "offset": [3823, 3828],
      "op": "DUP7",
      "path": "12"
    },
    "8103": {
      "fn": "MainStaking.addFee",
      "offset": [3823, 3828],
      "op": "SWAP3",
      "path": "12"
    },
    "8104": {
      "op": "SWAP1"
    },
    "8105": {
      "fn": "MainStaking.addFee",
      "offset": [3987, 4004],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FB3"
    },
    "8108": {
      "fn": "MainStaking.addFee",
      "offset": [3987, 4004],
      "op": "SWAP1",
      "path": "12"
    },
    "8109": {
      "fn": "MainStaking.addFee",
      "offset": [3823, 3828],
      "op": "DUP5",
      "path": "12"
    },
    "8110": {
      "fn": "MainStaking.addFee",
      "offset": [3823, 3828],
      "op": "SWAP1",
      "path": "12"
    },
    "8111": {
      "fn": "MainStaking.addFee",
      "offset": [3987, 4004],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3930"
    },
    "8114": {
      "fn": "MainStaking.addFee",
      "jump": "i",
      "offset": [3987, 4004],
      "op": "JUMP",
      "path": "12"
    },
    "8115": {
      "fn": "MainStaking.addFee",
      "offset": [3987, 4004],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8116": {
      "fn": "MainStaking.addFee",
      "offset": [3987, 4004],
      "op": "SWAP1",
      "path": "12"
    },
    "8117": {
      "fn": "MainStaking.addFee",
      "offset": [3987, 4004],
      "op": "SWAP2",
      "path": "12"
    },
    "8118": {
      "fn": "MainStaking.addFee",
      "offset": [3987, 4004],
      "op": "SSTORE",
      "path": "12"
    },
    "8119": {
      "op": "POP"
    },
    "8120": {
      "op": "POP"
    },
    "8121": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "PUSH1",
      "path": "12",
      "statement": 75,
      "value": "0x40"
    },
    "8123": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "DUP1",
      "path": "12"
    },
    "8124": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "MLOAD",
      "path": "12"
    },
    "8125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8131": {
      "op": "SHL"
    },
    "8132": {
      "op": "SUB"
    },
    "8133": {
      "op": "DUP6"
    },
    "8134": {
      "op": "AND"
    },
    "8135": {
      "op": "DUP2"
    },
    "8136": {
      "op": "MSTORE"
    },
    "8137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8139": {
      "op": "DUP2"
    },
    "8140": {
      "op": "ADD"
    },
    "8141": {
      "op": "DUP7"
    },
    "8142": {
      "op": "SWAP1"
    },
    "8143": {
      "op": "MSTORE"
    },
    "8144": {
      "op": "DUP4"
    },
    "8145": {
      "op": "ISZERO"
    },
    "8146": {
      "op": "ISZERO"
    },
    "8147": {
      "op": "SWAP2"
    },
    "8148": {
      "op": "DUP2"
    },
    "8149": {
      "op": "ADD"
    },
    "8150": {
      "op": "SWAP2"
    },
    "8151": {
      "op": "SWAP1"
    },
    "8152": {
      "op": "SWAP2"
    },
    "8153": {
      "op": "MSTORE"
    },
    "8154": {
      "op": "DUP2"
    },
    "8155": {
      "op": "ISZERO"
    },
    "8156": {
      "op": "ISZERO"
    },
    "8157": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8159": {
      "op": "DUP3"
    },
    "8160": {
      "op": "ADD"
    },
    "8161": {
      "op": "MSTORE"
    },
    "8162": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "PUSH32",
      "path": "12",
      "value": "0x6B67376F541493B7DF6BCB8449800492E63D937EDFB837763A818D3BE5BAA283"
    },
    "8195": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "SWAP1",
      "path": "12"
    },
    "8196": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8198": {
      "op": "ADD"
    },
    "8199": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8200": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8202": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "MLOAD",
      "path": "12"
    },
    "8203": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "DUP1",
      "path": "12"
    },
    "8204": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "SWAP2",
      "path": "12"
    },
    "8205": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "SUB",
      "path": "12"
    },
    "8206": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "SWAP1",
      "path": "12"
    },
    "8207": {
      "fn": "MainStaking.addFee",
      "offset": [4019, 4054],
      "op": "LOG1",
      "path": "12"
    },
    "8208": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "POP",
      "path": "12"
    },
    "8209": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "POP",
      "path": "12"
    },
    "8210": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "POP",
      "path": "12"
    },
    "8211": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "POP",
      "path": "12"
    },
    "8212": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "POP",
      "path": "12"
    },
    "8213": {
      "fn": "MainStaking.addFee",
      "offset": [3388, 4061],
      "op": "POP",
      "path": "12"
    },
    "8214": {
      "fn": "MainStaking.addFee",
      "jump": "o",
      "offset": [3388, 4061],
      "op": "JUMP",
      "path": "12"
    },
    "8215": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11462, 11555],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8216": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11518, 11521],
      "op": "PUSH1",
      "path": "12",
      "statement": 76,
      "value": "0x66"
    },
    "8218": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11518, 11521],
      "op": "SLOAD",
      "path": "12"
    },
    "8219": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8221": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "MLOAD",
      "path": "12"
    },
    "8222": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8229": {
      "op": "SHL"
    },
    "8230": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP2",
      "path": "12"
    },
    "8231": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "MSTORE",
      "path": "12"
    },
    "8232": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11541, 11545],
      "op": "ADDRESS",
      "path": "12"
    },
    "8233": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8235": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP3",
      "path": "12"
    },
    "8236": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "ADD",
      "path": "12"
    },
    "8237": {
      "op": "MSTORE"
    },
    "8238": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11502, 11548],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC95"
    },
    "8241": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11502, 11548],
      "op": "SWAP2",
      "path": "12"
    },
    "8242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8248": {
      "op": "SHL"
    },
    "8249": {
      "op": "SUB"
    },
    "8250": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11518, 11521],
      "op": "AND",
      "path": "12"
    },
    "8251": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11518, 11521],
      "op": "SWAP1",
      "path": "12"
    },
    "8252": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11532],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "8257": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11532],
      "op": "SWAP1",
      "path": "12"
    },
    "8258": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8260": {
      "op": "ADD"
    },
    "8261": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8263": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8265": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "MLOAD",
      "path": "12"
    },
    "8266": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP1",
      "path": "12"
    },
    "8267": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP4",
      "path": "12"
    },
    "8268": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "SUB",
      "path": "12"
    },
    "8269": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP2",
      "path": "12"
    },
    "8270": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP7",
      "path": "12"
    },
    "8271": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP1",
      "path": "12"
    },
    "8272": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "8273": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "ISZERO",
      "path": "12"
    },
    "8274": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP1",
      "path": "12"
    },
    "8275": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "ISZERO",
      "path": "12"
    },
    "8276": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH2",
      "path": "12",
      "value": "0x205C"
    },
    "8279": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "JUMPI",
      "path": "12"
    },
    "8280": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8282": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP1",
      "path": "12"
    },
    "8283": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "REVERT",
      "path": "12"
    },
    "8284": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8285": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "POP",
      "path": "12"
    },
    "8286": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "GAS",
      "path": "12"
    },
    "8287": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "STATICCALL",
      "path": "12"
    },
    "8288": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "ISZERO",
      "path": "12"
    },
    "8289": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP1",
      "path": "12"
    },
    "8290": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "ISZERO",
      "path": "12"
    },
    "8291": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2070"
    },
    "8294": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "JUMPI",
      "path": "12"
    },
    "8295": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "8296": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8298": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP1",
      "path": "12"
    },
    "8299": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "8300": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "8301": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8303": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "REVERT",
      "path": "12"
    },
    "8304": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8305": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "POP",
      "path": "12"
    },
    "8306": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "POP",
      "path": "12"
    },
    "8307": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "POP",
      "path": "12"
    },
    "8308": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "POP",
      "path": "12"
    },
    "8309": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8311": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "MLOAD",
      "path": "12"
    },
    "8312": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "8313": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8315": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "NOT",
      "path": "12"
    },
    "8316": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8318": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP3",
      "path": "12"
    },
    "8319": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "ADD",
      "path": "12"
    },
    "8320": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "AND",
      "path": "12"
    },
    "8321": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP3",
      "path": "12"
    },
    "8322": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "ADD",
      "path": "12"
    },
    "8323": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP1",
      "path": "12"
    },
    "8324": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8326": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "MSTORE",
      "path": "12"
    },
    "8327": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "POP",
      "path": "12"
    },
    "8328": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "DUP2",
      "path": "12"
    },
    "8329": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "ADD",
      "path": "12"
    },
    "8330": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "SWAP1",
      "path": "12"
    },
    "8331": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH2",
      "path": "12",
      "value": "0x345"
    },
    "8334": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "SWAP2",
      "path": "12"
    },
    "8335": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "SWAP1",
      "path": "12"
    },
    "8336": {
      "fn": "MainStaking.stakeAllPtp",
      "offset": [11511, 11547],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3688"
    },
    "8339": {
      "fn": "MainStaking.stakeAllPtp",
      "jump": "i",
      "offset": [11511, 11547],
      "op": "JUMP",
      "path": "12"
    },
    "8340": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9535, 9937],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8341": {
      "offset": [1490, 1496],
      "op": "PUSH1",
      "path": "20",
      "value": "0x33"
    },
    "8343": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [1490, 1496],
      "op": "SLOAD",
      "path": "20"
    },
    "8344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8350": {
      "op": "SHL"
    },
    "8351": {
      "op": "SUB"
    },
    "8352": {
      "offset": [1490, 1496],
      "op": "AND",
      "path": "20"
    },
    "8353": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [907, 917],
      "op": "CALLER",
      "path": "18"
    },
    "8354": {
      "offset": [1490, 1512],
      "op": "EQ",
      "path": "20"
    },
    "8355": {
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x20BE"
    },
    "8358": {
      "offset": [1482, 1549],
      "op": "JUMPI",
      "path": "20"
    },
    "8359": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8361": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MLOAD",
      "path": "20"
    },
    "8362": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8366": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8368": {
      "op": "SHL"
    },
    "8369": {
      "offset": [1482, 1549],
      "op": "DUP2",
      "path": "20"
    },
    "8370": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MSTORE",
      "path": "20"
    },
    "8371": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8373": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "ADD",
      "path": "20"
    },
    "8374": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "8377": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "SWAP1",
      "path": "20"
    },
    "8378": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38B0"
    },
    "8381": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [1482, 1549],
      "op": "JUMP",
      "path": "20"
    },
    "8382": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8383": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9663, 9666],
      "op": "PUSH1",
      "path": "12",
      "statement": 77,
      "value": "0x66"
    },
    "8385": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9663, 9666],
      "op": "SLOAD",
      "path": "12"
    },
    "8386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8392": {
      "op": "SHL"
    },
    "8393": {
      "op": "SUB"
    },
    "8394": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9653, 9666],
      "op": "DUP4",
      "path": "12"
    },
    "8395": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9653, 9666],
      "op": "DUP2",
      "path": "12"
    },
    "8396": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9653, 9666],
      "op": "AND",
      "path": "12"
    },
    "8397": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9663, 9666],
      "op": "SWAP2",
      "path": "12"
    },
    "8398": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9663, 9666],
      "op": "AND",
      "path": "12"
    },
    "8399": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9653, 9666],
      "op": "EQ",
      "path": "12"
    },
    "8400": {
      "branch": 139,
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9653, 9666],
      "op": "ISZERO",
      "path": "12"
    },
    "8401": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9645, 9685],
      "op": "PUSH2",
      "path": "12",
      "value": "0x210D"
    },
    "8404": {
      "branch": 139,
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9645, 9685],
      "op": "JUMPI",
      "path": "12"
    },
    "8405": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9645, 9685],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8407": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9645, 9685],
      "op": "MLOAD",
      "path": "12"
    },
    "8408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8414": {
      "op": "SHL"
    },
    "8415": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9645, 9685],
      "op": "DUP2",
      "path": "12"
    },
    "8416": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9645, 9685],
      "op": "MSTORE",
      "path": "12"
    },
    "8417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8419": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9645, 9685],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8421": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9645, 9685],
      "op": "DUP3",
      "path": "12"
    },
    "8422": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9645, 9685],
      "op": "ADD",
      "path": "12"
    },
    "8423": {
      "op": "MSTORE"
    },
    "8424": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "8426": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8428": {
      "op": "DUP3"
    },
    "8429": {
      "op": "ADD"
    },
    "8430": {
      "op": "MSTORE"
    },
    "8431": {
      "op": "PUSH14",
      "value": "0x1B9BDD08185D5D1A1BDC9A5E9959"
    },
    "8446": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "8448": {
      "op": "SHL"
    },
    "8449": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8451": {
      "op": "DUP3"
    },
    "8452": {
      "op": "ADD"
    },
    "8453": {
      "op": "MSTORE"
    },
    "8454": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8456": {
      "op": "ADD"
    },
    "8457": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9645, 9685],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "8460": {
      "op": "JUMP"
    },
    "8461": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9645, 9685],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8468": {
      "op": "SHL"
    },
    "8469": {
      "op": "SUB"
    },
    "8470": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9717],
      "op": "DUP3",
      "path": "12",
      "statement": 78
    },
    "8471": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9717],
      "op": "AND",
      "path": "12"
    },
    "8472": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9717],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8474": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9717],
      "op": "SWAP1",
      "path": "12"
    },
    "8475": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9717],
      "op": "DUP2",
      "path": "12"
    },
    "8476": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9717],
      "op": "MSTORE",
      "path": "12"
    },
    "8477": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9709],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "8479": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9717],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8481": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9717],
      "op": "MSTORE",
      "path": "12"
    },
    "8482": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9717],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8484": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9717],
      "op": "SWAP1",
      "path": "12"
    },
    "8485": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9717],
      "op": "KECCAK256",
      "path": "12"
    },
    "8486": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9726],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8488": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9726],
      "op": "ADD",
      "path": "12"
    },
    "8489": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9726],
      "op": "SLOAD",
      "path": "12"
    },
    "8490": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9726],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8492": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9704, 9726],
      "op": "AND",
      "path": "12"
    },
    "8493": {
      "branch": 140,
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9703, 9726],
      "op": "ISZERO",
      "path": "12"
    },
    "8494": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9695, 9745],
      "op": "PUSH2",
      "path": "12",
      "value": "0x216A"
    },
    "8497": {
      "branch": 140,
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9695, 9745],
      "op": "JUMPI",
      "path": "12"
    },
    "8498": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9695, 9745],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8500": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9695, 9745],
      "op": "MLOAD",
      "path": "12"
    },
    "8501": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8505": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8507": {
      "op": "SHL"
    },
    "8508": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9695, 9745],
      "op": "DUP2",
      "path": "12"
    },
    "8509": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9695, 9745],
      "op": "MSTORE",
      "path": "12"
    },
    "8510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8512": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9695, 9745],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8514": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9695, 9745],
      "op": "DUP3",
      "path": "12"
    },
    "8515": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9695, 9745],
      "op": "ADD",
      "path": "12"
    },
    "8516": {
      "op": "MSTORE"
    },
    "8517": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8521": {
      "op": "DUP3"
    },
    "8522": {
      "op": "ADD"
    },
    "8523": {
      "op": "MSTORE"
    },
    "8524": {
      "op": "PUSH14",
      "value": "0x139BDD08185D5D1A1BDC9A5E9959"
    },
    "8539": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "8541": {
      "op": "SHL"
    },
    "8542": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8544": {
      "op": "DUP3"
    },
    "8545": {
      "op": "ADD"
    },
    "8546": {
      "op": "MSTORE"
    },
    "8547": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8549": {
      "op": "ADD"
    },
    "8550": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9695, 9745],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "8553": {
      "op": "JUMP"
    },
    "8554": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9695, 9745],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8555": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8557": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "MLOAD",
      "path": "12"
    },
    "8558": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "8563": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8565": {
      "op": "SHL"
    },
    "8566": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP2",
      "path": "12"
    },
    "8567": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "MSTORE",
      "path": "12"
    },
    "8568": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9805, 9809],
      "op": "ADDRESS",
      "path": "12"
    },
    "8569": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8571": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP3",
      "path": "12"
    },
    "8572": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "ADD",
      "path": "12"
    },
    "8573": {
      "op": "MSTORE"
    },
    "8574": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9755, 9769],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8576": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9755, 9769],
      "op": "SWAP1",
      "path": "12"
    },
    "8577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8583": {
      "op": "SHL"
    },
    "8584": {
      "op": "SUB"
    },
    "8585": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9796],
      "op": "DUP5",
      "path": "12"
    },
    "8586": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9796],
      "op": "AND",
      "path": "12"
    },
    "8587": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9796],
      "op": "SWAP1",
      "path": "12"
    },
    "8588": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9796],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "8593": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9796],
      "op": "SWAP1",
      "path": "12"
    },
    "8594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8596": {
      "op": "ADD"
    },
    "8597": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8599": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8601": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "MLOAD",
      "path": "12"
    },
    "8602": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP1",
      "path": "12"
    },
    "8603": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP4",
      "path": "12"
    },
    "8604": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "SUB",
      "path": "12"
    },
    "8605": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP2",
      "path": "12"
    },
    "8606": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP7",
      "path": "12"
    },
    "8607": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP1",
      "path": "12"
    },
    "8608": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "8609": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "ISZERO",
      "path": "12"
    },
    "8610": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP1",
      "path": "12"
    },
    "8611": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "ISZERO",
      "path": "12"
    },
    "8612": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21AC"
    },
    "8615": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "JUMPI",
      "path": "12"
    },
    "8616": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8618": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP1",
      "path": "12"
    },
    "8619": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "REVERT",
      "path": "12"
    },
    "8620": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8621": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "POP",
      "path": "12"
    },
    "8622": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "GAS",
      "path": "12"
    },
    "8623": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "STATICCALL",
      "path": "12"
    },
    "8624": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "ISZERO",
      "path": "12"
    },
    "8625": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP1",
      "path": "12"
    },
    "8626": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "ISZERO",
      "path": "12"
    },
    "8627": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21C0"
    },
    "8630": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "JUMPI",
      "path": "12"
    },
    "8631": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "8632": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8634": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP1",
      "path": "12"
    },
    "8635": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "8636": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "8637": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8639": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "REVERT",
      "path": "12"
    },
    "8640": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8641": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "POP",
      "path": "12"
    },
    "8642": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "POP",
      "path": "12"
    },
    "8643": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "POP",
      "path": "12"
    },
    "8644": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "POP",
      "path": "12"
    },
    "8645": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8647": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "MLOAD",
      "path": "12"
    },
    "8648": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "8649": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8651": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "NOT",
      "path": "12"
    },
    "8652": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8654": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP3",
      "path": "12"
    },
    "8655": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "ADD",
      "path": "12"
    },
    "8656": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "AND",
      "path": "12"
    },
    "8657": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP3",
      "path": "12"
    },
    "8658": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "ADD",
      "path": "12"
    },
    "8659": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP1",
      "path": "12"
    },
    "8660": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8662": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "MSTORE",
      "path": "12"
    },
    "8663": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "POP",
      "path": "12"
    },
    "8664": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "DUP2",
      "path": "12"
    },
    "8665": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "ADD",
      "path": "12"
    },
    "8666": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "SWAP1",
      "path": "12"
    },
    "8667": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21E4"
    },
    "8670": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "SWAP2",
      "path": "12"
    },
    "8671": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "SWAP1",
      "path": "12"
    },
    "8672": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3688"
    },
    "8675": {
      "fn": "MainStaking.sendTokenRewards",
      "jump": "i",
      "offset": [9772, 9811],
      "op": "JUMP",
      "path": "12"
    },
    "8676": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9772, 9811],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8677": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH1",
      "path": "12",
      "statement": 79,
      "value": "0x40"
    },
    "8679": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "MLOAD",
      "path": "12"
    },
    "8680": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "8685": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8687": {
      "op": "SHL"
    },
    "8688": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP2",
      "path": "12"
    },
    "8689": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "MSTORE",
      "path": "12"
    },
    "8690": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9755, 9811],
      "op": "SWAP1",
      "path": "12"
    },
    "8691": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9755, 9811],
      "op": "SWAP2",
      "path": "12"
    },
    "8692": {
      "op": "POP"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8699": {
      "op": "SHL"
    },
    "8700": {
      "op": "SUB"
    },
    "8701": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9843],
      "op": "DUP5",
      "path": "12"
    },
    "8702": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9843],
      "op": "AND",
      "path": "12"
    },
    "8703": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9843],
      "op": "SWAP1",
      "path": "12"
    },
    "8704": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9843],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95EA7B3"
    },
    "8709": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9843],
      "op": "SWAP1",
      "path": "12"
    },
    "8710": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2215"
    },
    "8713": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "SWAP1",
      "path": "12"
    },
    "8714": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9844, 9853],
      "op": "DUP6",
      "path": "12"
    },
    "8715": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9844, 9853],
      "op": "SWAP1",
      "path": "12"
    },
    "8716": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9755, 9811],
      "op": "DUP6",
      "path": "12"
    },
    "8717": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9755, 9811],
      "op": "SWAP1",
      "path": "12"
    },
    "8718": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8720": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "ADD",
      "path": "12"
    },
    "8721": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "8724": {
      "fn": "MainStaking.sendTokenRewards",
      "jump": "i",
      "offset": [9821, 9862],
      "op": "JUMP",
      "path": "12"
    },
    "8725": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8726": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8728": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8730": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "MLOAD",
      "path": "12"
    },
    "8731": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP1",
      "path": "12"
    },
    "8732": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP4",
      "path": "12"
    },
    "8733": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "SUB",
      "path": "12"
    },
    "8734": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP2",
      "path": "12"
    },
    "8735": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8737": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP8",
      "path": "12"
    },
    "8738": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP1",
      "path": "12"
    },
    "8739": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "8740": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "ISZERO",
      "path": "12"
    },
    "8741": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP1",
      "path": "12"
    },
    "8742": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "ISZERO",
      "path": "12"
    },
    "8743": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH2",
      "path": "12",
      "value": "0x222F"
    },
    "8746": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "JUMPI",
      "path": "12"
    },
    "8747": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8749": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP1",
      "path": "12"
    },
    "8750": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "REVERT",
      "path": "12"
    },
    "8751": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8752": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "POP",
      "path": "12"
    },
    "8753": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "GAS",
      "path": "12"
    },
    "8754": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "CALL",
      "path": "12"
    },
    "8755": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "ISZERO",
      "path": "12"
    },
    "8756": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP1",
      "path": "12"
    },
    "8757": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "ISZERO",
      "path": "12"
    },
    "8758": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2243"
    },
    "8761": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "JUMPI",
      "path": "12"
    },
    "8762": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "8763": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8765": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP1",
      "path": "12"
    },
    "8766": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "8767": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "8768": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8770": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "REVERT",
      "path": "12"
    },
    "8771": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8772": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "POP",
      "path": "12"
    },
    "8773": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "POP",
      "path": "12"
    },
    "8774": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "POP",
      "path": "12"
    },
    "8775": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "POP",
      "path": "12"
    },
    "8776": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8778": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "MLOAD",
      "path": "12"
    },
    "8779": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "8780": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8782": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "NOT",
      "path": "12"
    },
    "8783": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8785": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP3",
      "path": "12"
    },
    "8786": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "ADD",
      "path": "12"
    },
    "8787": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "AND",
      "path": "12"
    },
    "8788": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP3",
      "path": "12"
    },
    "8789": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "ADD",
      "path": "12"
    },
    "8790": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP1",
      "path": "12"
    },
    "8791": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8793": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "MSTORE",
      "path": "12"
    },
    "8794": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "POP",
      "path": "12"
    },
    "8795": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "DUP2",
      "path": "12"
    },
    "8796": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "ADD",
      "path": "12"
    },
    "8797": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "SWAP1",
      "path": "12"
    },
    "8798": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2267"
    },
    "8801": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "SWAP2",
      "path": "12"
    },
    "8802": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "SWAP1",
      "path": "12"
    },
    "8803": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "8806": {
      "fn": "MainStaking.sendTokenRewards",
      "jump": "i",
      "offset": [9821, 9862],
      "op": "JUMP",
      "path": "12"
    },
    "8807": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9821, 9862],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8808": {
      "op": "POP"
    },
    "8809": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH1",
      "path": "12",
      "statement": 80,
      "value": "0x40"
    },
    "8811": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "MLOAD",
      "path": "12"
    },
    "8812": {
      "op": "PUSH4",
      "value": "0x47E7A411"
    },
    "8817": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8819": {
      "op": "SHL"
    },
    "8820": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP2",
      "path": "12"
    },
    "8821": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "MSTORE",
      "path": "12"
    },
    "8822": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8824": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP2",
      "path": "12"
    },
    "8825": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "ADD",
      "path": "12"
    },
    "8826": {
      "op": "DUP3"
    },
    "8827": {
      "op": "SWAP1"
    },
    "8828": {
      "op": "MSTORE"
    },
    "8829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8835": {
      "op": "SHL"
    },
    "8836": {
      "op": "SUB"
    },
    "8837": {
      "op": "DUP5"
    },
    "8838": {
      "op": "DUP2"
    },
    "8839": {
      "op": "AND"
    },
    "8840": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8842": {
      "op": "DUP4"
    },
    "8843": {
      "op": "ADD"
    },
    "8844": {
      "op": "MSTORE"
    },
    "8845": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9914],
      "op": "DUP4",
      "path": "12"
    },
    "8846": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9914],
      "op": "AND",
      "path": "12"
    },
    "8847": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9914],
      "op": "SWAP1",
      "path": "12"
    },
    "8848": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9914],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8FCF4822"
    },
    "8853": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9914],
      "op": "SWAP1",
      "path": "12"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8856": {
      "op": "ADD"
    },
    "8857": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8859": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8861": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "MLOAD",
      "path": "12"
    },
    "8862": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP1",
      "path": "12"
    },
    "8863": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP4",
      "path": "12"
    },
    "8864": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "SUB",
      "path": "12"
    },
    "8865": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP2",
      "path": "12"
    },
    "8866": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8868": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP8",
      "path": "12"
    },
    "8869": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP1",
      "path": "12"
    },
    "8870": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "8871": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "ISZERO",
      "path": "12"
    },
    "8872": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP1",
      "path": "12"
    },
    "8873": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "ISZERO",
      "path": "12"
    },
    "8874": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22B2"
    },
    "8877": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "JUMPI",
      "path": "12"
    },
    "8878": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8880": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP1",
      "path": "12"
    },
    "8881": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "REVERT",
      "path": "12"
    },
    "8882": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8883": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "POP",
      "path": "12"
    },
    "8884": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "GAS",
      "path": "12"
    },
    "8885": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "CALL",
      "path": "12"
    },
    "8886": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "ISZERO",
      "path": "12"
    },
    "8887": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP1",
      "path": "12"
    },
    "8888": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "ISZERO",
      "path": "12"
    },
    "8889": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22C6"
    },
    "8892": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "JUMPI",
      "path": "12"
    },
    "8893": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "8894": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8896": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP1",
      "path": "12"
    },
    "8897": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "8898": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "8899": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8901": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "REVERT",
      "path": "12"
    },
    "8902": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8903": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "POP",
      "path": "12"
    },
    "8904": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "POP",
      "path": "12"
    },
    "8905": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "POP",
      "path": "12"
    },
    "8906": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "POP",
      "path": "12"
    },
    "8907": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8909": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "MLOAD",
      "path": "12"
    },
    "8910": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "8911": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8913": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "NOT",
      "path": "12"
    },
    "8914": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8916": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP3",
      "path": "12"
    },
    "8917": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "ADD",
      "path": "12"
    },
    "8918": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "AND",
      "path": "12"
    },
    "8919": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP3",
      "path": "12"
    },
    "8920": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "ADD",
      "path": "12"
    },
    "8921": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP1",
      "path": "12"
    },
    "8922": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8924": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "MSTORE",
      "path": "12"
    },
    "8925": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "POP",
      "path": "12"
    },
    "8926": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "DUP2",
      "path": "12"
    },
    "8927": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "ADD",
      "path": "12"
    },
    "8928": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "SWAP1",
      "path": "12"
    },
    "8929": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22EA"
    },
    "8932": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "SWAP2",
      "path": "12"
    },
    "8933": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "SWAP1",
      "path": "12"
    },
    "8934": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "8937": {
      "fn": "MainStaking.sendTokenRewards",
      "jump": "i",
      "offset": [9872, 9930],
      "op": "JUMP",
      "path": "12"
    },
    "8938": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8939": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9872, 9930],
      "op": "POP",
      "path": "12"
    },
    "8940": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9635, 9937],
      "op": "POP",
      "path": "12"
    },
    "8941": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9535, 9937],
      "op": "POP",
      "path": "12"
    },
    "8942": {
      "fn": "MainStaking.sendTokenRewards",
      "offset": [9535, 9937],
      "op": "POP",
      "path": "12"
    },
    "8943": {
      "fn": "MainStaking.sendTokenRewards",
      "jump": "o",
      "offset": [9535, 9937],
      "op": "JUMP",
      "path": "12"
    },
    "8944": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12749, 13189],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8951": {
      "op": "SHL"
    },
    "8952": {
      "op": "SUB"
    },
    "8953": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "DUP1",
      "path": "12"
    },
    "8954": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "DUP3",
      "path": "12"
    },
    "8955": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "AND",
      "path": "12"
    },
    "8956": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12860, 12867],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8958": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "SWAP1",
      "path": "12"
    },
    "8959": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "DUP2",
      "path": "12"
    },
    "8960": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "MSTORE",
      "path": "12"
    },
    "8961": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12912],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "8963": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8965": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "SWAP1",
      "path": "12"
    },
    "8966": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "DUP2",
      "path": "12"
    },
    "8967": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "MSTORE",
      "path": "12"
    },
    "8968": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8970": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "DUP1",
      "path": "12"
    },
    "8971": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "DUP4",
      "path": "12"
    },
    "8972": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "KECCAK256",
      "path": "12"
    },
    "8973": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12953, 12966],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8975": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12953, 12966],
      "op": "DUP1",
      "path": "12"
    },
    "8976": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12953, 12966],
      "op": "DUP3",
      "path": "12"
    },
    "8977": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12953, 12966],
      "op": "ADD",
      "path": "12"
    },
    "8978": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12953, 12966],
      "op": "SLOAD",
      "path": "12"
    },
    "8979": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13005, 13026],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "8981": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13005, 13026],
      "op": "DUP4",
      "path": "12"
    },
    "8982": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13005, 13026],
      "op": "ADD",
      "path": "12"
    },
    "8983": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13005, 13026],
      "op": "SLOAD",
      "path": "12"
    },
    "8984": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP5",
      "path": "12"
    },
    "8985": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "MLOAD",
      "path": "12"
    },
    "8986": {
      "op": "PUSH4",
      "value": "0x18160DDD"
    },
    "8991": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8993": {
      "op": "SHL"
    },
    "8994": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP2",
      "path": "12"
    },
    "8995": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "MSTORE",
      "path": "12"
    },
    "8996": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "SWAP5",
      "path": "12"
    },
    "8997": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "MLOAD",
      "path": "12"
    },
    "8998": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12860, 12867],
      "op": "SWAP7",
      "path": "12"
    },
    "8999": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12860, 12867],
      "op": "SWAP8",
      "path": "12"
    },
    "9000": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "SWAP4",
      "path": "12"
    },
    "9001": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "SWAP7",
      "path": "12"
    },
    "9002": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12953, 12966],
      "op": "SWAP2",
      "path": "12"
    },
    "9003": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12953, 12966],
      "op": "SWAP6",
      "path": "12"
    },
    "9004": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12860, 12867],
      "op": "DUP9",
      "path": "12"
    },
    "9005": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12860, 12867],
      "op": "SWAP6",
      "path": "12"
    },
    "9006": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13005, 13026],
      "op": "SWAP2",
      "path": "12"
    },
    "9007": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13005, 13026],
      "op": "SWAP1",
      "path": "12"
    },
    "9008": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13005, 13026],
      "op": "SWAP5",
      "path": "12"
    },
    "9009": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13005, 13026],
      "op": "AND",
      "path": "12"
    },
    "9010": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13005, 13026],
      "op": "SWAP4",
      "path": "12"
    },
    "9011": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13039],
      "op": "PUSH4",
      "path": "12",
      "value": "0x18160DDD"
    },
    "9016": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13039],
      "op": "SWAP4",
      "path": "12"
    },
    "9017": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP3",
      "path": "12"
    },
    "9018": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP2",
      "path": "12"
    },
    "9019": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "ADD",
      "path": "12"
    },
    "9020": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "SWAP4",
      "path": "12"
    },
    "9021": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "SWAP2",
      "path": "12"
    },
    "9022": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12907, 12919],
      "op": "SWAP3",
      "path": "12"
    },
    "9023": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP3",
      "path": "12"
    },
    "9024": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "SWAP1",
      "path": "12"
    },
    "9025": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "SUB",
      "path": "12"
    },
    "9026": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "ADD",
      "path": "12"
    },
    "9027": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP2",
      "path": "12"
    },
    "9028": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13005, 13026],
      "op": "DUP7",
      "path": "12"
    },
    "9029": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP1",
      "path": "12"
    },
    "9030": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "9031": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "ISZERO",
      "path": "12"
    },
    "9032": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP1",
      "path": "12"
    },
    "9033": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "ISZERO",
      "path": "12"
    },
    "9034": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2352"
    },
    "9037": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "JUMPI",
      "path": "12"
    },
    "9038": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9040": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP1",
      "path": "12"
    },
    "9041": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "REVERT",
      "path": "12"
    },
    "9042": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9043": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "POP",
      "path": "12"
    },
    "9044": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "GAS",
      "path": "12"
    },
    "9045": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "STATICCALL",
      "path": "12"
    },
    "9046": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "ISZERO",
      "path": "12"
    },
    "9047": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP1",
      "path": "12"
    },
    "9048": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "ISZERO",
      "path": "12"
    },
    "9049": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2366"
    },
    "9052": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "JUMPI",
      "path": "12"
    },
    "9053": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9054": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9056": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP1",
      "path": "12"
    },
    "9057": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "9058": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9059": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9061": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "REVERT",
      "path": "12"
    },
    "9062": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9063": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "POP",
      "path": "12"
    },
    "9064": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "POP",
      "path": "12"
    },
    "9065": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "POP",
      "path": "12"
    },
    "9066": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "POP",
      "path": "12"
    },
    "9067": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9069": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "MLOAD",
      "path": "12"
    },
    "9070": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9071": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "9073": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "NOT",
      "path": "12"
    },
    "9074": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "9076": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP3",
      "path": "12"
    },
    "9077": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "ADD",
      "path": "12"
    },
    "9078": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "AND",
      "path": "12"
    },
    "9079": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP3",
      "path": "12"
    },
    "9080": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "ADD",
      "path": "12"
    },
    "9081": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP1",
      "path": "12"
    },
    "9082": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9084": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "MSTORE",
      "path": "12"
    },
    "9085": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "POP",
      "path": "12"
    },
    "9086": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "DUP2",
      "path": "12"
    },
    "9087": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "ADD",
      "path": "12"
    },
    "9088": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "SWAP1",
      "path": "12"
    },
    "9089": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "PUSH2",
      "path": "12",
      "value": "0x238A"
    },
    "9092": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "SWAP2",
      "path": "12"
    },
    "9093": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "SWAP1",
      "path": "12"
    },
    "9094": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3688"
    },
    "9097": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "jump": "i",
      "offset": [12998, 13041],
      "op": "JUMP",
      "path": "12"
    },
    "9098": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12998, 13041],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9099": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12976, 13041],
      "op": "SWAP1",
      "path": "12"
    },
    "9100": {
      "op": "POP"
    },
    "9101": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13056, 13083],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2396"
    },
    "9104": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13070, 13083],
      "op": "DUP3",
      "path": "12"
    },
    "9105": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [12976, 13041],
      "op": "DUP3",
      "path": "12"
    },
    "9106": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13056, 13083],
      "op": "PUSH2",
      "path": "12",
      "value": "0x396A"
    },
    "9109": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "jump": "i",
      "offset": [13056, 13083],
      "op": "JUMP",
      "path": "12"
    },
    "9110": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13056, 13083],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9111": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13052, 13128],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23A5"
    },
    "9114": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13052, 13128],
      "op": "JUMPI",
      "path": "12"
    },
    "9115": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13111, 13117],
      "op": "DUP6",
      "path": "12",
      "statement": 81
    },
    "9116": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13104, 13117],
      "op": "SWAP4",
      "path": "12"
    },
    "9117": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13104, 13117],
      "op": "POP",
      "path": "12"
    },
    "9118": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13104, 13117],
      "op": "POP",
      "path": "12"
    },
    "9119": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13104, 13117],
      "op": "POP",
      "path": "12"
    },
    "9120": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13104, 13117],
      "op": "POP",
      "path": "12"
    },
    "9121": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13104, 13117],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13E1"
    },
    "9124": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13104, 13117],
      "op": "JUMP",
      "path": "12"
    },
    "9125": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13052, 13128],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9126": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13169, 13182],
      "op": "DUP2",
      "path": "12",
      "statement": 82
    },
    "9127": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13145, 13165],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13D1"
    },
    "9130": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13154, 13165],
      "op": "DUP3",
      "path": "12"
    },
    "9131": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13145, 13151],
      "op": "DUP9",
      "path": "12"
    },
    "9132": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "offset": [13145, 13165],
      "op": "PUSH2",
      "path": "12",
      "value": "0x396A"
    },
    "9135": {
      "fn": "MainStaking.getSharesForDepositTokens",
      "jump": "i",
      "offset": [13145, 13165],
      "op": "JUMP",
      "path": "12"
    },
    "9136": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13354, 13788],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9143": {
      "op": "SHL"
    },
    "9144": {
      "op": "SUB"
    },
    "9145": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "DUP1",
      "path": "12"
    },
    "9146": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "DUP3",
      "path": "12"
    },
    "9147": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "AND",
      "path": "12"
    },
    "9148": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13465, 13472],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9150": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "SWAP1",
      "path": "12"
    },
    "9151": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "DUP2",
      "path": "12"
    },
    "9152": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "MSTORE",
      "path": "12"
    },
    "9153": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13517],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "9155": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9157": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "SWAP1",
      "path": "12"
    },
    "9158": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "DUP2",
      "path": "12"
    },
    "9159": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "MSTORE",
      "path": "12"
    },
    "9160": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9162": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "DUP1",
      "path": "12"
    },
    "9163": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "DUP4",
      "path": "12"
    },
    "9164": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "KECCAK256",
      "path": "12"
    },
    "9165": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13558, 13571],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9167": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13558, 13571],
      "op": "DUP1",
      "path": "12"
    },
    "9168": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13558, 13571],
      "op": "DUP3",
      "path": "12"
    },
    "9169": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13558, 13571],
      "op": "ADD",
      "path": "12"
    },
    "9170": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13558, 13571],
      "op": "SLOAD",
      "path": "12"
    },
    "9171": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13610, 13631],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "9173": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13610, 13631],
      "op": "DUP4",
      "path": "12"
    },
    "9174": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13610, 13631],
      "op": "ADD",
      "path": "12"
    },
    "9175": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13610, 13631],
      "op": "SLOAD",
      "path": "12"
    },
    "9176": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "DUP5",
      "path": "12"
    },
    "9177": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "MLOAD",
      "path": "12"
    },
    "9178": {
      "op": "PUSH4",
      "value": "0x18160DDD"
    },
    "9183": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9185": {
      "op": "SHL"
    },
    "9186": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "DUP2",
      "path": "12"
    },
    "9187": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "MSTORE",
      "path": "12"
    },
    "9188": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "SWAP5",
      "path": "12"
    },
    "9189": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "MLOAD",
      "path": "12"
    },
    "9190": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13465, 13472],
      "op": "SWAP7",
      "path": "12"
    },
    "9191": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13465, 13472],
      "op": "SWAP8",
      "path": "12"
    },
    "9192": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "SWAP4",
      "path": "12"
    },
    "9193": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "SWAP7",
      "path": "12"
    },
    "9194": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13558, 13571],
      "op": "SWAP2",
      "path": "12"
    },
    "9195": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13558, 13571],
      "op": "SWAP6",
      "path": "12"
    },
    "9196": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13465, 13472],
      "op": "DUP9",
      "path": "12"
    },
    "9197": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13465, 13472],
      "op": "SWAP6",
      "path": "12"
    },
    "9198": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13610, 13631],
      "op": "SWAP2",
      "path": "12"
    },
    "9199": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13610, 13631],
      "op": "SWAP1",
      "path": "12"
    },
    "9200": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13610, 13631],
      "op": "SWAP5",
      "path": "12"
    },
    "9201": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13610, 13631],
      "op": "AND",
      "path": "12"
    },
    "9202": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13610, 13631],
      "op": "SWAP4",
      "path": "12"
    },
    "9203": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13644],
      "op": "PUSH4",
      "path": "12",
      "value": "0x18160DDD"
    },
    "9208": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13644],
      "op": "SWAP4",
      "path": "12"
    },
    "9209": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "DUP3",
      "path": "12"
    },
    "9210": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "DUP2",
      "path": "12"
    },
    "9211": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "ADD",
      "path": "12"
    },
    "9212": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "SWAP4",
      "path": "12"
    },
    "9213": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "SWAP2",
      "path": "12"
    },
    "9214": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13512, 13524],
      "op": "SWAP3",
      "path": "12"
    },
    "9215": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "DUP3",
      "path": "12"
    },
    "9216": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "SWAP1",
      "path": "12"
    },
    "9217": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "SUB",
      "path": "12"
    },
    "9218": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "ADD",
      "path": "12"
    },
    "9219": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "DUP2",
      "path": "12"
    },
    "9220": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13610, 13631],
      "op": "DUP7",
      "path": "12"
    },
    "9221": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "DUP1",
      "path": "12"
    },
    "9222": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "9223": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "ISZERO",
      "path": "12"
    },
    "9224": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "DUP1",
      "path": "12"
    },
    "9225": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "ISZERO",
      "path": "12"
    },
    "9226": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1372"
    },
    "9229": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "JUMPI",
      "path": "12"
    },
    "9230": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9232": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "DUP1",
      "path": "12"
    },
    "9233": {
      "fn": "MainStaking.getDepositTokensForShares",
      "offset": [13603, 13646],
      "op": "REVERT",
      "path": "12"
    },
    "9234": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2159, 2391],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9235": {
      "offset": [1490, 1496],
      "op": "PUSH1",
      "path": "20",
      "value": "0x33"
    },
    "9237": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [1490, 1496],
      "op": "SLOAD",
      "path": "20"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9244": {
      "op": "SHL"
    },
    "9245": {
      "op": "SUB"
    },
    "9246": {
      "offset": [1490, 1496],
      "op": "AND",
      "path": "20"
    },
    "9247": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [907, 917],
      "op": "CALLER",
      "path": "18"
    },
    "9248": {
      "offset": [1490, 1512],
      "op": "EQ",
      "path": "20"
    },
    "9249": {
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x243C"
    },
    "9252": {
      "offset": [1482, 1549],
      "op": "JUMPI",
      "path": "20"
    },
    "9253": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9255": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MLOAD",
      "path": "20"
    },
    "9256": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9260": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9262": {
      "op": "SHL"
    },
    "9263": {
      "offset": [1482, 1549],
      "op": "DUP2",
      "path": "20"
    },
    "9264": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "MSTORE",
      "path": "20"
    },
    "9265": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9267": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "ADD",
      "path": "20"
    },
    "9268": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "9271": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "SWAP1",
      "path": "20"
    },
    "9272": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38B0"
    },
    "9275": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [1482, 1549],
      "op": "JUMP",
      "path": "20"
    },
    "9276": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [1482, 1549],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9283": {
      "op": "SHL"
    },
    "9284": {
      "op": "SUB"
    },
    "9285": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2260, 2282],
      "op": "DUP2",
      "path": "20",
      "statement": 83
    },
    "9286": {
      "branch": 154,
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2260, 2282],
      "op": "AND",
      "path": "20"
    },
    "9287": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2239, 2346],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24A1"
    },
    "9290": {
      "branch": 154,
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2239, 2346],
      "op": "JUMPI",
      "path": "20"
    },
    "9291": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2239, 2346],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9293": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2239, 2346],
      "op": "MLOAD",
      "path": "20"
    },
    "9294": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9298": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9300": {
      "op": "SHL"
    },
    "9301": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2239, 2346],
      "op": "DUP2",
      "path": "20"
    },
    "9302": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2239, 2346],
      "op": "MSTORE",
      "path": "20"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9305": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2239, 2346],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9307": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2239, 2346],
      "op": "DUP3",
      "path": "20"
    },
    "9308": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2239, 2346],
      "op": "ADD",
      "path": "20"
    },
    "9309": {
      "op": "MSTORE"
    },
    "9310": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9314": {
      "op": "DUP3"
    },
    "9315": {
      "op": "ADD"
    },
    "9316": {
      "op": "MSTORE"
    },
    "9317": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "9350": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9352": {
      "op": "DUP3"
    },
    "9353": {
      "op": "ADD"
    },
    "9354": {
      "op": "MSTORE"
    },
    "9355": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "9362": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9364": {
      "op": "SHL"
    },
    "9365": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9367": {
      "op": "DUP3"
    },
    "9368": {
      "op": "ADD"
    },
    "9369": {
      "op": "MSTORE"
    },
    "9370": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9372": {
      "op": "ADD"
    },
    "9373": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2239, 2346],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "9376": {
      "op": "JUMP"
    },
    "9377": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2239, 2346],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9378": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2356, 2384],
      "op": "PUSH2",
      "path": "20",
      "statement": 84,
      "value": "0x24AA"
    },
    "9381": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2375, 2383],
      "op": "DUP2",
      "path": "20"
    },
    "9382": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2356, 2374],
      "op": "PUSH2",
      "path": "20",
      "value": "0x310B"
    },
    "9385": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "i",
      "offset": [2356, 2384],
      "op": "JUMP",
      "path": "20"
    },
    "9386": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2356, 2384],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9387": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [2159, 2391],
      "op": "POP",
      "path": "20"
    },
    "9388": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "o",
      "offset": [2159, 2391],
      "op": "JUMP",
      "path": "20"
    },
    "9389": {
      "fn": "MainStaking.deposit",
      "offset": [5048, 6344],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9396": {
      "op": "SHL"
    },
    "9397": {
      "op": "SUB"
    },
    "9398": {
      "fn": "MainStaking.deposit",
      "offset": [5237, 5249],
      "op": "DUP4",
      "path": "12"
    },
    "9399": {
      "fn": "MainStaking.deposit",
      "offset": [5237, 5249],
      "op": "AND",
      "path": "12"
    },
    "9400": {
      "fn": "MainStaking.deposit",
      "offset": [5213, 5234],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9402": {
      "fn": "MainStaking.deposit",
      "offset": [5237, 5249],
      "op": "SWAP1",
      "path": "12"
    },
    "9403": {
      "fn": "MainStaking.deposit",
      "offset": [5237, 5249],
      "op": "DUP2",
      "path": "12"
    },
    "9404": {
      "fn": "MainStaking.deposit",
      "offset": [5237, 5249],
      "op": "MSTORE",
      "path": "12"
    },
    "9405": {
      "fn": "MainStaking.deposit",
      "offset": [5237, 5242],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "9407": {
      "fn": "MainStaking.deposit",
      "offset": [5237, 5249],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9409": {
      "fn": "MainStaking.deposit",
      "offset": [5237, 5249],
      "op": "MSTORE",
      "path": "12"
    },
    "9410": {
      "fn": "MainStaking.deposit",
      "offset": [5237, 5249],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9412": {
      "fn": "MainStaking.deposit",
      "offset": [5237, 5249],
      "op": "SWAP1",
      "path": "12"
    },
    "9413": {
      "fn": "MainStaking.deposit",
      "offset": [5237, 5249],
      "op": "KECCAK256",
      "path": "12"
    },
    "9414": {
      "fn": "MainStaking.deposit",
      "offset": [5290, 5307],
      "op": "PUSH1",
      "path": "12",
      "statement": 85,
      "value": "0x1"
    },
    "9416": {
      "fn": "MainStaking.deposit",
      "offset": [5290, 5307],
      "op": "DUP2",
      "path": "12"
    },
    "9417": {
      "fn": "MainStaking.deposit",
      "offset": [5290, 5307],
      "op": "ADD",
      "path": "12"
    },
    "9418": {
      "fn": "MainStaking.deposit",
      "offset": [5290, 5307],
      "op": "SLOAD",
      "path": "12"
    },
    "9419": {
      "fn": "MainStaking.deposit",
      "offset": [5290, 5307],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9421": {
      "branch": 141,
      "fn": "MainStaking.deposit",
      "offset": [5290, 5307],
      "op": "AND",
      "path": "12"
    },
    "9422": {
      "fn": "MainStaking.deposit",
      "offset": [5282, 5327],
      "op": "PUSH2",
      "path": "12",
      "value": "0x250B"
    },
    "9425": {
      "branch": 141,
      "fn": "MainStaking.deposit",
      "offset": [5282, 5327],
      "op": "JUMPI",
      "path": "12"
    },
    "9426": {
      "fn": "MainStaking.deposit",
      "offset": [5282, 5327],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9428": {
      "fn": "MainStaking.deposit",
      "offset": [5282, 5327],
      "op": "MLOAD",
      "path": "12"
    },
    "9429": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9433": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9435": {
      "op": "SHL"
    },
    "9436": {
      "fn": "MainStaking.deposit",
      "offset": [5282, 5327],
      "op": "DUP2",
      "path": "12"
    },
    "9437": {
      "fn": "MainStaking.deposit",
      "offset": [5282, 5327],
      "op": "MSTORE",
      "path": "12"
    },
    "9438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9440": {
      "fn": "MainStaking.deposit",
      "offset": [5282, 5327],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9442": {
      "fn": "MainStaking.deposit",
      "offset": [5282, 5327],
      "op": "DUP3",
      "path": "12"
    },
    "9443": {
      "fn": "MainStaking.deposit",
      "offset": [5282, 5327],
      "op": "ADD",
      "path": "12"
    },
    "9444": {
      "op": "MSTORE"
    },
    "9445": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "9447": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9449": {
      "op": "DUP3"
    },
    "9450": {
      "op": "ADD"
    },
    "9451": {
      "op": "MSTORE"
    },
    "9452": {
      "op": "PUSH15",
      "value": "0x506F6F6C206E6F7420616374697665"
    },
    "9468": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "9470": {
      "op": "SHL"
    },
    "9471": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9473": {
      "op": "DUP3"
    },
    "9474": {
      "op": "ADD"
    },
    "9475": {
      "op": "MSTORE"
    },
    "9476": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9478": {
      "op": "ADD"
    },
    "9479": {
      "fn": "MainStaking.deposit",
      "offset": [5282, 5327],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "9482": {
      "op": "JUMP"
    },
    "9483": {
      "fn": "MainStaking.deposit",
      "offset": [5282, 5327],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9484": {
      "fn": "MainStaking.deposit",
      "offset": [5359, 5374],
      "op": "PUSH1",
      "path": "12",
      "statement": 86,
      "value": "0x7"
    },
    "9486": {
      "fn": "MainStaking.deposit",
      "offset": [5359, 5374],
      "op": "DUP2",
      "path": "12"
    },
    "9487": {
      "fn": "MainStaking.deposit",
      "offset": [5359, 5374],
      "op": "ADD",
      "path": "12"
    },
    "9488": {
      "fn": "MainStaking.deposit",
      "offset": [5359, 5374],
      "op": "SLOAD",
      "path": "12"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9495": {
      "op": "SHL"
    },
    "9496": {
      "op": "SUB"
    },
    "9497": {
      "fn": "MainStaking.deposit",
      "offset": [5359, 5374],
      "op": "AND",
      "path": "12"
    },
    "9498": {
      "fn": "MainStaking.deposit",
      "offset": [5345, 5355],
      "op": "CALLER",
      "path": "12"
    },
    "9499": {
      "branch": 142,
      "fn": "MainStaking.deposit",
      "offset": [5345, 5374],
      "op": "EQ",
      "path": "12"
    },
    "9500": {
      "fn": "MainStaking.deposit",
      "offset": [5337, 5402],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2567"
    },
    "9503": {
      "branch": 142,
      "fn": "MainStaking.deposit",
      "offset": [5337, 5402],
      "op": "JUMPI",
      "path": "12"
    },
    "9504": {
      "fn": "MainStaking.deposit",
      "offset": [5337, 5402],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9506": {
      "fn": "MainStaking.deposit",
      "offset": [5337, 5402],
      "op": "MLOAD",
      "path": "12"
    },
    "9507": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9511": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9513": {
      "op": "SHL"
    },
    "9514": {
      "fn": "MainStaking.deposit",
      "offset": [5337, 5402],
      "op": "DUP2",
      "path": "12"
    },
    "9515": {
      "fn": "MainStaking.deposit",
      "offset": [5337, 5402],
      "op": "MSTORE",
      "path": "12"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9518": {
      "fn": "MainStaking.deposit",
      "offset": [5337, 5402],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9520": {
      "fn": "MainStaking.deposit",
      "offset": [5337, 5402],
      "op": "DUP3",
      "path": "12"
    },
    "9521": {
      "fn": "MainStaking.deposit",
      "offset": [5337, 5402],
      "op": "ADD",
      "path": "12"
    },
    "9522": {
      "op": "MSTORE"
    },
    "9523": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "9525": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9527": {
      "op": "DUP3"
    },
    "9528": {
      "op": "ADD"
    },
    "9529": {
      "op": "MSTORE"
    },
    "9530": {
      "op": "PUSH32",
      "value": "0x4F6E6C792068656C7065722063616E206465706F736974000000000000000000"
    },
    "9563": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9565": {
      "op": "DUP3"
    },
    "9566": {
      "op": "ADD"
    },
    "9567": {
      "op": "MSTORE"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9570": {
      "op": "ADD"
    },
    "9571": {
      "fn": "MainStaking.deposit",
      "offset": [5337, 5402],
      "op": "PUSH2",
      "path": "12",
      "value": "0x719"
    },
    "9574": {
      "op": "JUMP"
    },
    "9575": {
      "fn": "MainStaking.deposit",
      "offset": [5337, 5402],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9576": {
      "fn": "MainStaking.deposit",
      "offset": [5412, 5473],
      "op": "PUSH2",
      "path": "12",
      "statement": 87,
      "value": "0x257C"
    },
    "9579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9585": {
      "op": "SHL"
    },
    "9586": {
      "op": "SUB"
    },
    "9587": {
      "fn": "MainStaking.deposit",
      "offset": [5412, 5442],
      "op": "DUP6",
      "path": "12"
    },
    "9588": {
      "fn": "MainStaking.deposit",
      "offset": [5412, 5442],
      "op": "AND",
      "path": "12"
    },
    "9589": {
      "fn": "MainStaking.deposit",
      "offset": [5443, 5449],
      "op": "DUP4",
      "path": "12"
    },
    "9590": {
      "fn": "MainStaking.deposit",
      "offset": [5459, 5463],
      "op": "ADDRESS",
      "path": "12"
    },
    "9591": {
      "fn": "MainStaking.deposit",
      "offset": [5466, 5472],
      "op": "DUP7",
      "path": "12"
    },
    "9592": {
      "fn": "MainStaking.deposit",
      "offset": [5412, 5442],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3167"
    },
    "9595": {
      "fn": "MainStaking.deposit",
      "jump": "i",
      "offset": [5412, 5473],
      "op": "JUMP",
      "path": "12"
    },
    "9596": {
      "fn": "MainStaking.deposit",
      "offset": [5412, 5473],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9597": {
      "fn": "MainStaking.deposit",
      "offset": [5550, 5563],
      "op": "PUSH1",
      "path": "12",
      "statement": 88,
      "value": "0x68"
    },
    "9599": {
      "fn": "MainStaking.deposit",
      "offset": [5550, 5563],
      "op": "SLOAD",
      "path": "12"
    },
    "9600": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9602": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "MLOAD",
      "path": "12"
    },
    "9603": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "9608": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9610": {
      "op": "SHL"
    },
    "9611": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP2",
      "path": "12"
    },
    "9612": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "MSTORE",
      "path": "12"
    },
    "9613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9619": {
      "op": "SHL"
    },
    "9620": {
      "op": "SUB"
    },
    "9621": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5549],
      "op": "DUP7",
      "path": "12"
    },
    "9622": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5549],
      "op": "DUP2",
      "path": "12"
    },
    "9623": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5549],
      "op": "AND",
      "path": "12"
    },
    "9624": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5549],
      "op": "SWAP3",
      "path": "12"
    },
    "9625": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5549],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95EA7B3"
    },
    "9630": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5549],
      "op": "SWAP3",
      "path": "12"
    },
    "9631": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25B0"
    },
    "9634": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "SWAP3",
      "path": "12"
    },
    "9635": {
      "fn": "MainStaking.deposit",
      "offset": [5550, 5563],
      "op": "SWAP1",
      "path": "12"
    },
    "9636": {
      "fn": "MainStaking.deposit",
      "offset": [5550, 5563],
      "op": "SWAP2",
      "path": "12"
    },
    "9637": {
      "fn": "MainStaking.deposit",
      "offset": [5550, 5563],
      "op": "AND",
      "path": "12"
    },
    "9638": {
      "fn": "MainStaking.deposit",
      "offset": [5550, 5563],
      "op": "SWAP1",
      "path": "12"
    },
    "9639": {
      "fn": "MainStaking.deposit",
      "offset": [5565, 5571],
      "op": "DUP8",
      "path": "12"
    },
    "9640": {
      "fn": "MainStaking.deposit",
      "offset": [5565, 5571],
      "op": "SWAP1",
      "path": "12"
    },
    "9641": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9643": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "ADD",
      "path": "12"
    },
    "9644": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "9647": {
      "fn": "MainStaking.deposit",
      "jump": "i",
      "offset": [5528, 5572],
      "op": "JUMP",
      "path": "12"
    },
    "9648": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9649": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9651": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9653": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "MLOAD",
      "path": "12"
    },
    "9654": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP1",
      "path": "12"
    },
    "9655": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP4",
      "path": "12"
    },
    "9656": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "SUB",
      "path": "12"
    },
    "9657": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP2",
      "path": "12"
    },
    "9658": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9660": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP8",
      "path": "12"
    },
    "9661": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP1",
      "path": "12"
    },
    "9662": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "9663": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "ISZERO",
      "path": "12"
    },
    "9664": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP1",
      "path": "12"
    },
    "9665": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "ISZERO",
      "path": "12"
    },
    "9666": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25CA"
    },
    "9669": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "JUMPI",
      "path": "12"
    },
    "9670": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9672": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP1",
      "path": "12"
    },
    "9673": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "REVERT",
      "path": "12"
    },
    "9674": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9675": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "POP",
      "path": "12"
    },
    "9676": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "GAS",
      "path": "12"
    },
    "9677": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "CALL",
      "path": "12"
    },
    "9678": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "ISZERO",
      "path": "12"
    },
    "9679": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP1",
      "path": "12"
    },
    "9680": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "ISZERO",
      "path": "12"
    },
    "9681": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25DE"
    },
    "9684": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "JUMPI",
      "path": "12"
    },
    "9685": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9686": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9688": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP1",
      "path": "12"
    },
    "9689": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "9690": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9691": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9693": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "REVERT",
      "path": "12"
    },
    "9694": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9695": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "POP",
      "path": "12"
    },
    "9696": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "POP",
      "path": "12"
    },
    "9697": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "POP",
      "path": "12"
    },
    "9698": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "POP",
      "path": "12"
    },
    "9699": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9701": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "MLOAD",
      "path": "12"
    },
    "9702": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9703": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "9705": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "NOT",
      "path": "12"
    },
    "9706": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "9708": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP3",
      "path": "12"
    },
    "9709": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "ADD",
      "path": "12"
    },
    "9710": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "AND",
      "path": "12"
    },
    "9711": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP3",
      "path": "12"
    },
    "9712": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "ADD",
      "path": "12"
    },
    "9713": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP1",
      "path": "12"
    },
    "9714": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9716": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "MSTORE",
      "path": "12"
    },
    "9717": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "POP",
      "path": "12"
    },
    "9718": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "DUP2",
      "path": "12"
    },
    "9719": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "ADD",
      "path": "12"
    },
    "9720": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "SWAP1",
      "path": "12"
    },
    "9721": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2602"
    },
    "9724": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "SWAP2",
      "path": "12"
    },
    "9725": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "SWAP1",
      "path": "12"
    },
    "9726": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "9729": {
      "fn": "MainStaking.deposit",
      "jump": "i",
      "offset": [5528, 5572],
      "op": "JUMP",
      "path": "12"
    },
    "9730": {
      "fn": "MainStaking.deposit",
      "offset": [5528, 5572],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9731": {
      "op": "POP"
    },
    "9732": {
      "fn": "MainStaking.deposit",
      "offset": [5597, 5610],
      "op": "PUSH1",
      "path": "12",
      "statement": 89,
      "value": "0x68"
    },
    "9734": {
      "fn": "MainStaking.deposit",
      "offset": [5597, 5610],
      "op": "SLOAD",
      "path": "12"
    },
    "9735": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9737": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "MLOAD",
      "path": "12"
    },
    "9738": {
      "op": "PUSH4",
      "value": "0x2434941D"
    },
    "9743": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "9745": {
      "op": "SHL"
    },
    "9746": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "DUP2",
      "path": "12"
    },
    "9747": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "MSTORE",
      "path": "12"
    },
    "9748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9754": {
      "op": "SHL"
    },
    "9755": {
      "op": "SUB"
    },
    "9756": {
      "op": "DUP7"
    },
    "9757": {
      "op": "DUP2"
    },
    "9758": {
      "op": "AND"
    },
    "9759": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9761": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "DUP4",
      "path": "12"
    },
    "9762": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "ADD",
      "path": "12"
    },
    "9763": {
      "op": "MSTORE"
    },
    "9764": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9766": {
      "op": "DUP3"
    },
    "9767": {
      "op": "ADD"
    },
    "9768": {
      "op": "DUP7"
    },
    "9769": {
      "op": "SWAP1"
    },
    "9770": {
      "op": "MSTORE"
    },
    "9771": {
      "fn": "MainStaking.deposit",
      "offset": [5680, 5684],
      "op": "ADDRESS",
      "path": "12"
    },
    "9772": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9774": {
      "op": "DUP4"
    },
    "9775": {
      "op": "ADD"
    },
    "9776": {
      "op": "MSTORE"
    },
    "9777": {
      "fn": "MainStaking.deposit",
      "offset": [5699, 5714],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "9778": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9780": {
      "op": "DUP4"
    },
    "9781": {
      "op": "ADD"
    },
    "9782": {
      "op": "MSTORE"
    },
    "9783": {
      "fn": "MainStaking.deposit",
      "offset": [5597, 5610],
      "op": "SWAP1",
      "path": "12"
    },
    "9784": {
      "fn": "MainStaking.deposit",
      "offset": [5597, 5610],
      "op": "SWAP2",
      "path": "12"
    },
    "9785": {
      "fn": "MainStaking.deposit",
      "offset": [5597, 5610],
      "op": "AND",
      "path": "12"
    },
    "9786": {
      "fn": "MainStaking.deposit",
      "offset": [5597, 5610],
      "op": "SWAP1",
      "path": "12"
    },
    "9787": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5619],
      "op": "PUSH4",
      "path": "12",
      "value": "0x90D25074"
    },
    "9792": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5619],
      "op": "SWAP1",
      "path": "12"
    },
    "9793": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9795": {
      "op": "ADD"
    },
    "9796": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9798": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9800": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "MLOAD",
      "path": "12"
    },
    "9801": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "DUP1",
      "path": "12"
    },
    "9802": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "DUP4",
      "path": "12"
    },
    "9803": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "SUB",
      "path": "12"
    },
    "9804": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "DUP2",
      "path": "12"
    },
    "9805": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9807": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "DUP8",
      "path": "12"
    },
    "9808": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "DUP1",
      "path": "12"
    },
    "9809": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "9810": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "ISZERO",
      "path": "12"
    },
    "9811": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "DUP1",
      "path": "12"
    },
    "9812": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "ISZERO",
      "path": "12"
    },
    "9813": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "PUSH2",
      "path": "12",
      "value": "0x265D"
    },
    "9816": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "JUMPI",
      "path": "12"
    },
    "9817": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9819": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "DUP1",
      "path": "12"
    },
    "9820": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "REVERT",
      "path": "12"
    },
    "9821": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9822": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "POP",
      "path": "12"
    },
    "9823": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "GAS",
      "path": "12"
    },
    "9824": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "CALL",
      "path": "12"
    },
    "9825": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "ISZERO",
      "path": "12"
    },
    "9826": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "DUP1",
      "path": "12"
    },
    "9827": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "ISZERO",
      "path": "12"
    },
    "9828": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2671"
    },
    "9831": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "JUMPI",
      "path": "12"
    },
    "9832": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9833": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9835": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "DUP1",
      "path": "12"
    },
    "9836": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "9837": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9838": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9840": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "REVERT",
      "path": "12"
    },
    "9841": {
      "fn": "MainStaking.deposit",
      "offset": [5582, 5724],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9842": {
      "op": "POP"
    },
    "9843": {
      "op": "POP"
    },
    "9844": {
      "op": "POP"
    },
    "9845": {
      "op": "POP"
    },
    "9846": {
      "fn": "MainStaking.deposit",
      "offset": [5821, 5839],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "9848": {
      "fn": "MainStaking.deposit",
      "offset": [5821, 5839],
      "op": "DUP2",
      "path": "12"
    },
    "9849": {
      "fn": "MainStaking.deposit",
      "offset": [5821, 5839],
      "op": "ADD",
      "path": "12"
    },
    "9850": {
      "fn": "MainStaking.deposit",
      "offset": [5821, 5839],
      "op": "SLOAD",
      "path": "12"
    },
    "9851": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9853": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "MLOAD",
      "path": "12"
    },
    "9854": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "9859": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9861": {
      "op": "SHL"
    },
    "9862": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP2",
      "path": "12"
    },
    "9863": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "MSTORE",
      "path": "12"
    },
    "9864": {
      "fn": "MainStaking.deposit",
      "offset": [5872, 5876],
      "op": "ADDRESS",
      "path": "12"
    },
    "9865": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9867": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP3",
      "path": "12"
    },
    "9868": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "ADD",
      "path": "12"
    },
    "9869": {
      "op": "MSTORE"
    },
    "9870": {
      "fn": "MainStaking.deposit",
      "offset": [5793, 5811],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9872": {
      "fn": "MainStaking.deposit",
      "offset": [5793, 5811],
      "op": "SWAP2",
      "path": "12"
    },
    "9873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9879": {
      "op": "SHL"
    },
    "9880": {
      "op": "SUB"
    },
    "9881": {
      "fn": "MainStaking.deposit",
      "offset": [5821, 5839],
      "op": "AND",
      "path": "12"
    },
    "9882": {
      "fn": "MainStaking.deposit",
      "offset": [5821, 5839],
      "op": "SWAP1",
      "path": "12"
    },
    "9883": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5850],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "9888": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5850],
      "op": "SWAP1",
      "path": "12"
    },
    "9889": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9891": {
      "op": "ADD"
    },
    "9892": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9894": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9896": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "MLOAD",
      "path": "12"
    },
    "9897": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP1",
      "path": "12"
    },
    "9898": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP4",
      "path": "12"
    },
    "9899": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "SUB",
      "path": "12"
    },
    "9900": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP2",
      "path": "12"
    },
    "9901": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP7",
      "path": "12"
    },
    "9902": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP1",
      "path": "12"
    },
    "9903": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "9904": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "ISZERO",
      "path": "12"
    },
    "9905": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP1",
      "path": "12"
    },
    "9906": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "ISZERO",
      "path": "12"
    },
    "9907": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26BB"
    },
    "9910": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "JUMPI",
      "path": "12"
    },
    "9911": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9913": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP1",
      "path": "12"
    },
    "9914": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "REVERT",
      "path": "12"
    },
    "9915": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9916": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "POP",
      "path": "12"
    },
    "9917": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "GAS",
      "path": "12"
    },
    "9918": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "STATICCALL",
      "path": "12"
    },
    "9919": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "ISZERO",
      "path": "12"
    },
    "9920": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP1",
      "path": "12"
    },
    "9921": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "ISZERO",
      "path": "12"
    },
    "9922": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26CF"
    },
    "9925": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "JUMPI",
      "path": "12"
    },
    "9926": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9927": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9929": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP1",
      "path": "12"
    },
    "9930": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "9931": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9932": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9934": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "REVERT",
      "path": "12"
    },
    "9935": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9936": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "POP",
      "path": "12"
    },
    "9937": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "POP",
      "path": "12"
    },
    "9938": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "POP",
      "path": "12"
    },
    "9939": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "POP",
      "path": "12"
    },
    "9940": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9942": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "MLOAD",
      "path": "12"
    },
    "9943": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9944": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "9946": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "NOT",
      "path": "12"
    },
    "9947": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "9949": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP3",
      "path": "12"
    },
    "9950": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "ADD",
      "path": "12"
    },
    "9951": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "AND",
      "path": "12"
    },
    "9952": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP3",
      "path": "12"
    },
    "9953": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "ADD",
      "path": "12"
    },
    "9954": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP1",
      "path": "12"
    },
    "9955": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9957": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "MSTORE",
      "path": "12"
    },
    "9958": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "POP",
      "path": "12"
    },
    "9959": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "DUP2",
      "path": "12"
    },
    "9960": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "ADD",
      "path": "12"
    },
    "9961": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "SWAP1",
      "path": "12"
    },
    "9962": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26F3"
    },
    "9965": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "SWAP2",
      "path": "12"
    },
    "9966": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "SWAP1",
      "path": "12"
    },
    "9967": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3688"
    },
    "9970": {
      "fn": "MainStaking.deposit",
      "jump": "i",
      "offset": [5814, 5887],
      "op": "JUMP",
      "path": "12"
    },
    "9971": {
      "fn": "MainStaking.deposit",
      "offset": [5814, 5887],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9972": {
      "fn": "MainStaking.deposit",
      "offset": [5904, 5922],
      "op": "PUSH1",
      "path": "12",
      "statement": 90,
      "value": "0x2"
    },
    "9974": {
      "fn": "MainStaking.deposit",
      "offset": [5904, 5922],
      "op": "DUP4",
      "path": "12"
    },
    "9975": {
      "fn": "MainStaking.deposit",
      "offset": [5904, 5922],
      "op": "ADD",
      "path": "12"
    },
    "9976": {
      "fn": "MainStaking.deposit",
      "offset": [5904, 5922],
      "op": "SLOAD",
      "path": "12"
    },
    "9977": {
      "fn": "MainStaking.deposit",
      "offset": [5932, 5946],
      "op": "PUSH1",
      "path": "12",
      "value": "0x69"
    },
    "9979": {
      "fn": "MainStaking.deposit",
      "offset": [5932, 5946],
      "op": "SLOAD",
      "path": "12"
    },
    "9980": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9982": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "MLOAD",
      "path": "12"
    },
    "9983": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "9988": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9990": {
      "op": "SHL"
    },
    "9991": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP2",
      "path": "12"
    },
    "9992": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "MSTORE",
      "path": "12"
    },
    "9993": {
      "fn": "MainStaking.deposit",
      "offset": [5793, 5887],
      "op": "SWAP3",
      "path": "12"
    },
    "9994": {
      "fn": "MainStaking.deposit",
      "offset": [5793, 5887],
      "op": "SWAP4",
      "path": "12"
    },
    "9995": {
      "op": "POP"
    },
    "9996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10002": {
      "op": "SHL"
    },
    "10003": {
      "op": "SUB"
    },
    "10004": {
      "fn": "MainStaking.deposit",
      "offset": [5904, 5922],
      "op": "SWAP2",
      "path": "12"
    },
    "10005": {
      "fn": "MainStaking.deposit",
      "offset": [5904, 5922],
      "op": "DUP3",
      "path": "12"
    },
    "10006": {
      "fn": "MainStaking.deposit",
      "offset": [5904, 5922],
      "op": "AND",
      "path": "12"
    },
    "10007": {
      "fn": "MainStaking.deposit",
      "offset": [5904, 5922],
      "op": "SWAP3",
      "path": "12"
    },
    "10008": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5931],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95EA7B3"
    },
    "10013": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5931],
      "op": "SWAP3",
      "path": "12"
    },
    "10014": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH2",
      "path": "12",
      "value": "0x272D"
    },
    "10017": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "SWAP3",
      "path": "12"
    },
    "10018": {
      "fn": "MainStaking.deposit",
      "offset": [5932, 5946],
      "op": "AND",
      "path": "12"
    },
    "10019": {
      "fn": "MainStaking.deposit",
      "offset": [5932, 5946],
      "op": "SWAP1",
      "path": "12"
    },
    "10020": {
      "fn": "MainStaking.deposit",
      "offset": [5793, 5887],
      "op": "DUP6",
      "path": "12"
    },
    "10021": {
      "fn": "MainStaking.deposit",
      "offset": [5793, 5887],
      "op": "SWAP1",
      "path": "12"
    },
    "10022": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10024": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "ADD",
      "path": "12"
    },
    "10025": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "10028": {
      "fn": "MainStaking.deposit",
      "jump": "i",
      "offset": [5897, 5959],
      "op": "JUMP",
      "path": "12"
    },
    "10029": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10030": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10032": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10034": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "MLOAD",
      "path": "12"
    },
    "10035": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP1",
      "path": "12"
    },
    "10036": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP4",
      "path": "12"
    },
    "10037": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "SUB",
      "path": "12"
    },
    "10038": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP2",
      "path": "12"
    },
    "10039": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10041": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP8",
      "path": "12"
    },
    "10042": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP1",
      "path": "12"
    },
    "10043": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "10044": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "ISZERO",
      "path": "12"
    },
    "10045": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP1",
      "path": "12"
    },
    "10046": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "ISZERO",
      "path": "12"
    },
    "10047": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2747"
    },
    "10050": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "JUMPI",
      "path": "12"
    },
    "10051": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10053": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP1",
      "path": "12"
    },
    "10054": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "REVERT",
      "path": "12"
    },
    "10055": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10056": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "POP",
      "path": "12"
    },
    "10057": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "GAS",
      "path": "12"
    },
    "10058": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "CALL",
      "path": "12"
    },
    "10059": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "ISZERO",
      "path": "12"
    },
    "10060": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP1",
      "path": "12"
    },
    "10061": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "ISZERO",
      "path": "12"
    },
    "10062": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH2",
      "path": "12",
      "value": "0x275B"
    },
    "10065": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "JUMPI",
      "path": "12"
    },
    "10066": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "10067": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10069": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP1",
      "path": "12"
    },
    "10070": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "10071": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "10072": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10074": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "REVERT",
      "path": "12"
    },
    "10075": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10076": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "POP",
      "path": "12"
    },
    "10077": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "POP",
      "path": "12"
    },
    "10078": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "POP",
      "path": "12"
    },
    "10079": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "POP",
      "path": "12"
    },
    "10080": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10082": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "MLOAD",
      "path": "12"
    },
    "10083": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "10084": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10086": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "NOT",
      "path": "12"
    },
    "10087": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10089": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP3",
      "path": "12"
    },
    "10090": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "ADD",
      "path": "12"
    },
    "10091": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "AND",
      "path": "12"
    },
    "10092": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP3",
      "path": "12"
    },
    "10093": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "ADD",
      "path": "12"
    },
    "10094": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP1",
      "path": "12"
    },
    "10095": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10097": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "MSTORE",
      "path": "12"
    },
    "10098": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "POP",
      "path": "12"
    },
    "10099": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "DUP2",
      "path": "12"
    },
    "10100": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "ADD",
      "path": "12"
    },
    "10101": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "SWAP1",
      "path": "12"
    },
    "10102": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH2",
      "path": "12",
      "value": "0x277F"
    },
    "10105": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "SWAP2",
      "path": "12"
    },
    "10106": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "SWAP1",
      "path": "12"
    },
    "10107": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "10110": {
      "fn": "MainStaking.deposit",
      "jump": "i",
      "offset": [5897, 5959],
      "op": "JUMP",
      "path": "12"
    },
    "10111": {
      "fn": "MainStaking.deposit",
      "offset": [5897, 5959],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10112": {
      "op": "POP"
    },
    "10113": {
      "fn": "MainStaking.deposit",
      "offset": [5985, 5999],
      "op": "PUSH1",
      "path": "12",
      "statement": 91,
      "value": "0x69"
    },
    "10115": {
      "fn": "MainStaking.deposit",
      "offset": [5985, 5999],
      "op": "SLOAD",
      "path": "12"
    },
    "10116": {
      "fn": "MainStaking.deposit",
      "offset": [6009, 6021],
      "op": "DUP3",
      "path": "12"
    },
    "10117": {
      "fn": "MainStaking.deposit",
      "offset": [6009, 6021],
      "op": "SLOAD",
      "path": "12"
    },
    "10118": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10120": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "MLOAD",
      "path": "12"
    },
    "10121": {
      "op": "PUSH4",
      "value": "0x1C57762B"
    },
    "10126": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "10128": {
      "op": "SHL"
    },
    "10129": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "DUP2",
      "path": "12"
    },
    "10130": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "MSTORE",
      "path": "12"
    },
    "10131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10137": {
      "op": "SHL"
    },
    "10138": {
      "op": "SUB"
    },
    "10139": {
      "fn": "MainStaking.deposit",
      "offset": [5985, 5999],
      "op": "SWAP1",
      "path": "12"
    },
    "10140": {
      "fn": "MainStaking.deposit",
      "offset": [5985, 5999],
      "op": "SWAP3",
      "path": "12"
    },
    "10141": {
      "fn": "MainStaking.deposit",
      "offset": [5985, 5999],
      "op": "AND",
      "path": "12"
    },
    "10142": {
      "fn": "MainStaking.deposit",
      "offset": [5985, 5999],
      "op": "SWAP2",
      "path": "12"
    },
    "10143": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6008],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE2BBB158"
    },
    "10148": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6008],
      "op": "SWAP2",
      "path": "12"
    },
    "10149": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27BB"
    },
    "10152": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "SWAP2",
      "path": "12"
    },
    "10153": {
      "fn": "MainStaking.deposit",
      "offset": [6023, 6033],
      "op": "DUP6",
      "path": "12"
    },
    "10154": {
      "fn": "MainStaking.deposit",
      "offset": [6023, 6033],
      "op": "SWAP1",
      "path": "12"
    },
    "10155": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10157": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "ADD",
      "path": "12"
    },
    "10158": {
      "op": "SWAP2"
    },
    "10159": {
      "op": "DUP3"
    },
    "10160": {
      "op": "MSTORE"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10163": {
      "op": "DUP3"
    },
    "10164": {
      "op": "ADD"
    },
    "10165": {
      "op": "MSTORE"
    },
    "10166": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10168": {
      "op": "ADD"
    },
    "10169": {
      "op": "SWAP1"
    },
    "10170": {
      "op": "JUMP"
    },
    "10171": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10172": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10174": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10176": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "MLOAD",
      "path": "12"
    },
    "10177": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "DUP1",
      "path": "12"
    },
    "10178": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "DUP4",
      "path": "12"
    },
    "10179": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "SUB",
      "path": "12"
    },
    "10180": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "DUP2",
      "path": "12"
    },
    "10181": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10183": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "DUP8",
      "path": "12"
    },
    "10184": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "DUP1",
      "path": "12"
    },
    "10185": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "10186": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "ISZERO",
      "path": "12"
    },
    "10187": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "DUP1",
      "path": "12"
    },
    "10188": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "ISZERO",
      "path": "12"
    },
    "10189": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27D5"
    },
    "10192": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "JUMPI",
      "path": "12"
    },
    "10193": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10195": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "DUP1",
      "path": "12"
    },
    "10196": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "REVERT",
      "path": "12"
    },
    "10197": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10198": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "POP",
      "path": "12"
    },
    "10199": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "GAS",
      "path": "12"
    },
    "10200": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "CALL",
      "path": "12"
    },
    "10201": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "ISZERO",
      "path": "12"
    },
    "10202": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "DUP1",
      "path": "12"
    },
    "10203": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "ISZERO",
      "path": "12"
    },
    "10204": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27E9"
    },
    "10207": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "JUMPI",
      "path": "12"
    },
    "10208": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "10209": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10211": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "DUP1",
      "path": "12"
    },
    "10212": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "10213": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "10214": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10216": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "REVERT",
      "path": "12"
    },
    "10217": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10218": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "POP",
      "path": "12"
    },
    "10219": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "POP",
      "path": "12"
    },
    "10220": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "POP",
      "path": "12"
    },
    "10221": {
      "fn": "MainStaking.deposit",
      "offset": [5969, 6034],
      "op": "POP",
      "path": "12"
    },
    "10222": {
      "fn": "MainStaking.deposit",
      "offset": [6072, 6098],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10224": {
      "fn": "MainStaking.deposit",
      "offset": [6101, 6141],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27F9"
    },
    "10227": {
      "fn": "MainStaking.deposit",
      "offset": [6127, 6133],
      "op": "DUP6",
      "path": "12"
    },
    "10228": {
      "fn": "MainStaking.deposit",
      "offset": [6135, 6140],
      "op": "DUP8",
      "path": "12"
    },
    "10229": {
      "fn": "MainStaking.deposit",
      "offset": [6101, 6126],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22F0"
    },
    "10232": {
      "fn": "MainStaking.deposit",
      "jump": "i",
      "offset": [6101, 6141],
      "op": "JUMP",
      "path": "12"
    },
    "10233": {
      "fn": "MainStaking.deposit",
      "offset": [6101, 6141],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10234": {
      "fn": "MainStaking.deposit",
      "offset": [6158, 6179],
      "op": "PUSH1",
      "path": "12",
      "statement": 92,
      "value": "0x5"
    },
    "10236": {
      "fn": "MainStaking.deposit",
      "offset": [6158, 6179],
      "op": "DUP5",
      "path": "12"
    },
    "10237": {
      "fn": "MainStaking.deposit",
      "offset": [6158, 6179],
      "op": "ADD",
      "path": "12"
    },
    "10238": {
      "fn": "MainStaking.deposit",
      "offset": [6158, 6179],
      "op": "SLOAD",
      "path": "12"
    },
    "10239": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10241": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "MLOAD",
      "path": "12"
    },
    "10242": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "10247": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10249": {
      "op": "SHL"
    },
    "10250": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "DUP2",
      "path": "12"
    },
    "10251": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "MSTORE",
      "path": "12"
    },
    "10252": {
      "fn": "MainStaking.deposit",
      "offset": [6072, 6141],
      "op": "SWAP2",
      "path": "12"
    },
    "10253": {
      "fn": "MainStaking.deposit",
      "offset": [6072, 6141],
      "op": "SWAP3",
      "path": "12"
    },
    "10254": {
      "op": "POP"
    },
    "10255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10261": {
      "op": "SHL"
    },
    "10262": {
      "op": "SUB"
    },
    "10263": {
      "fn": "MainStaking.deposit",
      "offset": [6158, 6179],
      "op": "AND",
      "path": "12"
    },
    "10264": {
      "fn": "MainStaking.deposit",
      "offset": [6158, 6179],
      "op": "SWAP1",
      "path": "12"
    },
    "10265": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6185],
      "op": "PUSH4",
      "path": "12",
      "value": "0x40C10F19"
    },
    "10270": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6185],
      "op": "SWAP1",
      "path": "12"
    },
    "10271": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "PUSH2",
      "path": "12",
      "value": "0x282E"
    },
    "10274": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "SWAP1",
      "path": "12"
    },
    "10275": {
      "fn": "MainStaking.deposit",
      "offset": [6186, 6196],
      "op": "CALLER",
      "path": "12"
    },
    "10276": {
      "fn": "MainStaking.deposit",
      "offset": [6186, 6196],
      "op": "SWAP1",
      "path": "12"
    },
    "10277": {
      "fn": "MainStaking.deposit",
      "offset": [6072, 6141],
      "op": "DUP6",
      "path": "12"
    },
    "10278": {
      "fn": "MainStaking.deposit",
      "offset": [6072, 6141],
      "op": "SWAP1",
      "path": "12"
    },
    "10279": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10281": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "ADD",
      "path": "12"
    },
    "10282": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "10285": {
      "fn": "MainStaking.deposit",
      "jump": "i",
      "offset": [6151, 6217],
      "op": "JUMP",
      "path": "12"
    },
    "10286": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10287": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10289": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10291": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "MLOAD",
      "path": "12"
    },
    "10292": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "DUP1",
      "path": "12"
    },
    "10293": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "DUP4",
      "path": "12"
    },
    "10294": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "SUB",
      "path": "12"
    },
    "10295": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "DUP2",
      "path": "12"
    },
    "10296": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10298": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "DUP8",
      "path": "12"
    },
    "10299": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "DUP1",
      "path": "12"
    },
    "10300": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "10301": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "ISZERO",
      "path": "12"
    },
    "10302": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "DUP1",
      "path": "12"
    },
    "10303": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "ISZERO",
      "path": "12"
    },
    "10304": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2848"
    },
    "10307": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "JUMPI",
      "path": "12"
    },
    "10308": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10310": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "DUP1",
      "path": "12"
    },
    "10311": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "REVERT",
      "path": "12"
    },
    "10312": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10313": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "POP",
      "path": "12"
    },
    "10314": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "GAS",
      "path": "12"
    },
    "10315": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "CALL",
      "path": "12"
    },
    "10316": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "ISZERO",
      "path": "12"
    },
    "10317": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "DUP1",
      "path": "12"
    },
    "10318": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "ISZERO",
      "path": "12"
    },
    "10319": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "PUSH2",
      "path": "12",
      "value": "0x285C"
    },
    "10322": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "JUMPI",
      "path": "12"
    },
    "10323": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "10324": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10326": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "DUP1",
      "path": "12"
    },
    "10327": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "10328": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "10329": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10331": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "REVERT",
      "path": "12"
    },
    "10332": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10333": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "POP",
      "path": "12"
    },
    "10334": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "POP",
      "path": "12"
    },
    "10335": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "POP",
      "path": "12"
    },
    "10336": {
      "fn": "MainStaking.deposit",
      "offset": [6151, 6217],
      "op": "POP",
      "path": "12"
    },
    "10337": {
      "fn": "MainStaking.deposit",
      "offset": [6244, 6250],
      "op": "DUP5",
      "path": "12",
      "statement": 93
    },
    "10338": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6235],
      "op": "DUP4",
      "path": "12"
    },
    "10339": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6240],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10341": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6240],
      "op": "ADD",
      "path": "12"
    },
    "10342": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6240],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10344": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "DUP3",
      "path": "12"
    },
    "10345": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "DUP3",
      "path": "12"
    },
    "10346": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "SLOAD",
      "path": "12"
    },
    "10347": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2874"
    },
    "10350": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "SWAP2",
      "path": "12"
    },
    "10351": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "SWAP1",
      "path": "12"
    },
    "10352": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3930"
    },
    "10355": {
      "fn": "MainStaking.deposit",
      "jump": "i",
      "offset": [6227, 6250],
      "op": "JUMP",
      "path": "12"
    },
    "10356": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10357": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "SWAP3",
      "path": "12"
    },
    "10358": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "POP",
      "path": "12"
    },
    "10359": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "POP",
      "path": "12"
    },
    "10360": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "DUP2",
      "path": "12"
    },
    "10361": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "SWAP1",
      "path": "12"
    },
    "10362": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "SSTORE",
      "path": "12"
    },
    "10363": {
      "fn": "MainStaking.deposit",
      "offset": [6227, 6250],
      "op": "POP",
      "path": "12"
    },
    "10364": {
      "fn": "MainStaking.deposit",
      "offset": [6279, 6289],
      "op": "DUP2",
      "path": "12",
      "statement": 94
    },
    "10365": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6268],
      "op": "DUP4",
      "path": "12"
    },
    "10366": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6275],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "10368": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6275],
      "op": "ADD",
      "path": "12"
    },
    "10369": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6275],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10371": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "DUP3",
      "path": "12"
    },
    "10372": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "DUP3",
      "path": "12"
    },
    "10373": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "SLOAD",
      "path": "12"
    },
    "10374": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "PUSH2",
      "path": "12",
      "value": "0x288F"
    },
    "10377": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "SWAP2",
      "path": "12"
    },
    "10378": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "SWAP1",
      "path": "12"
    },
    "10379": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3930"
    },
    "10382": {
      "fn": "MainStaking.deposit",
      "jump": "i",
      "offset": [6260, 6289],
      "op": "JUMP",
      "path": "12"
    },
    "10383": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10384": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "SWAP3",
      "path": "12"
    },
    "10385": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "POP",
      "path": "12"
    },
    "10386": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "POP",
      "path": "12"
    },
    "10387": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "DUP2",
      "path": "12"
    },
    "10388": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "SWAP1",
      "path": "12"
    },
    "10389": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "SSTORE",
      "path": "12"
    },
    "10390": {
      "fn": "MainStaking.deposit",
      "offset": [6260, 6289],
      "op": "POP",
      "path": "12"
    },
    "10391": {
      "fn": "MainStaking.deposit",
      "offset": [6323, 6328],
      "op": "DUP6",
      "path": "12",
      "statement": 95
    },
    "10392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10398": {
      "op": "SHL"
    },
    "10399": {
      "op": "SUB"
    },
    "10400": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "AND",
      "path": "12"
    },
    "10401": {
      "fn": "MainStaking.deposit",
      "offset": [6315, 6321],
      "op": "DUP5",
      "path": "12"
    },
    "10402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10408": {
      "op": "SHL"
    },
    "10409": {
      "op": "SUB"
    },
    "10410": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "AND",
      "path": "12"
    },
    "10411": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "PUSH32",
      "path": "12",
      "value": "0x83DF459D706116D1B3F1C7B7F77CFEA4C635275F5D1E1A53827F536EF48DB77D"
    },
    "10444": {
      "fn": "MainStaking.deposit",
      "offset": [6330, 6336],
      "op": "DUP8",
      "path": "12"
    },
    "10445": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10447": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "MLOAD",
      "path": "12"
    },
    "10448": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28DB"
    },
    "10451": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "SWAP2",
      "path": "12"
    },
    "10452": {
      "op": "DUP2"
    },
    "10453": {
      "op": "MSTORE"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10456": {
      "op": "ADD"
    },
    "10457": {
      "op": "SWAP1"
    },
    "10458": {
      "op": "JUMP"
    },
    "10459": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10460": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10462": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "MLOAD",
      "path": "12"
    },
    "10463": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "DUP1",
      "path": "12"
    },
    "10464": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "SWAP2",
      "path": "12"
    },
    "10465": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "SUB",
      "path": "12"
    },
    "10466": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "SWAP1",
      "path": "12"
    },
    "10467": {
      "fn": "MainStaking.deposit",
      "offset": [6304, 6337],
      "op": "LOG3",
      "path": "12"
    },
    "10468": {
      "fn": "MainStaking.deposit",
      "offset": [5151, 6344],
      "op": "POP",
      "path": "12"
    },
    "10469": {
      "fn": "MainStaking.deposit",
      "offset": [5151, 6344],
      "op": "POP",
      "path": "12"
    },
    "10470": {
      "fn": "MainStaking.deposit",
      "offset": [5151, 6344],
      "op": "POP",
      "path": "12"
    },
    "10471": {
      "fn": "MainStaking.deposit",
      "offset": [5048, 6344],
      "op": "POP",
      "path": "12"
    },
    "10472": {
      "fn": "MainStaking.deposit",
      "offset": [5048, 6344],
      "op": "POP",
      "path": "12"
    },
    "10473": {
      "fn": "MainStaking.deposit",
      "offset": [5048, 6344],
      "op": "POP",
      "path": "12"
    },
    "10474": {
      "fn": "MainStaking.deposit",
      "jump": "o",
      "offset": [5048, 6344],
      "op": "JUMP",
      "path": "12"
    },
    "10475": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [702, 907],
      "op": "JUMPDEST",
      "path": "29"
    },
    "10476": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [814, 900],
      "op": "PUSH2",
      "path": "29",
      "statement": 96,
      "value": "0x2941"
    },
    "10479": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [834, 839],
      "op": "DUP4",
      "path": "29"
    },
    "10480": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [864, 887],
      "op": "PUSH4",
      "path": "29",
      "value": "0xA9059CBB"
    },
    "10485": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [864, 887],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "10487": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [864, 887],
      "op": "SHL",
      "path": "29"
    },
    "10488": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [889, 891],
      "op": "DUP5",
      "path": "29"
    },
    "10489": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [893, 898],
      "op": "DUP5",
      "path": "29"
    },
    "10490": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "10492": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "MLOAD",
      "path": "29"
    },
    "10493": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "10495": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "ADD",
      "path": "29"
    },
    "10496": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "PUSH2",
      "path": "29",
      "value": "0x290A"
    },
    "10499": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SWAP3",
      "path": "29"
    },
    "10500": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SWAP2",
      "path": "29"
    },
    "10501": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SWAP1",
      "path": "29"
    },
    "10502": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3856"
    },
    "10505": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [841, 899],
      "op": "JUMP",
      "path": "29"
    },
    "10506": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "JUMPDEST",
      "path": "29"
    },
    "10507": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "10509": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "DUP1",
      "path": "29"
    },
    "10510": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "MLOAD",
      "path": "29"
    },
    "10511": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10513": {
      "op": "NOT"
    },
    "10514": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "DUP2",
      "path": "29"
    },
    "10515": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "DUP5",
      "path": "29"
    },
    "10516": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SUB",
      "path": "29"
    },
    "10517": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "ADD",
      "path": "29"
    },
    "10518": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "DUP2",
      "path": "29"
    },
    "10519": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "MSTORE",
      "path": "29"
    },
    "10520": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SWAP2",
      "path": "29"
    },
    "10521": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SWAP1",
      "path": "29"
    },
    "10522": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "MSTORE",
      "path": "29"
    },
    "10523": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "10525": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "DUP2",
      "path": "29"
    },
    "10526": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "ADD",
      "path": "29"
    },
    "10527": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "DUP1",
      "path": "29"
    },
    "10528": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "MLOAD",
      "path": "29"
    },
    "10529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10535": {
      "op": "SHL"
    },
    "10536": {
      "op": "SUB"
    },
    "10537": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "AND",
      "path": "29"
    },
    "10538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10542": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10544": {
      "op": "SHL"
    },
    "10545": {
      "op": "SUB"
    },
    "10546": {
      "op": "NOT"
    },
    "10547": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SWAP1",
      "path": "29"
    },
    "10548": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SWAP4",
      "path": "29"
    },
    "10549": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "AND",
      "path": "29"
    },
    "10550": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SWAP3",
      "path": "29"
    },
    "10551": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SWAP1",
      "path": "29"
    },
    "10552": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SWAP3",
      "path": "29"
    },
    "10553": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "OR",
      "path": "29"
    },
    "10554": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SWAP1",
      "path": "29"
    },
    "10555": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "SWAP2",
      "path": "29"
    },
    "10556": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [841, 899],
      "op": "MSTORE",
      "path": "29"
    },
    "10557": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [814, 833],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3188"
    },
    "10560": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [814, 900],
      "op": "JUMP",
      "path": "29"
    },
    "10561": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [814, 900],
      "op": "JUMPDEST",
      "path": "29"
    },
    "10562": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [702, 907],
      "op": "POP",
      "path": "29"
    },
    "10563": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [702, 907],
      "op": "POP",
      "path": "29"
    },
    "10564": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [702, 907],
      "op": "POP",
      "path": "29"
    },
    "10565": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [702, 907],
      "op": "JUMP",
      "path": "29"
    },
    "10566": {
      "fn": "MainStaking.sendRewards",
      "offset": [7371, 9500],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10567": {
      "fn": "MainStaking.sendRewards",
      "offset": [7544, 7553],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10569": {
      "fn": "MainStaking.sendRewards",
      "offset": [7539, 9040],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10570": {
      "fn": "MainStaking.sendRewards",
      "offset": [7563, 7571],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6E"
    },
    "10572": {
      "fn": "MainStaking.sendRewards",
      "offset": [7563, 7578],
      "op": "SLOAD",
      "path": "12"
    },
    "10573": {
      "fn": "MainStaking.sendRewards",
      "offset": [7559, 7578],
      "op": "DUP2",
      "path": "12"
    },
    "10574": {
      "fn": "MainStaking.sendRewards",
      "offset": [7559, 7578],
      "op": "LT",
      "path": "12"
    },
    "10575": {
      "fn": "MainStaking.sendRewards",
      "offset": [7539, 9040],
      "op": "ISZERO",
      "path": "12"
    },
    "10576": {
      "fn": "MainStaking.sendRewards",
      "offset": [7539, 9040],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EDF"
    },
    "10579": {
      "fn": "MainStaking.sendRewards",
      "offset": [7539, 9040],
      "op": "JUMPI",
      "path": "12"
    },
    "10580": {
      "fn": "MainStaking.sendRewards",
      "offset": [7599, 7619],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10582": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7630],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6E"
    },
    "10584": {
      "fn": "MainStaking.sendRewards",
      "offset": [7631, 7632],
      "op": "DUP3",
      "path": "12"
    },
    "10585": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "DUP2",
      "path": "12"
    },
    "10586": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "SLOAD",
      "path": "12"
    },
    "10587": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "DUP2",
      "path": "12"
    },
    "10588": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "LT",
      "path": "12"
    },
    "10589": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2968"
    },
    "10592": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "JUMPI",
      "path": "12"
    },
    "10593": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2968"
    },
    "10596": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39FD"
    },
    "10599": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [7622, 7633],
      "op": "JUMP",
      "path": "12"
    },
    "10600": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10601": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "SWAP1",
      "path": "12"
    },
    "10602": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10604": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "MSTORE",
      "path": "12"
    },
    "10605": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10607": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10609": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "KECCAK256",
      "path": "12"
    },
    "10610": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "SWAP1",
      "path": "12"
    },
    "10611": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10613": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "MUL",
      "path": "12"
    },
    "10614": {
      "fn": "MainStaking.sendRewards",
      "offset": [7622, 7633],
      "op": "ADD",
      "path": "12"
    },
    "10615": {
      "fn": "MainStaking.sendRewards",
      "offset": [7599, 7633],
      "op": "SWAP1",
      "path": "12"
    },
    "10616": {
      "fn": "MainStaking.sendRewards",
      "offset": [7599, 7633],
      "op": "POP",
      "path": "12"
    },
    "10617": {
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7658],
      "op": "DUP1",
      "path": "12"
    },
    "10618": {
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "10620": {
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7667],
      "op": "ADD",
      "path": "12"
    },
    "10621": {
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7667],
      "op": "PUSH1",
      "path": "12",
      "value": "0x16"
    },
    "10623": {
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7667],
      "op": "SWAP1",
      "path": "12"
    },
    "10624": {
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7667],
      "op": "SLOAD",
      "path": "12"
    },
    "10625": {
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7667],
      "op": "SWAP1",
      "path": "12"
    },
    "10626": {
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7667],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "10629": {
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7667],
      "op": "EXP",
      "path": "12"
    },
    "10630": {
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7667],
      "op": "SWAP1",
      "path": "12"
    },
    "10631": {
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7667],
      "op": "DIV",
      "path": "12"
    },
    "10632": {
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7667],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "10634": {
      "branch": 143,
      "fn": "MainStaking.sendRewards",
      "offset": [7651, 7667],
      "op": "AND",
      "path": "12"
    },
    "10635": {
      "fn": "MainStaking.sendRewards",
      "offset": [7647, 9030],
      "op": "ISZERO",
      "path": "12"
    },
    "10636": {
      "fn": "MainStaking.sendRewards",
      "offset": [7647, 9030],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2ECC"
    },
    "10639": {
      "branch": 143,
      "fn": "MainStaking.sendRewards",
      "offset": [7647, 9030],
      "op": "JUMPI",
      "path": "12"
    },
    "10640": {
      "fn": "MainStaking.sendRewards",
      "offset": [7709, 7712],
      "op": "PUSH1",
      "path": "12",
      "value": "0x66"
    },
    "10642": {
      "fn": "MainStaking.sendRewards",
      "offset": [7709, 7712],
      "op": "SLOAD",
      "path": "12"
    },
    "10643": {
      "fn": "MainStaking.sendRewards",
      "offset": [7761, 7774],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "10645": {
      "fn": "MainStaking.sendRewards",
      "offset": [7761, 7774],
      "op": "DUP3",
      "path": "12"
    },
    "10646": {
      "fn": "MainStaking.sendRewards",
      "offset": [7761, 7774],
      "op": "ADD",
      "path": "12"
    },
    "10647": {
      "fn": "MainStaking.sendRewards",
      "offset": [7761, 7774],
      "op": "SLOAD",
      "path": "12"
    },
    "10648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10654": {
      "op": "SHL"
    },
    "10655": {
      "op": "SUB"
    },
    "10656": {
      "fn": "MainStaking.sendRewards",
      "offset": [7709, 7712],
      "op": "SWAP1",
      "path": "12"
    },
    "10657": {
      "fn": "MainStaking.sendRewards",
      "offset": [7709, 7712],
      "op": "SWAP2",
      "path": "12"
    },
    "10658": {
      "fn": "MainStaking.sendRewards",
      "offset": [7709, 7712],
      "op": "AND",
      "path": "12"
    },
    "10659": {
      "fn": "MainStaking.sendRewards",
      "offset": [7709, 7712],
      "op": "SWAP1",
      "path": "12"
    },
    "10660": {
      "fn": "MainStaking.sendRewards",
      "offset": [7687, 7706],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10662": {
      "fn": "MainStaking.sendRewards",
      "offset": [7687, 7706],
      "op": "SWAP1",
      "path": "12"
    },
    "10663": {
      "offset": [984, 989],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2710"
    },
    "10666": {
      "fn": "MainStaking.sendRewards",
      "offset": [984, 989],
      "op": "SWAP1",
      "path": "12"
    },
    "10667": {
      "fn": "MainStaking.sendRewards",
      "offset": [7751, 7774],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29B4"
    },
    "10670": {
      "fn": "MainStaking.sendRewards",
      "offset": [7751, 7774],
      "op": "SWAP1",
      "path": "12"
    },
    "10671": {
      "fn": "MainStaking.sendRewards",
      "offset": [7751, 7758],
      "op": "DUP10",
      "path": "12"
    },
    "10672": {
      "fn": "MainStaking.sendRewards",
      "offset": [7751, 7774],
      "op": "PUSH2",
      "path": "12",
      "value": "0x396A"
    },
    "10675": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [7751, 7774],
      "op": "JUMP",
      "path": "12"
    },
    "10676": {
      "fn": "MainStaking.sendRewards",
      "offset": [7751, 7774],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10677": {
      "fn": "MainStaking.sendRewards",
      "offset": [7750, 7793],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29BE"
    },
    "10680": {
      "fn": "MainStaking.sendRewards",
      "offset": [7750, 7793],
      "op": "SWAP2",
      "path": "12"
    },
    "10681": {
      "fn": "MainStaking.sendRewards",
      "offset": [7750, 7793],
      "op": "SWAP1",
      "path": "12"
    },
    "10682": {
      "fn": "MainStaking.sendRewards",
      "offset": [7750, 7793],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3948"
    },
    "10685": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [7750, 7793],
      "op": "JUMP",
      "path": "12"
    },
    "10686": {
      "fn": "MainStaking.sendRewards",
      "offset": [7750, 7793],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10687": {
      "fn": "MainStaking.sendRewards",
      "offset": [7816, 7829],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "10689": {
      "fn": "MainStaking.sendRewards",
      "offset": [7816, 7829],
      "op": "DUP5",
      "path": "12"
    },
    "10690": {
      "fn": "MainStaking.sendRewards",
      "offset": [7816, 7829],
      "op": "ADD",
      "path": "12"
    },
    "10691": {
      "fn": "MainStaking.sendRewards",
      "offset": [7816, 7829],
      "op": "SLOAD",
      "path": "12"
    },
    "10692": {
      "fn": "MainStaking.sendRewards",
      "offset": [7730, 7793],
      "op": "SWAP1",
      "path": "12"
    },
    "10693": {
      "fn": "MainStaking.sendRewards",
      "offset": [7730, 7793],
      "op": "SWAP2",
      "path": "12"
    },
    "10694": {
      "op": "POP"
    },
    "10695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10699": {
      "op": "SHL"
    },
    "10700": {
      "fn": "MainStaking.sendRewards",
      "offset": [7816, 7829],
      "op": "SWAP1",
      "path": "12"
    },
    "10701": {
      "fn": "MainStaking.sendRewards",
      "offset": [7816, 7829],
      "op": "DIV",
      "path": "12"
    },
    "10702": {
      "fn": "MainStaking.sendRewards",
      "offset": [7816, 7829],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "10704": {
      "branch": 144,
      "fn": "MainStaking.sendRewards",
      "offset": [7816, 7829],
      "op": "AND",
      "path": "12"
    },
    "10705": {
      "fn": "MainStaking.sendRewards",
      "offset": [7811, 8000],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2ACA"
    },
    "10708": {
      "branch": 144,
      "fn": "MainStaking.sendRewards",
      "offset": [7811, 8000],
      "op": "JUMPI",
      "path": "12"
    },
    "10709": {
      "fn": "MainStaking.sendRewards",
      "offset": [7860, 7863],
      "op": "PUSH1",
      "path": "12",
      "statement": 97,
      "value": "0x66"
    },
    "10711": {
      "fn": "MainStaking.sendRewards",
      "offset": [7860, 7863],
      "op": "SLOAD",
      "path": "12"
    },
    "10712": {
      "fn": "MainStaking.sendRewards",
      "offset": [7873, 7877],
      "op": "PUSH1",
      "path": "12",
      "value": "0x67"
    },
    "10714": {
      "fn": "MainStaking.sendRewards",
      "offset": [7873, 7877],
      "op": "SLOAD",
      "path": "12"
    },
    "10715": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10717": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "MLOAD",
      "path": "12"
    },
    "10718": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "10723": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10725": {
      "op": "SHL"
    },
    "10726": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP2",
      "path": "12"
    },
    "10727": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "MSTORE",
      "path": "12"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10734": {
      "op": "SHL"
    },
    "10735": {
      "op": "SUB"
    },
    "10736": {
      "fn": "MainStaking.sendRewards",
      "offset": [7860, 7863],
      "op": "SWAP3",
      "path": "12"
    },
    "10737": {
      "fn": "MainStaking.sendRewards",
      "offset": [7860, 7863],
      "op": "DUP4",
      "path": "12"
    },
    "10738": {
      "fn": "MainStaking.sendRewards",
      "offset": [7860, 7863],
      "op": "AND",
      "path": "12"
    },
    "10739": {
      "fn": "MainStaking.sendRewards",
      "offset": [7860, 7863],
      "op": "SWAP3",
      "path": "12"
    },
    "10740": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7872],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95EA7B3"
    },
    "10745": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7872],
      "op": "SWAP3",
      "path": "12"
    },
    "10746": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A0A"
    },
    "10749": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "SWAP3",
      "path": "12"
    },
    "10750": {
      "fn": "MainStaking.sendRewards",
      "offset": [7873, 7877],
      "op": "SWAP2",
      "path": "12"
    },
    "10751": {
      "fn": "MainStaking.sendRewards",
      "offset": [7873, 7877],
      "op": "AND",
      "path": "12"
    },
    "10752": {
      "fn": "MainStaking.sendRewards",
      "offset": [7873, 7877],
      "op": "SWAP1",
      "path": "12"
    },
    "10753": {
      "fn": "MainStaking.sendRewards",
      "offset": [7879, 7888],
      "op": "DUP6",
      "path": "12"
    },
    "10754": {
      "fn": "MainStaking.sendRewards",
      "offset": [7879, 7888],
      "op": "SWAP1",
      "path": "12"
    },
    "10755": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10757": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "ADD",
      "path": "12"
    },
    "10758": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "10761": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [7853, 7889],
      "op": "JUMP",
      "path": "12"
    },
    "10762": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10763": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10765": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10767": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "MLOAD",
      "path": "12"
    },
    "10768": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP1",
      "path": "12"
    },
    "10769": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP4",
      "path": "12"
    },
    "10770": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "SUB",
      "path": "12"
    },
    "10771": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP2",
      "path": "12"
    },
    "10772": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10774": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP8",
      "path": "12"
    },
    "10775": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP1",
      "path": "12"
    },
    "10776": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "10777": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "ISZERO",
      "path": "12"
    },
    "10778": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP1",
      "path": "12"
    },
    "10779": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "ISZERO",
      "path": "12"
    },
    "10780": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A24"
    },
    "10783": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "JUMPI",
      "path": "12"
    },
    "10784": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10786": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP1",
      "path": "12"
    },
    "10787": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "REVERT",
      "path": "12"
    },
    "10788": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10789": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "POP",
      "path": "12"
    },
    "10790": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "GAS",
      "path": "12"
    },
    "10791": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "CALL",
      "path": "12"
    },
    "10792": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "ISZERO",
      "path": "12"
    },
    "10793": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP1",
      "path": "12"
    },
    "10794": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "ISZERO",
      "path": "12"
    },
    "10795": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A38"
    },
    "10798": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "JUMPI",
      "path": "12"
    },
    "10799": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "10800": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10802": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP1",
      "path": "12"
    },
    "10803": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "10804": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "10805": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10807": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "REVERT",
      "path": "12"
    },
    "10808": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10809": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "POP",
      "path": "12"
    },
    "10810": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "POP",
      "path": "12"
    },
    "10811": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "POP",
      "path": "12"
    },
    "10812": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "POP",
      "path": "12"
    },
    "10813": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10815": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "MLOAD",
      "path": "12"
    },
    "10816": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "10817": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10819": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "NOT",
      "path": "12"
    },
    "10820": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10822": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP3",
      "path": "12"
    },
    "10823": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "ADD",
      "path": "12"
    },
    "10824": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "AND",
      "path": "12"
    },
    "10825": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP3",
      "path": "12"
    },
    "10826": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "ADD",
      "path": "12"
    },
    "10827": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP1",
      "path": "12"
    },
    "10828": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10830": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "MSTORE",
      "path": "12"
    },
    "10831": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "POP",
      "path": "12"
    },
    "10832": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "DUP2",
      "path": "12"
    },
    "10833": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "ADD",
      "path": "12"
    },
    "10834": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "SWAP1",
      "path": "12"
    },
    "10835": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A5C"
    },
    "10838": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "SWAP2",
      "path": "12"
    },
    "10839": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "SWAP1",
      "path": "12"
    },
    "10840": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "10843": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [7853, 7889],
      "op": "JUMP",
      "path": "12"
    },
    "10844": {
      "fn": "MainStaking.sendRewards",
      "offset": [7853, 7889],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10845": {
      "op": "POP"
    },
    "10846": {
      "fn": "MainStaking.sendRewards",
      "offset": [7917, 7921],
      "op": "PUSH1",
      "path": "12",
      "statement": 98,
      "value": "0x67"
    },
    "10848": {
      "fn": "MainStaking.sendRewards",
      "offset": [7917, 7921],
      "op": "SLOAD",
      "path": "12"
    },
    "10849": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10851": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "MLOAD",
      "path": "12"
    },
    "10852": {
      "op": "PUSH4",
      "value": "0xB6B55F25"
    },
    "10857": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10859": {
      "op": "SHL"
    },
    "10860": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "DUP2",
      "path": "12"
    },
    "10861": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "MSTORE",
      "path": "12"
    },
    "10862": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10864": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "DUP2",
      "path": "12"
    },
    "10865": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "ADD",
      "path": "12"
    },
    "10866": {
      "op": "DUP4"
    },
    "10867": {
      "op": "SWAP1"
    },
    "10868": {
      "op": "MSTORE"
    },
    "10869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10875": {
      "op": "SHL"
    },
    "10876": {
      "op": "SUB"
    },
    "10877": {
      "fn": "MainStaking.sendRewards",
      "offset": [7917, 7921],
      "op": "SWAP1",
      "path": "12"
    },
    "10878": {
      "fn": "MainStaking.sendRewards",
      "offset": [7917, 7921],
      "op": "SWAP2",
      "path": "12"
    },
    "10879": {
      "fn": "MainStaking.sendRewards",
      "offset": [7917, 7921],
      "op": "AND",
      "path": "12"
    },
    "10880": {
      "fn": "MainStaking.sendRewards",
      "offset": [7917, 7921],
      "op": "SWAP1",
      "path": "12"
    },
    "10881": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7930],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB6B55F25"
    },
    "10886": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7930],
      "op": "SWAP1",
      "path": "12"
    },
    "10887": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10889": {
      "op": "ADD"
    },
    "10890": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10892": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10894": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "MLOAD",
      "path": "12"
    },
    "10895": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "DUP1",
      "path": "12"
    },
    "10896": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "DUP4",
      "path": "12"
    },
    "10897": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "SUB",
      "path": "12"
    },
    "10898": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "DUP2",
      "path": "12"
    },
    "10899": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10901": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "DUP8",
      "path": "12"
    },
    "10902": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "DUP1",
      "path": "12"
    },
    "10903": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "10904": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "ISZERO",
      "path": "12"
    },
    "10905": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "DUP1",
      "path": "12"
    },
    "10906": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "ISZERO",
      "path": "12"
    },
    "10907": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AA3"
    },
    "10910": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "JUMPI",
      "path": "12"
    },
    "10911": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10913": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "DUP1",
      "path": "12"
    },
    "10914": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "REVERT",
      "path": "12"
    },
    "10915": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10916": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "POP",
      "path": "12"
    },
    "10917": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "GAS",
      "path": "12"
    },
    "10918": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "CALL",
      "path": "12"
    },
    "10919": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "ISZERO",
      "path": "12"
    },
    "10920": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "DUP1",
      "path": "12"
    },
    "10921": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "ISZERO",
      "path": "12"
    },
    "10922": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AB7"
    },
    "10925": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "JUMPI",
      "path": "12"
    },
    "10926": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "10927": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10929": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "DUP1",
      "path": "12"
    },
    "10930": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "10931": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "10932": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10934": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "REVERT",
      "path": "12"
    },
    "10935": {
      "fn": "MainStaking.sendRewards",
      "offset": [7911, 7941],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10936": {
      "op": "POP"
    },
    "10937": {
      "op": "POP"
    },
    "10938": {
      "fn": "MainStaking.sendRewards",
      "offset": [7977, 7981],
      "op": "PUSH1",
      "path": "12",
      "statement": 99,
      "value": "0x67"
    },
    "10940": {
      "fn": "MainStaking.sendRewards",
      "offset": [7977, 7981],
      "op": "SLOAD",
      "path": "12"
    },
    "10941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10947": {
      "op": "SHL"
    },
    "10948": {
      "op": "SUB"
    },
    "10949": {
      "fn": "MainStaking.sendRewards",
      "offset": [7977, 7981],
      "op": "AND",
      "path": "12"
    },
    "10950": {
      "fn": "MainStaking.sendRewards",
      "offset": [7977, 7981],
      "op": "SWAP4",
      "path": "12"
    },
    "10951": {
      "op": "POP"
    },
    "10952": {
      "op": "POP"
    },
    "10953": {
      "op": "POP"
    },
    "10954": {
      "fn": "MainStaking.sendRewards",
      "offset": [7811, 8000],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10955": {
      "fn": "MainStaking.sendRewards",
      "offset": [8022, 8039],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "10957": {
      "fn": "MainStaking.sendRewards",
      "offset": [8022, 8039],
      "op": "DUP4",
      "path": "12"
    },
    "10958": {
      "fn": "MainStaking.sendRewards",
      "offset": [8022, 8039],
      "op": "ADD",
      "path": "12"
    },
    "10959": {
      "fn": "MainStaking.sendRewards",
      "offset": [8022, 8039],
      "op": "SLOAD",
      "path": "12"
    },
    "10960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10962": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "10964": {
      "op": "SHL"
    },
    "10965": {
      "fn": "MainStaking.sendRewards",
      "offset": [8022, 8039],
      "op": "SWAP1",
      "path": "12"
    },
    "10966": {
      "fn": "MainStaking.sendRewards",
      "offset": [8022, 8039],
      "op": "DIV",
      "path": "12"
    },
    "10967": {
      "fn": "MainStaking.sendRewards",
      "offset": [8022, 8039],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "10969": {
      "branch": 145,
      "fn": "MainStaking.sendRewards",
      "offset": [8022, 8039],
      "op": "AND",
      "path": "12"
    },
    "10970": {
      "fn": "MainStaking.sendRewards",
      "offset": [8017, 8977],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2DE8"
    },
    "10973": {
      "branch": 145,
      "fn": "MainStaking.sendRewards",
      "offset": [8017, 8977],
      "op": "JUMPI",
      "path": "12"
    },
    "10974": {
      "fn": "MainStaking.sendRewards",
      "offset": [8091, 8101],
      "op": "PUSH1",
      "path": "12",
      "statement": 100,
      "value": "0x3"
    },
    "10976": {
      "fn": "MainStaking.sendRewards",
      "offset": [8091, 8101],
      "op": "DUP4",
      "path": "12"
    },
    "10977": {
      "fn": "MainStaking.sendRewards",
      "offset": [8091, 8101],
      "op": "ADD",
      "path": "12"
    },
    "10978": {
      "fn": "MainStaking.sendRewards",
      "offset": [8091, 8101],
      "op": "SLOAD",
      "path": "12"
    },
    "10979": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10981": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "MLOAD",
      "path": "12"
    },
    "10982": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "10987": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10989": {
      "op": "SHL"
    },
    "10990": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP2",
      "path": "12"
    },
    "10991": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "MSTORE",
      "path": "12"
    },
    "10992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10998": {
      "op": "SHL"
    },
    "10999": {
      "op": "SUB"
    },
    "11000": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8090],
      "op": "DUP5",
      "path": "12"
    },
    "11001": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8090],
      "op": "DUP2",
      "path": "12"
    },
    "11002": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8090],
      "op": "AND",
      "path": "12"
    },
    "11003": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8090],
      "op": "SWAP3",
      "path": "12"
    },
    "11004": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8090],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95EA7B3"
    },
    "11009": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8090],
      "op": "SWAP3",
      "path": "12"
    },
    "11010": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B13"
    },
    "11013": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "SWAP3",
      "path": "12"
    },
    "11014": {
      "fn": "MainStaking.sendRewards",
      "offset": [8091, 8101],
      "op": "SWAP1",
      "path": "12"
    },
    "11015": {
      "fn": "MainStaking.sendRewards",
      "offset": [8091, 8101],
      "op": "SWAP2",
      "path": "12"
    },
    "11016": {
      "fn": "MainStaking.sendRewards",
      "offset": [8091, 8101],
      "op": "AND",
      "path": "12"
    },
    "11017": {
      "fn": "MainStaking.sendRewards",
      "offset": [8091, 8101],
      "op": "SWAP1",
      "path": "12"
    },
    "11018": {
      "fn": "MainStaking.sendRewards",
      "offset": [8103, 8112],
      "op": "DUP6",
      "path": "12"
    },
    "11019": {
      "fn": "MainStaking.sendRewards",
      "offset": [8103, 8112],
      "op": "SWAP1",
      "path": "12"
    },
    "11020": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11022": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "ADD",
      "path": "12"
    },
    "11023": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "11026": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [8063, 8113],
      "op": "JUMP",
      "path": "12"
    },
    "11027": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11028": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11030": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11032": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "MLOAD",
      "path": "12"
    },
    "11033": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP1",
      "path": "12"
    },
    "11034": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP4",
      "path": "12"
    },
    "11035": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "SUB",
      "path": "12"
    },
    "11036": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP2",
      "path": "12"
    },
    "11037": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11039": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP8",
      "path": "12"
    },
    "11040": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP1",
      "path": "12"
    },
    "11041": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "11042": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "ISZERO",
      "path": "12"
    },
    "11043": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP1",
      "path": "12"
    },
    "11044": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "ISZERO",
      "path": "12"
    },
    "11045": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B2D"
    },
    "11048": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "JUMPI",
      "path": "12"
    },
    "11049": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11051": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP1",
      "path": "12"
    },
    "11052": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "REVERT",
      "path": "12"
    },
    "11053": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11054": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "POP",
      "path": "12"
    },
    "11055": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "GAS",
      "path": "12"
    },
    "11056": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "CALL",
      "path": "12"
    },
    "11057": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "ISZERO",
      "path": "12"
    },
    "11058": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP1",
      "path": "12"
    },
    "11059": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "ISZERO",
      "path": "12"
    },
    "11060": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B41"
    },
    "11063": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "JUMPI",
      "path": "12"
    },
    "11064": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11065": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11067": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP1",
      "path": "12"
    },
    "11068": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "11069": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11070": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11072": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "REVERT",
      "path": "12"
    },
    "11073": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11074": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "POP",
      "path": "12"
    },
    "11075": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "POP",
      "path": "12"
    },
    "11076": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "POP",
      "path": "12"
    },
    "11077": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "POP",
      "path": "12"
    },
    "11078": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11080": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "MLOAD",
      "path": "12"
    },
    "11081": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11082": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "11084": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "NOT",
      "path": "12"
    },
    "11085": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "11087": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP3",
      "path": "12"
    },
    "11088": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "ADD",
      "path": "12"
    },
    "11089": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "AND",
      "path": "12"
    },
    "11090": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP3",
      "path": "12"
    },
    "11091": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "ADD",
      "path": "12"
    },
    "11092": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP1",
      "path": "12"
    },
    "11093": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11095": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "MSTORE",
      "path": "12"
    },
    "11096": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "POP",
      "path": "12"
    },
    "11097": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "DUP2",
      "path": "12"
    },
    "11098": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "ADD",
      "path": "12"
    },
    "11099": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "SWAP1",
      "path": "12"
    },
    "11100": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B65"
    },
    "11103": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "SWAP2",
      "path": "12"
    },
    "11104": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "SWAP1",
      "path": "12"
    },
    "11105": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "11108": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [8063, 8113],
      "op": "JUMP",
      "path": "12"
    },
    "11109": {
      "fn": "MainStaking.sendRewards",
      "offset": [8063, 8113],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11110": {
      "op": "POP"
    },
    "11111": {
      "fn": "MainStaking.sendRewards",
      "offset": [8151, 8161],
      "op": "PUSH1",
      "path": "12",
      "statement": 101,
      "value": "0x3"
    },
    "11113": {
      "fn": "MainStaking.sendRewards",
      "offset": [8151, 8161],
      "op": "DUP4",
      "path": "12"
    },
    "11114": {
      "fn": "MainStaking.sendRewards",
      "offset": [8151, 8161],
      "op": "ADD",
      "path": "12"
    },
    "11115": {
      "fn": "MainStaking.sendRewards",
      "offset": [8151, 8161],
      "op": "SLOAD",
      "path": "12"
    },
    "11116": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11118": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "MLOAD",
      "path": "12"
    },
    "11119": {
      "op": "PUSH4",
      "value": "0x47E7A411"
    },
    "11124": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11126": {
      "op": "SHL"
    },
    "11127": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP2",
      "path": "12"
    },
    "11128": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "MSTORE",
      "path": "12"
    },
    "11129": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11131": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP2",
      "path": "12"
    },
    "11132": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "ADD",
      "path": "12"
    },
    "11133": {
      "op": "DUP4"
    },
    "11134": {
      "op": "SWAP1"
    },
    "11135": {
      "op": "MSTORE"
    },
    "11136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11142": {
      "op": "SHL"
    },
    "11143": {
      "op": "SUB"
    },
    "11144": {
      "op": "DUP5"
    },
    "11145": {
      "op": "DUP2"
    },
    "11146": {
      "op": "AND"
    },
    "11147": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11149": {
      "op": "DUP4"
    },
    "11150": {
      "op": "ADD"
    },
    "11151": {
      "op": "MSTORE"
    },
    "11152": {
      "fn": "MainStaking.sendRewards",
      "offset": [8151, 8161],
      "op": "SWAP1",
      "path": "12"
    },
    "11153": {
      "fn": "MainStaking.sendRewards",
      "offset": [8151, 8161],
      "op": "SWAP2",
      "path": "12"
    },
    "11154": {
      "fn": "MainStaking.sendRewards",
      "offset": [8151, 8161],
      "op": "AND",
      "path": "12"
    },
    "11155": {
      "fn": "MainStaking.sendRewards",
      "offset": [8151, 8161],
      "op": "SWAP1",
      "path": "12"
    },
    "11156": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8178],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8FCF4822"
    },
    "11161": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8178],
      "op": "SWAP1",
      "path": "12"
    },
    "11162": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11164": {
      "op": "ADD"
    },
    "11165": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11167": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11169": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "MLOAD",
      "path": "12"
    },
    "11170": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP1",
      "path": "12"
    },
    "11171": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP4",
      "path": "12"
    },
    "11172": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "SUB",
      "path": "12"
    },
    "11173": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP2",
      "path": "12"
    },
    "11174": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11176": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP8",
      "path": "12"
    },
    "11177": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP1",
      "path": "12"
    },
    "11178": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "11179": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "ISZERO",
      "path": "12"
    },
    "11180": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP1",
      "path": "12"
    },
    "11181": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "ISZERO",
      "path": "12"
    },
    "11182": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2BB6"
    },
    "11185": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "JUMPI",
      "path": "12"
    },
    "11186": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11188": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP1",
      "path": "12"
    },
    "11189": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "REVERT",
      "path": "12"
    },
    "11190": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11191": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "POP",
      "path": "12"
    },
    "11192": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "GAS",
      "path": "12"
    },
    "11193": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "CALL",
      "path": "12"
    },
    "11194": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "ISZERO",
      "path": "12"
    },
    "11195": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP1",
      "path": "12"
    },
    "11196": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "ISZERO",
      "path": "12"
    },
    "11197": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2BCA"
    },
    "11200": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "JUMPI",
      "path": "12"
    },
    "11201": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11202": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11204": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP1",
      "path": "12"
    },
    "11205": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "11206": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11207": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11209": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "REVERT",
      "path": "12"
    },
    "11210": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11211": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "POP",
      "path": "12"
    },
    "11212": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "POP",
      "path": "12"
    },
    "11213": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "POP",
      "path": "12"
    },
    "11214": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "POP",
      "path": "12"
    },
    "11215": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11217": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "MLOAD",
      "path": "12"
    },
    "11218": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11219": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "11221": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "NOT",
      "path": "12"
    },
    "11222": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "11224": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP3",
      "path": "12"
    },
    "11225": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "ADD",
      "path": "12"
    },
    "11226": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "AND",
      "path": "12"
    },
    "11227": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP3",
      "path": "12"
    },
    "11228": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "ADD",
      "path": "12"
    },
    "11229": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP1",
      "path": "12"
    },
    "11230": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11232": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "MSTORE",
      "path": "12"
    },
    "11233": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "POP",
      "path": "12"
    },
    "11234": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "DUP2",
      "path": "12"
    },
    "11235": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "ADD",
      "path": "12"
    },
    "11236": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "SWAP1",
      "path": "12"
    },
    "11237": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2BEE"
    },
    "11240": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "SWAP2",
      "path": "12"
    },
    "11241": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "SWAP1",
      "path": "12"
    },
    "11242": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "11245": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [8135, 8272],
      "op": "JUMP",
      "path": "12"
    },
    "11246": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11247": {
      "fn": "MainStaking.sendRewards",
      "offset": [8135, 8272],
      "op": "POP",
      "path": "12"
    },
    "11248": {
      "branch": 146,
      "fn": "MainStaking.sendRewards",
      "offset": [8298, 8305],
      "op": "DUP5",
      "path": "12"
    },
    "11249": {
      "fn": "MainStaking.sendRewards",
      "offset": [8298, 8336],
      "op": "DUP1",
      "path": "12"
    },
    "11250": {
      "fn": "MainStaking.sendRewards",
      "offset": [8298, 8336],
      "op": "ISZERO",
      "path": "12"
    },
    "11251": {
      "fn": "MainStaking.sendRewards",
      "offset": [8298, 8336],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C06"
    },
    "11254": {
      "branch": 146,
      "fn": "MainStaking.sendRewards",
      "offset": [8298, 8336],
      "op": "JUMPI",
      "path": "12"
    },
    "11255": {
      "op": "POP"
    },
    "11256": {
      "fn": "MainStaking.sendRewards",
      "offset": [8311, 8321],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6B"
    },
    "11258": {
      "fn": "MainStaking.sendRewards",
      "offset": [8311, 8321],
      "op": "SLOAD",
      "path": "12"
    },
    "11259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11265": {
      "op": "SHL"
    },
    "11266": {
      "op": "SUB"
    },
    "11267": {
      "fn": "MainStaking.sendRewards",
      "offset": [8311, 8321],
      "op": "AND",
      "path": "12"
    },
    "11268": {
      "fn": "MainStaking.sendRewards",
      "offset": [8311, 8335],
      "op": "ISZERO",
      "path": "12"
    },
    "11269": {
      "fn": "MainStaking.sendRewards",
      "offset": [8309, 8336],
      "op": "ISZERO",
      "path": "12"
    },
    "11270": {
      "fn": "MainStaking.sendRewards",
      "offset": [8298, 8336],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11271": {
      "fn": "MainStaking.sendRewards",
      "offset": [8294, 8787],
      "op": "ISZERO",
      "path": "12"
    },
    "11272": {
      "fn": "MainStaking.sendRewards",
      "offset": [8294, 8787],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2DE3"
    },
    "11275": {
      "fn": "MainStaking.sendRewards",
      "offset": [8294, 8787],
      "op": "JUMPI",
      "path": "12"
    },
    "11276": {
      "fn": "MainStaking.sendRewards",
      "offset": [8376, 8386],
      "op": "PUSH1",
      "path": "12",
      "statement": 102,
      "value": "0x6B"
    },
    "11278": {
      "fn": "MainStaking.sendRewards",
      "offset": [8376, 8386],
      "op": "SLOAD",
      "path": "12"
    },
    "11279": {
      "fn": "MainStaking.sendRewards",
      "offset": [8479, 8489],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "11281": {
      "fn": "MainStaking.sendRewards",
      "offset": [8479, 8489],
      "op": "DUP5",
      "path": "12"
    },
    "11282": {
      "fn": "MainStaking.sendRewards",
      "offset": [8479, 8489],
      "op": "ADD",
      "path": "12"
    },
    "11283": {
      "fn": "MainStaking.sendRewards",
      "offset": [8479, 8489],
      "op": "SLOAD",
      "path": "12"
    },
    "11284": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11286": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP1",
      "path": "12"
    },
    "11287": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "MLOAD",
      "path": "12"
    },
    "11288": {
      "op": "PUSH4",
      "value": "0x9F9106D1"
    },
    "11293": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11295": {
      "op": "SHL"
    },
    "11296": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP2",
      "path": "12"
    },
    "11297": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "MSTORE",
      "path": "12"
    },
    "11298": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "SWAP1",
      "path": "12"
    },
    "11299": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "MLOAD",
      "path": "12"
    },
    "11300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11306": {
      "op": "SHL"
    },
    "11307": {
      "op": "SUB"
    },
    "11308": {
      "fn": "MainStaking.sendRewards",
      "offset": [8376, 8386],
      "op": "SWAP4",
      "path": "12"
    },
    "11309": {
      "fn": "MainStaking.sendRewards",
      "offset": [8376, 8386],
      "op": "DUP5",
      "path": "12"
    },
    "11310": {
      "fn": "MainStaking.sendRewards",
      "offset": [8376, 8386],
      "op": "AND",
      "path": "12"
    },
    "11311": {
      "fn": "MainStaking.sendRewards",
      "offset": [8376, 8386],
      "op": "SWAP4",
      "path": "12"
    },
    "11312": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8398],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD2472B1B"
    },
    "11317": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8398],
      "op": "SWAP4",
      "path": "12"
    },
    "11318": {
      "fn": "MainStaking.sendRewards",
      "offset": [8428, 8433],
      "op": "DUP15",
      "path": "12"
    },
    "11319": {
      "fn": "MainStaking.sendRewards",
      "offset": [8428, 8433],
      "op": "SWAP4",
      "path": "12"
    },
    "11320": {
      "fn": "MainStaking.sendRewards",
      "offset": [8479, 8489],
      "op": "SWAP2",
      "path": "12"
    },
    "11321": {
      "fn": "MainStaking.sendRewards",
      "offset": [8479, 8489],
      "op": "AND",
      "path": "12"
    },
    "11322": {
      "fn": "MainStaking.sendRewards",
      "offset": [8479, 8489],
      "op": "SWAP2",
      "path": "12"
    },
    "11323": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8506],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9F9106D1"
    },
    "11328": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8506],
      "op": "SWAP2",
      "path": "12"
    },
    "11329": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11331": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP1",
      "path": "12"
    },
    "11332": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP3",
      "path": "12"
    },
    "11333": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "ADD",
      "path": "12"
    },
    "11334": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "SWAP3",
      "path": "12"
    },
    "11335": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11337": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "SWAP3",
      "path": "12"
    },
    "11338": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "SWAP1",
      "path": "12"
    },
    "11339": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "SWAP2",
      "path": "12"
    },
    "11340": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "SWAP1",
      "path": "12"
    },
    "11341": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP3",
      "path": "12"
    },
    "11342": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "SWAP1",
      "path": "12"
    },
    "11343": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "SUB",
      "path": "12"
    },
    "11344": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "ADD",
      "path": "12"
    },
    "11345": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP2",
      "path": "12"
    },
    "11346": {
      "fn": "MainStaking.sendRewards",
      "offset": [8479, 8489],
      "op": "DUP7",
      "path": "12"
    },
    "11347": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP1",
      "path": "12"
    },
    "11348": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "11349": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "ISZERO",
      "path": "12"
    },
    "11350": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP1",
      "path": "12"
    },
    "11351": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "ISZERO",
      "path": "12"
    },
    "11352": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C60"
    },
    "11355": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "JUMPI",
      "path": "12"
    },
    "11356": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11358": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP1",
      "path": "12"
    },
    "11359": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "REVERT",
      "path": "12"
    },
    "11360": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11361": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "POP",
      "path": "12"
    },
    "11362": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "GAS",
      "path": "12"
    },
    "11363": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "STATICCALL",
      "path": "12"
    },
    "11364": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "ISZERO",
      "path": "12"
    },
    "11365": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP1",
      "path": "12"
    },
    "11366": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "ISZERO",
      "path": "12"
    },
    "11367": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C74"
    },
    "11370": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "JUMPI",
      "path": "12"
    },
    "11371": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11372": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11374": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP1",
      "path": "12"
    },
    "11375": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "11376": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11377": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11379": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "REVERT",
      "path": "12"
    },
    "11380": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11381": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "POP",
      "path": "12"
    },
    "11382": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "POP",
      "path": "12"
    },
    "11383": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "POP",
      "path": "12"
    },
    "11384": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "POP",
      "path": "12"
    },
    "11385": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11387": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "MLOAD",
      "path": "12"
    },
    "11388": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11389": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "11391": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "NOT",
      "path": "12"
    },
    "11392": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "11394": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP3",
      "path": "12"
    },
    "11395": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "ADD",
      "path": "12"
    },
    "11396": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "AND",
      "path": "12"
    },
    "11397": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP3",
      "path": "12"
    },
    "11398": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "ADD",
      "path": "12"
    },
    "11399": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP1",
      "path": "12"
    },
    "11400": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11402": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "MSTORE",
      "path": "12"
    },
    "11403": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "POP",
      "path": "12"
    },
    "11404": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "DUP2",
      "path": "12"
    },
    "11405": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "ADD",
      "path": "12"
    },
    "11406": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "SWAP1",
      "path": "12"
    },
    "11407": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C98"
    },
    "11410": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "SWAP2",
      "path": "12"
    },
    "11411": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "SWAP1",
      "path": "12"
    },
    "11412": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34B7"
    },
    "11415": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [8463, 8508],
      "op": "JUMP",
      "path": "12"
    },
    "11416": {
      "fn": "MainStaking.sendRewards",
      "offset": [8463, 8508],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11417": {
      "fn": "MainStaking.sendRewards",
      "offset": [8538, 8549],
      "op": "DUP6",
      "path": "12"
    },
    "11418": {
      "fn": "MainStaking.sendRewards",
      "offset": [8579, 8588],
      "op": "DUP6",
      "path": "12"
    },
    "11419": {
      "fn": "MainStaking.sendRewards",
      "offset": [8634, 8641],
      "op": "DUP9",
      "path": "12"
    },
    "11420": {
      "fn": "MainStaking.sendRewards",
      "offset": [8634, 8644],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "11422": {
      "fn": "MainStaking.sendRewards",
      "offset": [8634, 8644],
      "op": "ADD",
      "path": "12"
    },
    "11423": {
      "fn": "MainStaking.sendRewards",
      "offset": [8634, 8644],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11425": {
      "fn": "MainStaking.sendRewards",
      "offset": [8634, 8644],
      "op": "SWAP1",
      "path": "12"
    },
    "11426": {
      "fn": "MainStaking.sendRewards",
      "offset": [8634, 8644],
      "op": "SLOAD",
      "path": "12"
    },
    "11427": {
      "fn": "MainStaking.sendRewards",
      "offset": [8634, 8644],
      "op": "SWAP1",
      "path": "12"
    },
    "11428": {
      "fn": "MainStaking.sendRewards",
      "offset": [8634, 8644],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "11431": {
      "fn": "MainStaking.sendRewards",
      "offset": [8634, 8644],
      "op": "EXP",
      "path": "12"
    },
    "11432": {
      "fn": "MainStaking.sendRewards",
      "offset": [8634, 8644],
      "op": "SWAP1",
      "path": "12"
    },
    "11433": {
      "fn": "MainStaking.sendRewards",
      "offset": [8634, 8644],
      "op": "DIV",
      "path": "12"
    },
    "11434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11440": {
      "op": "SHL"
    },
    "11441": {
      "op": "SUB"
    },
    "11442": {
      "fn": "MainStaking.sendRewards",
      "offset": [8634, 8644],
      "op": "AND",
      "path": "12"
    },
    "11443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11449": {
      "op": "SHL"
    },
    "11450": {
      "op": "SUB"
    },
    "11451": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8657],
      "op": "AND",
      "path": "12"
    },
    "11452": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8657],
      "op": "PUSH4",
      "path": "12",
      "value": "0x18160DDD"
    },
    "11457": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11459": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "MLOAD",
      "path": "12"
    },
    "11460": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP2",
      "path": "12"
    },
    "11461": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "11466": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "AND",
      "path": "12"
    },
    "11467": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "11469": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "SHL",
      "path": "12"
    },
    "11470": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP2",
      "path": "12"
    },
    "11471": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "MSTORE",
      "path": "12"
    },
    "11472": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11474": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "ADD",
      "path": "12"
    },
    "11475": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11477": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11479": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "MLOAD",
      "path": "12"
    },
    "11480": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP1",
      "path": "12"
    },
    "11481": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP4",
      "path": "12"
    },
    "11482": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "SUB",
      "path": "12"
    },
    "11483": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP2",
      "path": "12"
    },
    "11484": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP7",
      "path": "12"
    },
    "11485": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP1",
      "path": "12"
    },
    "11486": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "11487": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "ISZERO",
      "path": "12"
    },
    "11488": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP1",
      "path": "12"
    },
    "11489": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "ISZERO",
      "path": "12"
    },
    "11490": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CEA"
    },
    "11493": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "JUMPI",
      "path": "12"
    },
    "11494": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11496": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP1",
      "path": "12"
    },
    "11497": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "REVERT",
      "path": "12"
    },
    "11498": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11499": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "POP",
      "path": "12"
    },
    "11500": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "GAS",
      "path": "12"
    },
    "11501": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "STATICCALL",
      "path": "12"
    },
    "11502": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "ISZERO",
      "path": "12"
    },
    "11503": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP1",
      "path": "12"
    },
    "11504": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "ISZERO",
      "path": "12"
    },
    "11505": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CFE"
    },
    "11508": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "JUMPI",
      "path": "12"
    },
    "11509": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11510": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11512": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP1",
      "path": "12"
    },
    "11513": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "11514": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11515": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11517": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "REVERT",
      "path": "12"
    },
    "11518": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11519": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "POP",
      "path": "12"
    },
    "11520": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "POP",
      "path": "12"
    },
    "11521": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "POP",
      "path": "12"
    },
    "11522": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "POP",
      "path": "12"
    },
    "11523": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11525": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "MLOAD",
      "path": "12"
    },
    "11526": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11527": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "11529": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "NOT",
      "path": "12"
    },
    "11530": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "11532": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP3",
      "path": "12"
    },
    "11533": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "ADD",
      "path": "12"
    },
    "11534": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "AND",
      "path": "12"
    },
    "11535": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP3",
      "path": "12"
    },
    "11536": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "ADD",
      "path": "12"
    },
    "11537": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP1",
      "path": "12"
    },
    "11538": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11540": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "MSTORE",
      "path": "12"
    },
    "11541": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "POP",
      "path": "12"
    },
    "11542": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "DUP2",
      "path": "12"
    },
    "11543": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "ADD",
      "path": "12"
    },
    "11544": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "SWAP1",
      "path": "12"
    },
    "11545": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2D22"
    },
    "11548": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "SWAP2",
      "path": "12"
    },
    "11549": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "SWAP1",
      "path": "12"
    },
    "11550": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3688"
    },
    "11553": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [8618, 8659],
      "op": "JUMP",
      "path": "12"
    },
    "11554": {
      "fn": "MainStaking.sendRewards",
      "offset": [8618, 8659],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11555": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11557": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "MLOAD",
      "path": "12"
    },
    "11558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11562": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11564": {
      "op": "SHL"
    },
    "11565": {
      "op": "SUB"
    },
    "11566": {
      "op": "NOT"
    },
    "11567": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "11569": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "DUP9",
      "path": "12"
    },
    "11570": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "SWAP1",
      "path": "12"
    },
    "11571": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "SHL",
      "path": "12"
    },
    "11572": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "AND",
      "path": "12"
    },
    "11573": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "DUP2",
      "path": "12"
    },
    "11574": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "MSTORE",
      "path": "12"
    },
    "11575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11581": {
      "op": "SHL"
    },
    "11582": {
      "op": "SUB"
    },
    "11583": {
      "op": "SWAP6"
    },
    "11584": {
      "op": "DUP7"
    },
    "11585": {
      "op": "AND"
    },
    "11586": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11588": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "DUP3",
      "path": "12"
    },
    "11589": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "ADD",
      "path": "12"
    },
    "11590": {
      "op": "MSTORE"
    },
    "11591": {
      "op": "SWAP4"
    },
    "11592": {
      "op": "DUP6"
    },
    "11593": {
      "op": "AND"
    },
    "11594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11596": {
      "op": "DUP6"
    },
    "11597": {
      "op": "ADD"
    },
    "11598": {
      "op": "MSTORE"
    },
    "11599": {
      "op": "SWAP4"
    },
    "11600": {
      "op": "SWAP1"
    },
    "11601": {
      "op": "SWAP2"
    },
    "11602": {
      "op": "AND"
    },
    "11603": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11605": {
      "op": "DUP4"
    },
    "11606": {
      "op": "ADD"
    },
    "11607": {
      "op": "MSTORE"
    },
    "11608": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11610": {
      "op": "DUP3"
    },
    "11611": {
      "op": "ADD"
    },
    "11612": {
      "op": "MSTORE"
    },
    "11613": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11615": {
      "op": "DUP2"
    },
    "11616": {
      "op": "ADD"
    },
    "11617": {
      "op": "SWAP2"
    },
    "11618": {
      "op": "SWAP1"
    },
    "11619": {
      "op": "SWAP2"
    },
    "11620": {
      "op": "MSTORE"
    },
    "11621": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "11623": {
      "op": "ADD"
    },
    "11624": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11626": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11628": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "MLOAD",
      "path": "12"
    },
    "11629": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "DUP1",
      "path": "12"
    },
    "11630": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "DUP4",
      "path": "12"
    },
    "11631": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "SUB",
      "path": "12"
    },
    "11632": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "DUP2",
      "path": "12"
    },
    "11633": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11635": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "DUP8",
      "path": "12"
    },
    "11636": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "DUP1",
      "path": "12"
    },
    "11637": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "11638": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "ISZERO",
      "path": "12"
    },
    "11639": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "DUP1",
      "path": "12"
    },
    "11640": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "ISZERO",
      "path": "12"
    },
    "11641": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2D81"
    },
    "11644": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "JUMPI",
      "path": "12"
    },
    "11645": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11647": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "DUP1",
      "path": "12"
    },
    "11648": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "REVERT",
      "path": "12"
    },
    "11649": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11650": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "POP",
      "path": "12"
    },
    "11651": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "GAS",
      "path": "12"
    },
    "11652": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "CALL",
      "path": "12"
    },
    "11653": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "ISZERO",
      "path": "12"
    },
    "11654": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "DUP1",
      "path": "12"
    },
    "11655": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "ISZERO",
      "path": "12"
    },
    "11656": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2D95"
    },
    "11659": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "JUMPI",
      "path": "12"
    },
    "11660": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11661": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11663": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "DUP1",
      "path": "12"
    },
    "11664": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "11665": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11666": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11668": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "REVERT",
      "path": "12"
    },
    "11669": {
      "fn": "MainStaking.sendRewards",
      "offset": [8364, 8685],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11670": {
      "op": "POP"
    },
    "11671": {
      "op": "POP"
    },
    "11672": {
      "op": "POP"
    },
    "11673": {
      "fn": "MainStaking.sendRewards",
      "offset": [8729, 8739],
      "op": "PUSH1",
      "path": "12",
      "statement": 103,
      "value": "0x3"
    },
    "11675": {
      "fn": "MainStaking.sendRewards",
      "offset": [8729, 8739],
      "op": "DUP5",
      "path": "12"
    },
    "11676": {
      "fn": "MainStaking.sendRewards",
      "offset": [8729, 8739],
      "op": "ADD",
      "path": "12"
    },
    "11677": {
      "fn": "MainStaking.sendRewards",
      "offset": [8729, 8739],
      "op": "SLOAD",
      "path": "12"
    },
    "11678": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11680": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "MLOAD",
      "path": "12"
    },
    "11681": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "PUSH32",
      "path": "12",
      "value": "0x6C33B8F6B4F8BA21A4621CC77C018FBB4C7663CFA25929F02DC8D36ABDE462C5"
    },
    "11714": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "SWAP3",
      "path": "12"
    },
    "11715": {
      "op": "POP"
    },
    "11716": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2DDA"
    },
    "11719": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "SWAP2",
      "path": "12"
    },
    "11720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11726": {
      "op": "SHL"
    },
    "11727": {
      "op": "SUB"
    },
    "11728": {
      "fn": "MainStaking.sendRewards",
      "offset": [8729, 8739],
      "op": "AND",
      "path": "12"
    },
    "11729": {
      "fn": "MainStaking.sendRewards",
      "offset": [8729, 8739],
      "op": "SWAP1",
      "path": "12"
    },
    "11730": {
      "fn": "MainStaking.sendRewards",
      "offset": [8741, 8752],
      "op": "DUP6",
      "path": "12"
    },
    "11731": {
      "fn": "MainStaking.sendRewards",
      "offset": [8741, 8752],
      "op": "SWAP1",
      "path": "12"
    },
    "11732": {
      "fn": "MainStaking.sendRewards",
      "offset": [8754, 8763],
      "op": "DUP6",
      "path": "12"
    },
    "11733": {
      "fn": "MainStaking.sendRewards",
      "offset": [8754, 8763],
      "op": "SWAP1",
      "path": "12"
    },
    "11734": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3832"
    },
    "11737": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [8716, 8764],
      "op": "JUMP",
      "path": "12"
    },
    "11738": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11739": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11741": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "MLOAD",
      "path": "12"
    },
    "11742": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "DUP1",
      "path": "12"
    },
    "11743": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "SWAP2",
      "path": "12"
    },
    "11744": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "SUB",
      "path": "12"
    },
    "11745": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "SWAP1",
      "path": "12"
    },
    "11746": {
      "fn": "MainStaking.sendRewards",
      "offset": [8716, 8764],
      "op": "LOG1",
      "path": "12"
    },
    "11747": {
      "fn": "MainStaking.sendRewards",
      "offset": [8294, 8787],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11748": {
      "fn": "MainStaking.sendRewards",
      "offset": [8017, 8977],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EBD"
    },
    "11751": {
      "fn": "MainStaking.sendRewards",
      "offset": [8017, 8977],
      "op": "JUMP",
      "path": "12"
    },
    "11752": {
      "fn": "MainStaking.sendRewards",
      "offset": [8017, 8977],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11753": {
      "fn": "MainStaking.sendRewards",
      "offset": [8861, 8871],
      "op": "PUSH1",
      "path": "12",
      "statement": 104,
      "value": "0x3"
    },
    "11755": {
      "fn": "MainStaking.sendRewards",
      "offset": [8861, 8871],
      "op": "DUP4",
      "path": "12"
    },
    "11756": {
      "fn": "MainStaking.sendRewards",
      "offset": [8861, 8871],
      "op": "ADD",
      "path": "12"
    },
    "11757": {
      "fn": "MainStaking.sendRewards",
      "offset": [8861, 8871],
      "op": "SLOAD",
      "path": "12"
    },
    "11758": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11760": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "MLOAD",
      "path": "12"
    },
    "11761": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "11766": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11768": {
      "op": "SHL"
    },
    "11769": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP2",
      "path": "12"
    },
    "11770": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "MSTORE",
      "path": "12"
    },
    "11771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11777": {
      "op": "SHL"
    },
    "11778": {
      "op": "SUB"
    },
    "11779": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8860],
      "op": "DUP5",
      "path": "12"
    },
    "11780": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8860],
      "op": "DUP2",
      "path": "12"
    },
    "11781": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8860],
      "op": "AND",
      "path": "12"
    },
    "11782": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8860],
      "op": "SWAP3",
      "path": "12"
    },
    "11783": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8860],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA9059CBB"
    },
    "11788": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8860],
      "op": "SWAP3",
      "path": "12"
    },
    "11789": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E1E"
    },
    "11792": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "SWAP3",
      "path": "12"
    },
    "11793": {
      "fn": "MainStaking.sendRewards",
      "offset": [8861, 8871],
      "op": "SWAP1",
      "path": "12"
    },
    "11794": {
      "fn": "MainStaking.sendRewards",
      "offset": [8861, 8871],
      "op": "SWAP2",
      "path": "12"
    },
    "11795": {
      "fn": "MainStaking.sendRewards",
      "offset": [8861, 8871],
      "op": "AND",
      "path": "12"
    },
    "11796": {
      "fn": "MainStaking.sendRewards",
      "offset": [8861, 8871],
      "op": "SWAP1",
      "path": "12"
    },
    "11797": {
      "fn": "MainStaking.sendRewards",
      "offset": [8873, 8882],
      "op": "DUP6",
      "path": "12"
    },
    "11798": {
      "fn": "MainStaking.sendRewards",
      "offset": [8873, 8882],
      "op": "SWAP1",
      "path": "12"
    },
    "11799": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11801": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "ADD",
      "path": "12"
    },
    "11802": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "11805": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [8833, 8883],
      "op": "JUMP",
      "path": "12"
    },
    "11806": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11807": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11809": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11811": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "MLOAD",
      "path": "12"
    },
    "11812": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP1",
      "path": "12"
    },
    "11813": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP4",
      "path": "12"
    },
    "11814": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "SUB",
      "path": "12"
    },
    "11815": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP2",
      "path": "12"
    },
    "11816": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11818": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP8",
      "path": "12"
    },
    "11819": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP1",
      "path": "12"
    },
    "11820": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "11821": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "ISZERO",
      "path": "12"
    },
    "11822": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP1",
      "path": "12"
    },
    "11823": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "ISZERO",
      "path": "12"
    },
    "11824": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E38"
    },
    "11827": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "JUMPI",
      "path": "12"
    },
    "11828": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11830": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP1",
      "path": "12"
    },
    "11831": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "REVERT",
      "path": "12"
    },
    "11832": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11833": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "POP",
      "path": "12"
    },
    "11834": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "GAS",
      "path": "12"
    },
    "11835": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "CALL",
      "path": "12"
    },
    "11836": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "ISZERO",
      "path": "12"
    },
    "11837": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP1",
      "path": "12"
    },
    "11838": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "ISZERO",
      "path": "12"
    },
    "11839": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E4C"
    },
    "11842": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "JUMPI",
      "path": "12"
    },
    "11843": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11844": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11846": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP1",
      "path": "12"
    },
    "11847": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "11848": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11849": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11851": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "REVERT",
      "path": "12"
    },
    "11852": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11853": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "POP",
      "path": "12"
    },
    "11854": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "POP",
      "path": "12"
    },
    "11855": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "POP",
      "path": "12"
    },
    "11856": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "POP",
      "path": "12"
    },
    "11857": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11859": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "MLOAD",
      "path": "12"
    },
    "11860": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "11861": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "11863": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "NOT",
      "path": "12"
    },
    "11864": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "11866": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP3",
      "path": "12"
    },
    "11867": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "ADD",
      "path": "12"
    },
    "11868": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "AND",
      "path": "12"
    },
    "11869": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP3",
      "path": "12"
    },
    "11870": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "ADD",
      "path": "12"
    },
    "11871": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP1",
      "path": "12"
    },
    "11872": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11874": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "MSTORE",
      "path": "12"
    },
    "11875": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "POP",
      "path": "12"
    },
    "11876": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "DUP2",
      "path": "12"
    },
    "11877": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "ADD",
      "path": "12"
    },
    "11878": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "SWAP1",
      "path": "12"
    },
    "11879": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E70"
    },
    "11882": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "SWAP2",
      "path": "12"
    },
    "11883": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "SWAP1",
      "path": "12"
    },
    "11884": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "11887": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [8833, 8883],
      "op": "JUMP",
      "path": "12"
    },
    "11888": {
      "fn": "MainStaking.sendRewards",
      "offset": [8833, 8883],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11889": {
      "op": "POP"
    },
    "11890": {
      "fn": "MainStaking.sendRewards",
      "offset": [8923, 8933],
      "op": "PUSH1",
      "path": "12",
      "statement": 105,
      "value": "0x3"
    },
    "11892": {
      "fn": "MainStaking.sendRewards",
      "offset": [8923, 8933],
      "op": "DUP4",
      "path": "12"
    },
    "11893": {
      "fn": "MainStaking.sendRewards",
      "offset": [8923, 8933],
      "op": "ADD",
      "path": "12"
    },
    "11894": {
      "fn": "MainStaking.sendRewards",
      "offset": [8923, 8933],
      "op": "SLOAD",
      "path": "12"
    },
    "11895": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11897": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "MLOAD",
      "path": "12"
    },
    "11898": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "PUSH32",
      "path": "12",
      "value": "0x6C33B8F6B4F8BA21A4621CC77C018FBB4C7663CFA25929F02DC8D36ABDE462C5"
    },
    "11931": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "SWAP2",
      "path": "12"
    },
    "11932": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB4"
    },
    "11935": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "SWAP2",
      "path": "12"
    },
    "11936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11942": {
      "op": "SHL"
    },
    "11943": {
      "op": "SUB"
    },
    "11944": {
      "fn": "MainStaking.sendRewards",
      "offset": [8923, 8933],
      "op": "SWAP1",
      "path": "12"
    },
    "11945": {
      "fn": "MainStaking.sendRewards",
      "offset": [8923, 8933],
      "op": "SWAP2",
      "path": "12"
    },
    "11946": {
      "fn": "MainStaking.sendRewards",
      "offset": [8923, 8933],
      "op": "AND",
      "path": "12"
    },
    "11947": {
      "fn": "MainStaking.sendRewards",
      "offset": [8923, 8933],
      "op": "SWAP1",
      "path": "12"
    },
    "11948": {
      "fn": "MainStaking.sendRewards",
      "offset": [8935, 8946],
      "op": "DUP6",
      "path": "12"
    },
    "11949": {
      "fn": "MainStaking.sendRewards",
      "offset": [8935, 8946],
      "op": "SWAP1",
      "path": "12"
    },
    "11950": {
      "fn": "MainStaking.sendRewards",
      "offset": [8948, 8957],
      "op": "DUP6",
      "path": "12"
    },
    "11951": {
      "fn": "MainStaking.sendRewards",
      "offset": [8948, 8957],
      "op": "SWAP1",
      "path": "12"
    },
    "11952": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3832"
    },
    "11955": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [8910, 8958],
      "op": "JUMP",
      "path": "12"
    },
    "11956": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11957": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11959": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "MLOAD",
      "path": "12"
    },
    "11960": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "DUP1",
      "path": "12"
    },
    "11961": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "SWAP2",
      "path": "12"
    },
    "11962": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "SUB",
      "path": "12"
    },
    "11963": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "SWAP1",
      "path": "12"
    },
    "11964": {
      "fn": "MainStaking.sendRewards",
      "offset": [8910, 8958],
      "op": "LOG1",
      "path": "12"
    },
    "11965": {
      "fn": "MainStaking.sendRewards",
      "offset": [8017, 8977],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11966": {
      "fn": "MainStaking.sendRewards",
      "offset": [8994, 9015],
      "op": "PUSH2",
      "path": "12",
      "statement": 106,
      "value": "0x2EC7"
    },
    "11969": {
      "fn": "MainStaking.sendRewards",
      "offset": [9006, 9015],
      "op": "DUP2",
      "path": "12"
    },
    "11970": {
      "fn": "MainStaking.sendRewards",
      "offset": [8994, 9015],
      "op": "DUP8",
      "path": "12"
    },
    "11971": {
      "fn": "MainStaking.sendRewards",
      "offset": [8994, 9015],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3989"
    },
    "11974": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [8994, 9015],
      "op": "JUMP",
      "path": "12"
    },
    "11975": {
      "fn": "MainStaking.sendRewards",
      "offset": [8994, 9015],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11976": {
      "fn": "MainStaking.sendRewards",
      "offset": [8994, 9015],
      "op": "SWAP6",
      "path": "12"
    },
    "11977": {
      "fn": "MainStaking.sendRewards",
      "offset": [8994, 9015],
      "op": "POP",
      "path": "12"
    },
    "11978": {
      "fn": "MainStaking.sendRewards",
      "offset": [7669, 9030],
      "op": "POP",
      "path": "12"
    },
    "11979": {
      "fn": "MainStaking.sendRewards",
      "offset": [7669, 9030],
      "op": "POP",
      "path": "12"
    },
    "11980": {
      "fn": "MainStaking.sendRewards",
      "offset": [7647, 9030],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11981": {
      "op": "POP"
    },
    "11982": {
      "fn": "MainStaking.sendRewards",
      "offset": [7580, 7583],
      "op": "DUP1",
      "path": "12",
      "statement": 107
    },
    "11983": {
      "fn": "MainStaking.sendRewards",
      "offset": [7580, 7583],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2ED7"
    },
    "11986": {
      "fn": "MainStaking.sendRewards",
      "offset": [7580, 7583],
      "op": "DUP2",
      "path": "12"
    },
    "11987": {
      "fn": "MainStaking.sendRewards",
      "offset": [7580, 7583],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39CC"
    },
    "11990": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [7580, 7583],
      "op": "JUMP",
      "path": "12"
    },
    "11991": {
      "fn": "MainStaking.sendRewards",
      "offset": [7580, 7583],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11992": {
      "fn": "MainStaking.sendRewards",
      "offset": [7580, 7583],
      "op": "SWAP2",
      "path": "12"
    },
    "11993": {
      "fn": "MainStaking.sendRewards",
      "offset": [7580, 7583],
      "op": "POP",
      "path": "12"
    },
    "11994": {
      "fn": "MainStaking.sendRewards",
      "offset": [7580, 7583],
      "op": "POP",
      "path": "12"
    },
    "11995": {
      "fn": "MainStaking.sendRewards",
      "offset": [7539, 9040],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2949"
    },
    "11998": {
      "fn": "MainStaking.sendRewards",
      "offset": [7539, 9040],
      "op": "JUMP",
      "path": "12"
    },
    "11999": {
      "fn": "MainStaking.sendRewards",
      "offset": [7539, 9040],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12000": {
      "op": "POP"
    },
    "12001": {
      "fn": "MainStaking.sendRewards",
      "offset": [9056, 9059],
      "op": "PUSH1",
      "path": "12",
      "statement": 108,
      "value": "0x66"
    },
    "12003": {
      "fn": "MainStaking.sendRewards",
      "offset": [9056, 9059],
      "op": "SLOAD",
      "path": "12"
    },
    "12004": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12006": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "MLOAD",
      "path": "12"
    },
    "12007": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "12012": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12014": {
      "op": "SHL"
    },
    "12015": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP2",
      "path": "12"
    },
    "12016": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "MSTORE",
      "path": "12"
    },
    "12017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12023": {
      "op": "SHL"
    },
    "12024": {
      "op": "SUB"
    },
    "12025": {
      "fn": "MainStaking.sendRewards",
      "offset": [9056, 9059],
      "op": "SWAP1",
      "path": "12"
    },
    "12026": {
      "fn": "MainStaking.sendRewards",
      "offset": [9056, 9059],
      "op": "SWAP2",
      "path": "12"
    },
    "12027": {
      "fn": "MainStaking.sendRewards",
      "offset": [9056, 9059],
      "op": "AND",
      "path": "12"
    },
    "12028": {
      "fn": "MainStaking.sendRewards",
      "offset": [9056, 9059],
      "op": "SWAP1",
      "path": "12"
    },
    "12029": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9068],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95EA7B3"
    },
    "12034": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9068],
      "op": "SWAP1",
      "path": "12"
    },
    "12035": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F12"
    },
    "12038": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "SWAP1",
      "path": "12"
    },
    "12039": {
      "fn": "MainStaking.sendRewards",
      "offset": [9069, 9077],
      "op": "DUP8",
      "path": "12"
    },
    "12040": {
      "fn": "MainStaking.sendRewards",
      "offset": [9069, 9077],
      "op": "SWAP1",
      "path": "12"
    },
    "12041": {
      "fn": "MainStaking.sendRewards",
      "offset": [9079, 9087],
      "op": "DUP7",
      "path": "12"
    },
    "12042": {
      "fn": "MainStaking.sendRewards",
      "offset": [9079, 9087],
      "op": "SWAP1",
      "path": "12"
    },
    "12043": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "12045": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "ADD",
      "path": "12"
    },
    "12046": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3856"
    },
    "12049": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [9049, 9088],
      "op": "JUMP",
      "path": "12"
    },
    "12050": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12051": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12053": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12055": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "MLOAD",
      "path": "12"
    },
    "12056": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP1",
      "path": "12"
    },
    "12057": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP4",
      "path": "12"
    },
    "12058": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "SUB",
      "path": "12"
    },
    "12059": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP2",
      "path": "12"
    },
    "12060": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12062": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP8",
      "path": "12"
    },
    "12063": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP1",
      "path": "12"
    },
    "12064": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "12065": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "ISZERO",
      "path": "12"
    },
    "12066": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP1",
      "path": "12"
    },
    "12067": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "ISZERO",
      "path": "12"
    },
    "12068": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F2C"
    },
    "12071": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "JUMPI",
      "path": "12"
    },
    "12072": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12074": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP1",
      "path": "12"
    },
    "12075": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "REVERT",
      "path": "12"
    },
    "12076": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12077": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "POP",
      "path": "12"
    },
    "12078": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "GAS",
      "path": "12"
    },
    "12079": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "CALL",
      "path": "12"
    },
    "12080": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "ISZERO",
      "path": "12"
    },
    "12081": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP1",
      "path": "12"
    },
    "12082": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "ISZERO",
      "path": "12"
    },
    "12083": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F40"
    },
    "12086": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "JUMPI",
      "path": "12"
    },
    "12087": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12088": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12090": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP1",
      "path": "12"
    },
    "12091": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "12092": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12093": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12095": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "REVERT",
      "path": "12"
    },
    "12096": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12097": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "POP",
      "path": "12"
    },
    "12098": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "POP",
      "path": "12"
    },
    "12099": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "POP",
      "path": "12"
    },
    "12100": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "POP",
      "path": "12"
    },
    "12101": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12103": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "MLOAD",
      "path": "12"
    },
    "12104": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12105": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "12107": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "NOT",
      "path": "12"
    },
    "12108": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "12110": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP3",
      "path": "12"
    },
    "12111": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "ADD",
      "path": "12"
    },
    "12112": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "AND",
      "path": "12"
    },
    "12113": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP3",
      "path": "12"
    },
    "12114": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "ADD",
      "path": "12"
    },
    "12115": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP1",
      "path": "12"
    },
    "12116": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12118": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "MSTORE",
      "path": "12"
    },
    "12119": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "POP",
      "path": "12"
    },
    "12120": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "DUP2",
      "path": "12"
    },
    "12121": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "ADD",
      "path": "12"
    },
    "12122": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "SWAP1",
      "path": "12"
    },
    "12123": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F64"
    },
    "12126": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "SWAP2",
      "path": "12"
    },
    "12127": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "SWAP1",
      "path": "12"
    },
    "12128": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "12131": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [9049, 9088],
      "op": "JUMP",
      "path": "12"
    },
    "12132": {
      "fn": "MainStaking.sendRewards",
      "offset": [9049, 9088],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12133": {
      "op": "POP"
    },
    "12134": {
      "fn": "MainStaking.sendRewards",
      "offset": [9150, 9153],
      "op": "PUSH1",
      "path": "12",
      "statement": 109,
      "value": "0x66"
    },
    "12136": {
      "fn": "MainStaking.sendRewards",
      "offset": [9150, 9153],
      "op": "SLOAD",
      "path": "12"
    },
    "12137": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12139": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "MLOAD",
      "path": "12"
    },
    "12140": {
      "op": "PUSH4",
      "value": "0x47E7A411"
    },
    "12145": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12147": {
      "op": "SHL"
    },
    "12148": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP2",
      "path": "12"
    },
    "12149": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "MSTORE",
      "path": "12"
    },
    "12150": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "12152": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP2",
      "path": "12"
    },
    "12153": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "ADD",
      "path": "12"
    },
    "12154": {
      "op": "DUP5"
    },
    "12155": {
      "op": "SWAP1"
    },
    "12156": {
      "op": "MSTORE"
    },
    "12157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12163": {
      "op": "SHL"
    },
    "12164": {
      "op": "SUB"
    },
    "12165": {
      "fn": "MainStaking.sendRewards",
      "offset": [9150, 9153],
      "op": "SWAP2",
      "path": "12"
    },
    "12166": {
      "fn": "MainStaking.sendRewards",
      "offset": [9150, 9153],
      "op": "DUP3",
      "path": "12"
    },
    "12167": {
      "fn": "MainStaking.sendRewards",
      "offset": [9150, 9153],
      "op": "AND",
      "path": "12"
    },
    "12168": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12170": {
      "op": "DUP3"
    },
    "12171": {
      "op": "ADD"
    },
    "12172": {
      "op": "MSTORE"
    },
    "12173": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9139],
      "op": "SWAP1",
      "path": "12"
    },
    "12174": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9139],
      "op": "DUP6",
      "path": "12"
    },
    "12175": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9139],
      "op": "AND",
      "path": "12"
    },
    "12176": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9139],
      "op": "SWAP1",
      "path": "12"
    },
    "12177": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9139],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8FCF4822"
    },
    "12182": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9139],
      "op": "SWAP1",
      "path": "12"
    },
    "12183": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12185": {
      "op": "ADD"
    },
    "12186": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12188": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12190": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "MLOAD",
      "path": "12"
    },
    "12191": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP1",
      "path": "12"
    },
    "12192": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP4",
      "path": "12"
    },
    "12193": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "SUB",
      "path": "12"
    },
    "12194": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP2",
      "path": "12"
    },
    "12195": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12197": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP8",
      "path": "12"
    },
    "12198": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP1",
      "path": "12"
    },
    "12199": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "12200": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "ISZERO",
      "path": "12"
    },
    "12201": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP1",
      "path": "12"
    },
    "12202": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "ISZERO",
      "path": "12"
    },
    "12203": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2FB3"
    },
    "12206": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "JUMPI",
      "path": "12"
    },
    "12207": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12209": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP1",
      "path": "12"
    },
    "12210": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "REVERT",
      "path": "12"
    },
    "12211": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12212": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "POP",
      "path": "12"
    },
    "12213": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "GAS",
      "path": "12"
    },
    "12214": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "CALL",
      "path": "12"
    },
    "12215": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "ISZERO",
      "path": "12"
    },
    "12216": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP1",
      "path": "12"
    },
    "12217": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "ISZERO",
      "path": "12"
    },
    "12218": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2FC7"
    },
    "12221": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "JUMPI",
      "path": "12"
    },
    "12222": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12223": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12225": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP1",
      "path": "12"
    },
    "12226": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "12227": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12228": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12230": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "REVERT",
      "path": "12"
    },
    "12231": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12232": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "POP",
      "path": "12"
    },
    "12233": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "POP",
      "path": "12"
    },
    "12234": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "POP",
      "path": "12"
    },
    "12235": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "POP",
      "path": "12"
    },
    "12236": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12238": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "MLOAD",
      "path": "12"
    },
    "12239": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12240": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "12242": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "NOT",
      "path": "12"
    },
    "12243": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "12245": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP3",
      "path": "12"
    },
    "12246": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "ADD",
      "path": "12"
    },
    "12247": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "AND",
      "path": "12"
    },
    "12248": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP3",
      "path": "12"
    },
    "12249": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "ADD",
      "path": "12"
    },
    "12250": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP1",
      "path": "12"
    },
    "12251": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12253": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "MSTORE",
      "path": "12"
    },
    "12254": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "POP",
      "path": "12"
    },
    "12255": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "DUP2",
      "path": "12"
    },
    "12256": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "ADD",
      "path": "12"
    },
    "12257": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "SWAP1",
      "path": "12"
    },
    "12258": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2FEB"
    },
    "12261": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "SWAP2",
      "path": "12"
    },
    "12262": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "SWAP1",
      "path": "12"
    },
    "12263": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3652"
    },
    "12266": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [9098, 9154],
      "op": "JUMP",
      "path": "12"
    },
    "12267": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12268": {
      "fn": "MainStaking.sendRewards",
      "offset": [9098, 9154],
      "op": "POP",
      "path": "12"
    },
    "12269": {
      "branch": 147,
      "fn": "MainStaking.sendRewards",
      "offset": [9168, 9175],
      "op": "DUP1",
      "path": "12"
    },
    "12270": {
      "fn": "MainStaking.sendRewards",
      "offset": [9168, 9206],
      "op": "DUP1",
      "path": "12"
    },
    "12271": {
      "fn": "MainStaking.sendRewards",
      "offset": [9168, 9206],
      "op": "ISZERO",
      "path": "12"
    },
    "12272": {
      "fn": "MainStaking.sendRewards",
      "offset": [9168, 9206],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3003"
    },
    "12275": {
      "branch": 147,
      "fn": "MainStaking.sendRewards",
      "offset": [9168, 9206],
      "op": "JUMPI",
      "path": "12"
    },
    "12276": {
      "op": "POP"
    },
    "12277": {
      "fn": "MainStaking.sendRewards",
      "offset": [9181, 9191],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6B"
    },
    "12279": {
      "fn": "MainStaking.sendRewards",
      "offset": [9181, 9191],
      "op": "SLOAD",
      "path": "12"
    },
    "12280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12286": {
      "op": "SHL"
    },
    "12287": {
      "op": "SUB"
    },
    "12288": {
      "fn": "MainStaking.sendRewards",
      "offset": [9181, 9191],
      "op": "AND",
      "path": "12"
    },
    "12289": {
      "fn": "MainStaking.sendRewards",
      "offset": [9181, 9205],
      "op": "ISZERO",
      "path": "12"
    },
    "12290": {
      "fn": "MainStaking.sendRewards",
      "offset": [9179, 9206],
      "op": "ISZERO",
      "path": "12"
    },
    "12291": {
      "fn": "MainStaking.sendRewards",
      "offset": [9168, 9206],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12292": {
      "fn": "MainStaking.sendRewards",
      "offset": [9164, 9494],
      "op": "ISZERO",
      "path": "12"
    },
    "12293": {
      "fn": "MainStaking.sendRewards",
      "offset": [9164, 9494],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30D5"
    },
    "12296": {
      "fn": "MainStaking.sendRewards",
      "offset": [9164, 9494],
      "op": "JUMPI",
      "path": "12"
    },
    "12297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12303": {
      "op": "SHL"
    },
    "12304": {
      "op": "SUB"
    },
    "12305": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "DUP6",
      "path": "12"
    },
    "12306": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "DUP2",
      "path": "12"
    },
    "12307": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "AND",
      "path": "12"
    },
    "12308": {
      "fn": "MainStaking.sendRewards",
      "offset": [9222, 9243],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12310": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "DUP2",
      "path": "12"
    },
    "12311": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "DUP2",
      "path": "12"
    },
    "12312": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "MSTORE",
      "path": "12"
    },
    "12313": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9251],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6F"
    },
    "12315": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12317": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "MSTORE",
      "path": "12"
    },
    "12318": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12320": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "SWAP1",
      "path": "12"
    },
    "12321": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "DUP2",
      "path": "12"
    },
    "12322": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "SWAP1",
      "path": "12"
    },
    "12323": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "KECCAK256",
      "path": "12"
    },
    "12324": {
      "fn": "MainStaking.sendRewards",
      "offset": [9284, 9294],
      "op": "PUSH1",
      "path": "12",
      "statement": 110,
      "value": "0x6B"
    },
    "12326": {
      "fn": "MainStaking.sendRewards",
      "offset": [9284, 9294],
      "op": "SLOAD",
      "path": "12"
    },
    "12327": {
      "fn": "MainStaking.sendRewards",
      "offset": [9353, 9356],
      "op": "PUSH1",
      "path": "12",
      "value": "0x66"
    },
    "12329": {
      "fn": "MainStaking.sendRewards",
      "offset": [9353, 9356],
      "op": "SLOAD",
      "path": "12"
    },
    "12330": {
      "fn": "MainStaking.sendRewards",
      "offset": [9400, 9413],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "12332": {
      "fn": "MainStaking.sendRewards",
      "offset": [9400, 9413],
      "op": "DUP1",
      "path": "12"
    },
    "12333": {
      "fn": "MainStaking.sendRewards",
      "offset": [9400, 9413],
      "op": "DUP5",
      "path": "12"
    },
    "12334": {
      "fn": "MainStaking.sendRewards",
      "offset": [9400, 9413],
      "op": "ADD",
      "path": "12"
    },
    "12335": {
      "fn": "MainStaking.sendRewards",
      "offset": [9400, 9413],
      "op": "SLOAD",
      "path": "12"
    },
    "12336": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "SWAP5",
      "path": "12"
    },
    "12337": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "MLOAD",
      "path": "12"
    },
    "12338": {
      "op": "PUSH4",
      "value": "0xAC2DDB3B"
    },
    "12343": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12345": {
      "op": "SHL"
    },
    "12346": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "DUP2",
      "path": "12"
    },
    "12347": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "MSTORE",
      "path": "12"
    },
    "12348": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "SWAP1",
      "path": "12"
    },
    "12349": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "DUP2",
      "path": "12"
    },
    "12350": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "ADD",
      "path": "12"
    },
    "12351": {
      "op": "SWAP6"
    },
    "12352": {
      "op": "SWAP1"
    },
    "12353": {
      "op": "SWAP6"
    },
    "12354": {
      "op": "MSTORE"
    },
    "12355": {
      "fn": "MainStaking.sendRewards",
      "offset": [9353, 9356],
      "op": "DUP6",
      "path": "12"
    },
    "12356": {
      "fn": "MainStaking.sendRewards",
      "offset": [9353, 9356],
      "op": "AND",
      "path": "12"
    },
    "12357": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12359": {
      "op": "DUP6"
    },
    "12360": {
      "op": "ADD"
    },
    "12361": {
      "op": "MSTORE"
    },
    "12362": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12364": {
      "op": "DUP5"
    },
    "12365": {
      "op": "ADD"
    },
    "12366": {
      "op": "DUP8"
    },
    "12367": {
      "op": "SWAP1"
    },
    "12368": {
      "op": "MSTORE"
    },
    "12369": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12371": {
      "op": "DUP5"
    },
    "12372": {
      "op": "ADD"
    },
    "12373": {
      "op": "SWAP3"
    },
    "12374": {
      "op": "SWAP1"
    },
    "12375": {
      "op": "SWAP3"
    },
    "12376": {
      "op": "MSTORE"
    },
    "12377": {
      "fn": "MainStaking.sendRewards",
      "offset": [9246, 9258],
      "op": "SWAP3",
      "path": "12"
    },
    "12378": {
      "fn": "MainStaking.sendRewards",
      "offset": [9284, 9294],
      "op": "AND",
      "path": "12"
    },
    "12379": {
      "fn": "MainStaking.sendRewards",
      "offset": [9284, 9294],
      "op": "SWAP1",
      "path": "12"
    },
    "12380": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9312],
      "op": "PUSH4",
      "path": "12",
      "value": "0xAC2DDB3B"
    },
    "12385": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9312],
      "op": "SWAP1",
      "path": "12"
    },
    "12386": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12388": {
      "op": "ADD"
    },
    "12389": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12391": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12393": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "MLOAD",
      "path": "12"
    },
    "12394": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "DUP1",
      "path": "12"
    },
    "12395": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "DUP4",
      "path": "12"
    },
    "12396": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "SUB",
      "path": "12"
    },
    "12397": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "DUP2",
      "path": "12"
    },
    "12398": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12400": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "DUP8",
      "path": "12"
    },
    "12401": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "DUP1",
      "path": "12"
    },
    "12402": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "12403": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "ISZERO",
      "path": "12"
    },
    "12404": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "DUP1",
      "path": "12"
    },
    "12405": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "ISZERO",
      "path": "12"
    },
    "12406": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "PUSH2",
      "path": "12",
      "value": "0x307E"
    },
    "12409": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "JUMPI",
      "path": "12"
    },
    "12410": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12412": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "DUP1",
      "path": "12"
    },
    "12413": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "REVERT",
      "path": "12"
    },
    "12414": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12415": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "POP",
      "path": "12"
    },
    "12416": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "GAS",
      "path": "12"
    },
    "12417": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "CALL",
      "path": "12"
    },
    "12418": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "ISZERO",
      "path": "12"
    },
    "12419": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "DUP1",
      "path": "12"
    },
    "12420": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "ISZERO",
      "path": "12"
    },
    "12421": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3092"
    },
    "12424": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "JUMPI",
      "path": "12"
    },
    "12425": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12426": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12428": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "DUP1",
      "path": "12"
    },
    "12429": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "12430": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12431": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12433": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "REVERT",
      "path": "12"
    },
    "12434": {
      "fn": "MainStaking.sendRewards",
      "offset": [9272, 9427],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12435": {
      "op": "POP"
    },
    "12436": {
      "op": "POP"
    },
    "12437": {
      "fn": "MainStaking.sendRewards",
      "offset": [9469, 9472],
      "op": "PUSH1",
      "path": "12",
      "statement": 111,
      "value": "0x66"
    },
    "12439": {
      "fn": "MainStaking.sendRewards",
      "offset": [9469, 9472],
      "op": "SLOAD",
      "path": "12"
    },
    "12440": {
      "fn": "MainStaking.sendRewards",
      "offset": [9446, 9483],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12442": {
      "fn": "MainStaking.sendRewards",
      "offset": [9446, 9483],
      "op": "MLOAD",
      "path": "12"
    },
    "12443": {
      "fn": "MainStaking.sendRewards",
      "offset": [9446, 9483],
      "op": "PUSH32",
      "path": "12",
      "value": "0x6C33B8F6B4F8BA21A4621CC77C018FBB4C7663CFA25929F02DC8D36ABDE462C5"
    },
    "12476": {
      "fn": "MainStaking.sendRewards",
      "offset": [9446, 9483],
      "op": "SWAP4",
      "path": "12"
    },
    "12477": {
      "op": "POP"
    },
    "12478": {
      "fn": "MainStaking.sendRewards",
      "offset": [9446, 9483],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2007"
    },
    "12481": {
      "fn": "MainStaking.sendRewards",
      "offset": [9446, 9483],
      "op": "SWAP3",
      "path": "12"
    },
    "12482": {
      "op": "POP"
    },
    "12483": {
      "fn": "MainStaking.sendRewards",
      "offset": [9459, 9467],
      "op": "DUP9",
      "path": "12"
    },
    "12484": {
      "fn": "MainStaking.sendRewards",
      "offset": [9459, 9467],
      "op": "SWAP2",
      "path": "12"
    },
    "12485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12491": {
      "op": "SHL"
    },
    "12492": {
      "op": "SUB"
    },
    "12493": {
      "fn": "MainStaking.sendRewards",
      "offset": [9469, 9472],
      "op": "AND",
      "path": "12"
    },
    "12494": {
      "fn": "MainStaking.sendRewards",
      "offset": [9469, 9472],
      "op": "SWAP1",
      "path": "12"
    },
    "12495": {
      "fn": "MainStaking.sendRewards",
      "offset": [9474, 9482],
      "op": "DUP8",
      "path": "12"
    },
    "12496": {
      "fn": "MainStaking.sendRewards",
      "offset": [9474, 9482],
      "op": "SWAP1",
      "path": "12"
    },
    "12497": {
      "fn": "MainStaking.sendRewards",
      "offset": [9446, 9483],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3832"
    },
    "12500": {
      "fn": "MainStaking.sendRewards",
      "jump": "i",
      "offset": [9446, 9483],
      "op": "JUMP",
      "path": "12"
    },
    "12501": {
      "fn": "MainStaking.sendRewards",
      "offset": [9164, 9494],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12502": {
      "fn": "MainStaking.sendRewards",
      "offset": [7371, 9500],
      "op": "POP",
      "path": "12"
    },
    "12503": {
      "fn": "MainStaking.sendRewards",
      "offset": [7371, 9500],
      "op": "POP",
      "path": "12"
    },
    "12504": {
      "fn": "MainStaking.sendRewards",
      "offset": [7371, 9500],
      "op": "POP",
      "path": "12"
    },
    "12505": {
      "fn": "MainStaking.sendRewards",
      "offset": [7371, 9500],
      "op": "POP",
      "path": "12"
    },
    "12506": {
      "fn": "MainStaking.sendRewards",
      "offset": [7371, 9500],
      "op": "POP",
      "path": "12"
    },
    "12507": {
      "fn": "MainStaking.sendRewards",
      "jump": "o",
      "offset": [7371, 9500],
      "op": "JUMP",
      "path": "12"
    },
    "12508": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [990, 1085],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12509": {
      "offset": [2961, 2974],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12511": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2961, 2974],
      "op": "SLOAD",
      "path": "19"
    },
    "12512": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2961, 2974],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "12515": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2961, 2974],
      "op": "SWAP1",
      "path": "19"
    },
    "12516": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2961, 2974],
      "op": "DIV",
      "path": "19"
    },
    "12517": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2961, 2974],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "12519": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2961, 2974],
      "op": "AND",
      "path": "19"
    },
    "12520": {
      "offset": [2953, 3022],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3103"
    },
    "12523": {
      "offset": [2953, 3022],
      "op": "JUMPI",
      "path": "19"
    },
    "12524": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2953, 3022],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12526": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2953, 3022],
      "op": "MLOAD",
      "path": "19"
    },
    "12527": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12531": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12533": {
      "op": "SHL"
    },
    "12534": {
      "offset": [2953, 3022],
      "op": "DUP2",
      "path": "19"
    },
    "12535": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2953, 3022],
      "op": "MSTORE",
      "path": "19"
    },
    "12536": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2953, 3022],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "12538": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2953, 3022],
      "op": "ADD",
      "path": "19"
    },
    "12539": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2953, 3022],
      "op": "PUSH2",
      "path": "19",
      "value": "0x719"
    },
    "12542": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2953, 3022],
      "op": "SWAP1",
      "path": "19"
    },
    "12543": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2953, 3022],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38E5"
    },
    "12546": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "jump": "i",
      "offset": [2953, 3022],
      "op": "JUMP",
      "path": "19"
    },
    "12547": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [2953, 3022],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12548": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [1052, 1078],
      "op": "PUSH2",
      "path": "20",
      "statement": 112,
      "value": "0xC95"
    },
    "12551": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [1052, 1076],
      "op": "PUSH2",
      "path": "20",
      "value": "0x325A"
    },
    "12554": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "jump": "i",
      "offset": [1052, 1078],
      "op": "JUMP",
      "path": "20"
    },
    "12555": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2545, 2695],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12556": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2644, 2650],
      "op": "PUSH1",
      "path": "20",
      "statement": 113,
      "value": "0x33"
    },
    "12558": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2644, 2650],
      "op": "SLOAD",
      "path": "20"
    },
    "12559": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2623, 2661],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12561": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2623, 2661],
      "op": "MLOAD",
      "path": "20"
    },
    "12562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12568": {
      "op": "SHL"
    },
    "12569": {
      "op": "SUB"
    },
    "12570": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2623, 2661],
      "op": "DUP1",
      "path": "20"
    },
    "12571": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2623, 2661],
      "op": "DUP5",
      "path": "20"
    },
    "12572": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2623, 2661],
      "op": "AND",
      "path": "20"
    },
    "12573": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2623, 2661],
      "op": "SWAP3",
      "path": "20"
    },
    "12574": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2644, 2650],
      "op": "AND",
      "path": "20"
    },
    "12575": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2644, 2650],
      "op": "SWAP1",
      "path": "20"
    },
    "12576": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2623, 2661],
      "op": "PUSH32",
      "path": "20",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "12609": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2623, 2661],
      "op": "SWAP1",
      "path": "20"
    },
    "12610": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2644, 2650],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12612": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2644, 2650],
      "op": "SWAP1",
      "path": "20"
    },
    "12613": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2623, 2661],
      "op": "LOG3",
      "path": "20"
    },
    "12614": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2677],
      "op": "PUSH1",
      "path": "20",
      "statement": 114,
      "value": "0x33"
    },
    "12616": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "DUP1",
      "path": "20"
    },
    "12617": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "SLOAD",
      "path": "20"
    },
    "12618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12624": {
      "op": "SHL"
    },
    "12625": {
      "op": "SUB"
    },
    "12626": {
      "op": "NOT"
    },
    "12627": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "AND",
      "path": "20"
    },
    "12628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12634": {
      "op": "SHL"
    },
    "12635": {
      "op": "SUB"
    },
    "12636": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "SWAP3",
      "path": "20"
    },
    "12637": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "SWAP1",
      "path": "20"
    },
    "12638": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "SWAP3",
      "path": "20"
    },
    "12639": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "AND",
      "path": "20"
    },
    "12640": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "SWAP2",
      "path": "20"
    },
    "12641": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "SWAP1",
      "path": "20"
    },
    "12642": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "SWAP2",
      "path": "20"
    },
    "12643": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "OR",
      "path": "20"
    },
    "12644": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "SWAP1",
      "path": "20"
    },
    "12645": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [2671, 2688],
      "op": "SSTORE",
      "path": "20"
    },
    "12646": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "jump": "o",
      "offset": [2545, 2695],
      "op": "JUMP",
      "path": "20"
    },
    "12647": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [913, 1154],
      "op": "JUMPDEST",
      "path": "29"
    },
    "12648": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1051, 1147],
      "op": "PUSH2",
      "path": "29",
      "statement": 115,
      "value": "0x22EA"
    },
    "12651": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1071, 1076],
      "op": "DUP5",
      "path": "29"
    },
    "12652": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1101, 1128],
      "op": "PUSH4",
      "path": "29",
      "value": "0x23B872DD"
    },
    "12657": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1101, 1128],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "12659": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1101, 1128],
      "op": "SHL",
      "path": "29"
    },
    "12660": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1130, 1134],
      "op": "DUP6",
      "path": "29"
    },
    "12661": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1136, 1138],
      "op": "DUP6",
      "path": "29"
    },
    "12662": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1140, 1145],
      "op": "DUP6",
      "path": "29"
    },
    "12663": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1078, 1146],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "12665": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1078, 1146],
      "op": "MLOAD",
      "path": "29"
    },
    "12666": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1078, 1146],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "12668": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1078, 1146],
      "op": "ADD",
      "path": "29"
    },
    "12669": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1078, 1146],
      "op": "PUSH2",
      "path": "29",
      "value": "0x290A"
    },
    "12672": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1078, 1146],
      "op": "SWAP4",
      "path": "29"
    },
    "12673": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1078, 1146],
      "op": "SWAP3",
      "path": "29"
    },
    "12674": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1078, 1146],
      "op": "SWAP2",
      "path": "29"
    },
    "12675": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1078, 1146],
      "op": "SWAP1",
      "path": "29"
    },
    "12676": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1078, 1146],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3832"
    },
    "12679": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [1078, 1146],
      "op": "JUMP",
      "path": "29"
    },
    "12680": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3208, 3914],
      "op": "JUMPDEST",
      "path": "29"
    },
    "12681": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3627, 3650],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "12683": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "PUSH2",
      "path": "29",
      "value": "0x31DD"
    },
    "12686": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3681, 3685],
      "op": "DUP3",
      "path": "29"
    },
    "12687": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "12689": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "MLOAD",
      "path": "29"
    },
    "12690": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "DUP1",
      "path": "29"
    },
    "12691": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "12693": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "ADD",
      "path": "29"
    },
    "12694": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "12696": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "MSTORE",
      "path": "29"
    },
    "12697": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "DUP1",
      "path": "29"
    },
    "12698": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "12700": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "DUP2",
      "path": "29"
    },
    "12701": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "MSTORE",
      "path": "29"
    },
    "12702": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "12704": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "ADD",
      "path": "29"
    },
    "12705": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "PUSH32",
      "path": "29",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "12738": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "DUP2",
      "path": "29"
    },
    "12739": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "MSTORE",
      "path": "29"
    },
    "12740": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "POP",
      "path": "29"
    },
    "12741": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3661, 3666],
      "op": "DUP6",
      "path": "29"
    },
    "12742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12748": {
      "op": "SHL"
    },
    "12749": {
      "op": "SUB"
    },
    "12750": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3680],
      "op": "AND",
      "path": "29"
    },
    "12751": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3680],
      "op": "PUSH2",
      "path": "29",
      "value": "0x328A"
    },
    "12754": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3680],
      "op": "SWAP1",
      "path": "29"
    },
    "12755": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "SWAP3",
      "path": "29"
    },
    "12756": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "SWAP2",
      "path": "29"
    },
    "12757": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "SWAP1",
      "path": "29"
    },
    "12758": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "12763": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "AND",
      "path": "29"
    },
    "12764": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [3653, 3722],
      "op": "JUMP",
      "path": "29"
    },
    "12765": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3653, 3722],
      "op": "JUMPDEST",
      "path": "29"
    },
    "12766": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3736, 3753],
      "op": "DUP1",
      "path": "29"
    },
    "12767": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3736, 3753],
      "op": "MLOAD",
      "path": "29"
    },
    "12768": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3627, 3722],
      "op": "SWAP1",
      "path": "29"
    },
    "12769": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3627, 3722],
      "op": "SWAP2",
      "path": "29"
    },
    "12770": {
      "op": "POP"
    },
    "12771": {
      "branch": 155,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3736, 3757],
      "op": "ISZERO",
      "path": "29"
    },
    "12772": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3732, 3908],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2941"
    },
    "12775": {
      "branch": 155,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3732, 3908],
      "op": "JUMPI",
      "path": "29"
    },
    "12776": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3831, 3841],
      "op": "DUP1",
      "path": "29",
      "statement": 116
    },
    "12777": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "DUP1",
      "path": "29"
    },
    "12778": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "12780": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "ADD",
      "path": "29"
    },
    "12781": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "SWAP1",
      "path": "29"
    },
    "12782": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "MLOAD",
      "path": "29"
    },
    "12783": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "DUP2",
      "path": "29"
    },
    "12784": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "ADD",
      "path": "29"
    },
    "12785": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "SWAP1",
      "path": "29"
    },
    "12786": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "PUSH2",
      "path": "29",
      "value": "0x31FB"
    },
    "12789": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "SWAP2",
      "path": "29"
    },
    "12790": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "SWAP1",
      "path": "29"
    },
    "12791": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3652"
    },
    "12794": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [3820, 3850],
      "op": "JUMP",
      "path": "29"
    },
    "12795": {
      "branch": 156,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3820, 3850],
      "op": "JUMPDEST",
      "path": "29"
    },
    "12796": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3812, 3897],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2941"
    },
    "12799": {
      "branch": 156,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3812, 3897],
      "op": "JUMPI",
      "path": "29"
    },
    "12800": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3812, 3897],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "12802": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3812, 3897],
      "op": "MLOAD",
      "path": "29"
    },
    "12803": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12807": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12809": {
      "op": "SHL"
    },
    "12810": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3812, 3897],
      "op": "DUP2",
      "path": "29"
    },
    "12811": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3812, 3897],
      "op": "MSTORE",
      "path": "29"
    },
    "12812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12814": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3812, 3897],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "12816": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3812, 3897],
      "op": "DUP3",
      "path": "29"
    },
    "12817": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3812, 3897],
      "op": "ADD",
      "path": "29"
    },
    "12818": {
      "op": "MSTORE"
    },
    "12819": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "12821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12823": {
      "op": "DUP3"
    },
    "12824": {
      "op": "ADD"
    },
    "12825": {
      "op": "MSTORE"
    },
    "12826": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "12859": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12861": {
      "op": "DUP3"
    },
    "12862": {
      "op": "ADD"
    },
    "12863": {
      "op": "MSTORE"
    },
    "12864": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "12875": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "12877": {
      "op": "SHL"
    },
    "12878": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12880": {
      "op": "DUP3"
    },
    "12881": {
      "op": "ADD"
    },
    "12882": {
      "op": "MSTORE"
    },
    "12883": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12885": {
      "op": "ADD"
    },
    "12886": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3812, 3897],
      "op": "PUSH2",
      "path": "29",
      "value": "0x719"
    },
    "12889": {
      "op": "JUMP"
    },
    "12890": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [1091, 1202],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12891": {
      "offset": [2961, 2974],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12893": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2961, 2974],
      "op": "SLOAD",
      "path": "19"
    },
    "12894": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2961, 2974],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "12897": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2961, 2974],
      "op": "SWAP1",
      "path": "19"
    },
    "12898": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2961, 2974],
      "op": "DIV",
      "path": "19"
    },
    "12899": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2961, 2974],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "12901": {
      "branch": 153,
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2961, 2974],
      "op": "AND",
      "path": "19"
    },
    "12902": {
      "offset": [2953, 3022],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3281"
    },
    "12905": {
      "branch": 153,
      "offset": [2953, 3022],
      "op": "JUMPI",
      "path": "19"
    },
    "12906": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2953, 3022],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12908": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2953, 3022],
      "op": "MLOAD",
      "path": "19"
    },
    "12909": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12913": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12915": {
      "op": "SHL"
    },
    "12916": {
      "offset": [2953, 3022],
      "op": "DUP2",
      "path": "19"
    },
    "12917": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2953, 3022],
      "op": "MSTORE",
      "path": "19"
    },
    "12918": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2953, 3022],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "12920": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2953, 3022],
      "op": "ADD",
      "path": "19"
    },
    "12921": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2953, 3022],
      "op": "PUSH2",
      "path": "19",
      "value": "0x719"
    },
    "12924": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2953, 3022],
      "op": "SWAP1",
      "path": "19"
    },
    "12925": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2953, 3022],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38E5"
    },
    "12928": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "jump": "i",
      "offset": [2953, 3022],
      "op": "JUMP",
      "path": "19"
    },
    "12929": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [2953, 3022],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12930": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [1163, 1195],
      "op": "PUSH2",
      "path": "20",
      "statement": 117,
      "value": "0xC95"
    },
    "12933": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [907, 917],
      "op": "CALLER",
      "path": "18"
    },
    "12934": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [1163, 1181],
      "op": "PUSH2",
      "path": "20",
      "value": "0x310B"
    },
    "12937": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "jump": "i",
      "offset": [1163, 1195],
      "op": "JUMP",
      "path": "20"
    },
    "12938": {
      "fn": "Address.functionCall",
      "offset": [3846, 4069],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12939": {
      "fn": "Address.functionCall",
      "offset": [3979, 3991],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "12941": {
      "fn": "Address.functionCall",
      "offset": [4010, 4062],
      "op": "PUSH2",
      "path": "23",
      "statement": 118,
      "value": "0x3299"
    },
    "12944": {
      "fn": "Address.functionCall",
      "offset": [4032, 4038],
      "op": "DUP5",
      "path": "23"
    },
    "12945": {
      "fn": "Address.functionCall",
      "offset": [4040, 4044],
      "op": "DUP5",
      "path": "23"
    },
    "12946": {
      "fn": "Address.functionCall",
      "offset": [4046, 4047],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12948": {
      "fn": "Address.functionCall",
      "offset": [4049, 4061],
      "op": "DUP6",
      "path": "23"
    },
    "12949": {
      "fn": "Address.functionCall",
      "offset": [4010, 4031],
      "op": "PUSH2",
      "path": "23",
      "value": "0x32A3"
    },
    "12952": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [4010, 4062],
      "op": "JUMP",
      "path": "23"
    },
    "12953": {
      "fn": "Address.functionCall",
      "offset": [4010, 4062],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12954": {
      "fn": "Address.functionCall",
      "offset": [4003, 4062],
      "op": "SWAP1",
      "path": "23"
    },
    "12955": {
      "fn": "Address.functionCall",
      "offset": [4003, 4062],
      "op": "POP",
      "path": "23"
    },
    "12956": {
      "fn": "Address.functionCall",
      "offset": [3846, 4069],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12957": {
      "fn": "Address.functionCall",
      "offset": [3846, 4069],
      "op": "SWAP4",
      "path": "23"
    },
    "12958": {
      "fn": "Address.functionCall",
      "offset": [3846, 4069],
      "op": "SWAP3",
      "path": "23"
    },
    "12959": {
      "fn": "Address.functionCall",
      "offset": [3846, 4069],
      "op": "POP",
      "path": "23"
    },
    "12960": {
      "fn": "Address.functionCall",
      "offset": [3846, 4069],
      "op": "POP",
      "path": "23"
    },
    "12961": {
      "fn": "Address.functionCall",
      "offset": [3846, 4069],
      "op": "POP",
      "path": "23"
    },
    "12962": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [3846, 4069],
      "op": "JUMP",
      "path": "23"
    },
    "12963": {
      "fn": "Address.functionCallWithValue",
      "offset": [4933, 5432],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12964": {
      "fn": "Address.functionCallWithValue",
      "offset": [5098, 5110],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "12966": {
      "fn": "Address.functionCallWithValue",
      "offset": [5155, 5160],
      "op": "DUP3",
      "path": "23",
      "statement": 119
    },
    "12967": {
      "fn": "Address.functionCallWithValue",
      "offset": [5130, 5151],
      "op": "SELFBALANCE",
      "path": "23"
    },
    "12968": {
      "fn": "Address.functionCallWithValue",
      "offset": [5130, 5160],
      "op": "LT",
      "path": "23"
    },
    "12969": {
      "branch": 148,
      "fn": "Address.functionCallWithValue",
      "offset": [5130, 5160],
      "op": "ISZERO",
      "path": "23"
    },
    "12970": {
      "fn": "Address.functionCallWithValue",
      "offset": [5122, 5203],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3304"
    },
    "12973": {
      "branch": 148,
      "fn": "Address.functionCallWithValue",
      "offset": [5122, 5203],
      "op": "JUMPI",
      "path": "23"
    },
    "12974": {
      "fn": "Address.functionCallWithValue",
      "offset": [5122, 5203],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12976": {
      "fn": "Address.functionCallWithValue",
      "offset": [5122, 5203],
      "op": "MLOAD",
      "path": "23"
    },
    "12977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12983": {
      "op": "SHL"
    },
    "12984": {
      "fn": "Address.functionCallWithValue",
      "offset": [5122, 5203],
      "op": "DUP2",
      "path": "23"
    },
    "12985": {
      "fn": "Address.functionCallWithValue",
      "offset": [5122, 5203],
      "op": "MSTORE",
      "path": "23"
    },
    "12986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12988": {
      "fn": "Address.functionCallWithValue",
      "offset": [5122, 5203],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "12990": {
      "fn": "Address.functionCallWithValue",
      "offset": [5122, 5203],
      "op": "DUP3",
      "path": "23"
    },
    "12991": {
      "fn": "Address.functionCallWithValue",
      "offset": [5122, 5203],
      "op": "ADD",
      "path": "23"
    },
    "12992": {
      "op": "MSTORE"
    },
    "12993": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "12995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12997": {
      "op": "DUP3"
    },
    "12998": {
      "op": "ADD"
    },
    "12999": {
      "op": "MSTORE"
    },
    "13000": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "13033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13035": {
      "op": "DUP3"
    },
    "13036": {
      "op": "ADD"
    },
    "13037": {
      "op": "MSTORE"
    },
    "13038": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "13045": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "13047": {
      "op": "SHL"
    },
    "13048": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13050": {
      "op": "DUP3"
    },
    "13051": {
      "op": "ADD"
    },
    "13052": {
      "op": "MSTORE"
    },
    "13053": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13055": {
      "op": "ADD"
    },
    "13056": {
      "fn": "Address.functionCallWithValue",
      "offset": [5122, 5203],
      "op": "PUSH2",
      "path": "23",
      "value": "0x719"
    },
    "13059": {
      "op": "JUMP"
    },
    "13060": {
      "fn": "Address.functionCallWithValue",
      "offset": [5122, 5203],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13067": {
      "op": "SHL"
    },
    "13068": {
      "op": "SUB"
    },
    "13069": {
      "op": "DUP6"
    },
    "13070": {
      "op": "AND"
    },
    "13071": {
      "op": "EXTCODESIZE"
    },
    "13072": {
      "fn": "Address.functionCallWithValue",
      "offset": [5213, 5273],
      "op": "PUSH2",
      "path": "23",
      "statement": 120,
      "value": "0x335B"
    },
    "13075": {
      "fn": "Address.functionCallWithValue",
      "offset": [5213, 5273],
      "op": "JUMPI",
      "path": "23"
    },
    "13076": {
      "fn": "Address.functionCallWithValue",
      "offset": [5213, 5273],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13078": {
      "fn": "Address.functionCallWithValue",
      "offset": [5213, 5273],
      "op": "MLOAD",
      "path": "23"
    },
    "13079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13085": {
      "op": "SHL"
    },
    "13086": {
      "fn": "Address.functionCallWithValue",
      "offset": [5213, 5273],
      "op": "DUP2",
      "path": "23"
    },
    "13087": {
      "fn": "Address.functionCallWithValue",
      "offset": [5213, 5273],
      "op": "MSTORE",
      "path": "23"
    },
    "13088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13090": {
      "fn": "Address.functionCallWithValue",
      "offset": [5213, 5273],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "13092": {
      "fn": "Address.functionCallWithValue",
      "offset": [5213, 5273],
      "op": "DUP3",
      "path": "23"
    },
    "13093": {
      "fn": "Address.functionCallWithValue",
      "offset": [5213, 5273],
      "op": "ADD",
      "path": "23"
    },
    "13094": {
      "op": "MSTORE"
    },
    "13095": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "13097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13099": {
      "op": "DUP3"
    },
    "13100": {
      "op": "ADD"
    },
    "13101": {
      "op": "MSTORE"
    },
    "13102": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "13135": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13137": {
      "op": "DUP3"
    },
    "13138": {
      "op": "ADD"
    },
    "13139": {
      "op": "MSTORE"
    },
    "13140": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13142": {
      "op": "ADD"
    },
    "13143": {
      "fn": "Address.functionCallWithValue",
      "offset": [5213, 5273],
      "op": "PUSH2",
      "path": "23",
      "value": "0x719"
    },
    "13146": {
      "op": "JUMP"
    },
    "13147": {
      "fn": "Address.functionCallWithValue",
      "offset": [5213, 5273],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13148": {
      "fn": "Address.functionCallWithValue",
      "offset": [5285, 5297],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13150": {
      "fn": "Address.functionCallWithValue",
      "offset": [5299, 5322],
      "op": "DUP1",
      "path": "23"
    },
    "13151": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5332],
      "op": "DUP7",
      "path": "23"
    },
    "13152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13158": {
      "op": "SHL"
    },
    "13159": {
      "op": "SUB"
    },
    "13160": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5337],
      "op": "AND",
      "path": "23"
    },
    "13161": {
      "fn": "Address.functionCallWithValue",
      "offset": [5345, 5350],
      "op": "DUP6",
      "path": "23"
    },
    "13162": {
      "fn": "Address.functionCallWithValue",
      "offset": [5352, 5356],
      "op": "DUP8",
      "path": "23"
    },
    "13163": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13165": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "MLOAD",
      "path": "23"
    },
    "13166": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3377"
    },
    "13169": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "SWAP2",
      "path": "23"
    },
    "13170": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "SWAP1",
      "path": "23"
    },
    "13171": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3816"
    },
    "13174": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [5326, 5357],
      "op": "JUMP",
      "path": "23"
    },
    "13175": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13176": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13178": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13180": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "MLOAD",
      "path": "23"
    },
    "13181": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "DUP1",
      "path": "23"
    },
    "13182": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "DUP4",
      "path": "23"
    },
    "13183": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "SUB",
      "path": "23"
    },
    "13184": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "DUP2",
      "path": "23"
    },
    "13185": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "DUP6",
      "path": "23"
    },
    "13186": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "DUP8",
      "path": "23"
    },
    "13187": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "GAS",
      "path": "23"
    },
    "13188": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "CALL",
      "path": "23"
    },
    "13189": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "SWAP3",
      "path": "23"
    },
    "13190": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "POP",
      "path": "23"
    },
    "13191": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "POP",
      "path": "23"
    },
    "13192": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "POP",
      "path": "23"
    },
    "13193": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "13194": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "DUP1",
      "path": "23"
    },
    "13195": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13197": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "DUP2",
      "path": "23"
    },
    "13198": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "EQ",
      "path": "23"
    },
    "13199": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH2",
      "path": "23",
      "value": "0x33B4"
    },
    "13202": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "JUMPI",
      "path": "23"
    },
    "13203": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13205": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "MLOAD",
      "path": "23"
    },
    "13206": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "SWAP2",
      "path": "23"
    },
    "13207": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "POP",
      "path": "23"
    },
    "13208": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "13210": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "NOT",
      "path": "23"
    },
    "13211": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3F"
    },
    "13213": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "13214": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "ADD",
      "path": "23"
    },
    "13215": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "AND",
      "path": "23"
    },
    "13216": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "DUP3",
      "path": "23"
    },
    "13217": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "ADD",
      "path": "23"
    },
    "13218": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13220": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "MSTORE",
      "path": "23"
    },
    "13221": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "13222": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "DUP3",
      "path": "23"
    },
    "13223": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "MSTORE",
      "path": "23"
    },
    "13224": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "13225": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13227": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "13229": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "DUP5",
      "path": "23"
    },
    "13230": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "ADD",
      "path": "23"
    },
    "13231": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "13232": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH2",
      "path": "23",
      "value": "0x33B9"
    },
    "13235": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "JUMP",
      "path": "23"
    },
    "13236": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13237": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "13239": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "SWAP2",
      "path": "23"
    },
    "13240": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "POP",
      "path": "23"
    },
    "13241": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13242": {
      "fn": "Address.functionCallWithValue",
      "offset": [5326, 5357],
      "op": "POP",
      "path": "23"
    },
    "13243": {
      "fn": "Address.functionCallWithValue",
      "offset": [5284, 5357],
      "op": "SWAP2",
      "path": "23"
    },
    "13244": {
      "fn": "Address.functionCallWithValue",
      "offset": [5284, 5357],
      "op": "POP",
      "path": "23"
    },
    "13245": {
      "fn": "Address.functionCallWithValue",
      "offset": [5284, 5357],
      "op": "SWAP2",
      "path": "23"
    },
    "13246": {
      "fn": "Address.functionCallWithValue",
      "offset": [5284, 5357],
      "op": "POP",
      "path": "23"
    },
    "13247": {
      "fn": "Address.functionCallWithValue",
      "offset": [5374, 5425],
      "op": "PUSH2",
      "path": "23",
      "statement": 121,
      "value": "0x33C9"
    },
    "13250": {
      "fn": "Address.functionCallWithValue",
      "offset": [5391, 5398],
      "op": "DUP3",
      "path": "23"
    },
    "13251": {
      "fn": "Address.functionCallWithValue",
      "offset": [5400, 5410],
      "op": "DUP3",
      "path": "23"
    },
    "13252": {
      "fn": "Address.functionCallWithValue",
      "offset": [5412, 5424],
      "op": "DUP7",
      "path": "23"
    },
    "13253": {
      "fn": "Address.functionCallWithValue",
      "offset": [5374, 5390],
      "op": "PUSH2",
      "path": "23",
      "value": "0x33D4"
    },
    "13256": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [5374, 5425],
      "op": "JUMP",
      "path": "23"
    },
    "13257": {
      "fn": "Address.functionCallWithValue",
      "offset": [5374, 5425],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13258": {
      "fn": "Address.functionCallWithValue",
      "offset": [5367, 5425],
      "op": "SWAP8",
      "path": "23"
    },
    "13259": {
      "fn": "Address.functionCallWithValue",
      "offset": [4933, 5432],
      "op": "SWAP7",
      "path": "23"
    },
    "13260": {
      "op": "POP"
    },
    "13261": {
      "op": "POP"
    },
    "13262": {
      "op": "POP"
    },
    "13263": {
      "op": "POP"
    },
    "13264": {
      "op": "POP"
    },
    "13265": {
      "op": "POP"
    },
    "13266": {
      "op": "POP"
    },
    "13267": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [4933, 5432],
      "op": "JUMP",
      "path": "23"
    },
    "13268": {
      "fn": "Address.verifyCallResult",
      "offset": [7546, 8238],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13269": {
      "fn": "Address.verifyCallResult",
      "offset": [7692, 7704],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "13271": {
      "branch": 149,
      "fn": "Address.verifyCallResult",
      "offset": [7720, 7727],
      "op": "DUP4",
      "path": "23"
    },
    "13272": {
      "fn": "Address.verifyCallResult",
      "offset": [7716, 8232],
      "op": "ISZERO",
      "path": "23"
    },
    "13273": {
      "fn": "Address.verifyCallResult",
      "offset": [7716, 8232],
      "op": "PUSH2",
      "path": "23",
      "value": "0x33E3"
    },
    "13276": {
      "branch": 149,
      "fn": "Address.verifyCallResult",
      "offset": [7716, 8232],
      "op": "JUMPI",
      "path": "23"
    },
    "13277": {
      "op": "POP"
    },
    "13278": {
      "fn": "Address.verifyCallResult",
      "offset": [7750, 7760],
      "op": "DUP2",
      "path": "23",
      "statement": 122
    },
    "13279": {
      "fn": "Address.verifyCallResult",
      "offset": [7743, 7760],
      "op": "PUSH2",
      "path": "23",
      "value": "0x329C"
    },
    "13282": {
      "fn": "Address.verifyCallResult",
      "offset": [7743, 7760],
      "op": "JUMP",
      "path": "23"
    },
    "13283": {
      "fn": "Address.verifyCallResult",
      "offset": [7716, 8232],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13284": {
      "fn": "Address.verifyCallResult",
      "offset": [7861, 7878],
      "op": "DUP3",
      "path": "23"
    },
    "13285": {
      "fn": "Address.verifyCallResult",
      "offset": [7861, 7878],
      "op": "MLOAD",
      "path": "23"
    },
    "13286": {
      "branch": 150,
      "fn": "Address.verifyCallResult",
      "offset": [7861, 7882],
      "op": "ISZERO",
      "path": "23"
    },
    "13287": {
      "fn": "Address.verifyCallResult",
      "offset": [7857, 8222],
      "op": "PUSH2",
      "path": "23",
      "value": "0x33F3"
    },
    "13290": {
      "branch": 150,
      "fn": "Address.verifyCallResult",
      "offset": [7857, 8222],
      "op": "JUMPI",
      "path": "23"
    },
    "13291": {
      "fn": "Address.verifyCallResult",
      "offset": [8055, 8065],
      "op": "DUP3",
      "path": "23"
    },
    "13292": {
      "fn": "Address.verifyCallResult",
      "offset": [8049, 8066],
      "op": "MLOAD",
      "path": "23"
    },
    "13293": {
      "fn": "Address.verifyCallResult",
      "offset": [8115, 8130],
      "op": "DUP1",
      "path": "23"
    },
    "13294": {
      "fn": "Address.verifyCallResult",
      "offset": [8102, 8112],
      "op": "DUP5",
      "path": "23"
    },
    "13295": {
      "fn": "Address.verifyCallResult",
      "offset": [8098, 8100],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "13297": {
      "fn": "Address.verifyCallResult",
      "offset": [8094, 8113],
      "op": "ADD",
      "path": "23"
    },
    "13298": {
      "fn": "Address.verifyCallResult",
      "offset": [8087, 8131],
      "op": "REVERT",
      "path": "23"
    },
    "13299": {
      "fn": "Address.verifyCallResult",
      "offset": [7857, 8222],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13300": {
      "fn": "Address.verifyCallResult",
      "offset": [8194, 8206],
      "op": "DUP2",
      "path": "23",
      "statement": 123
    },
    "13301": {
      "fn": "Address.verifyCallResult",
      "offset": [8187, 8207],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13303": {
      "fn": "Address.verifyCallResult",
      "offset": [8187, 8207],
      "op": "MLOAD",
      "path": "23"
    },
    "13304": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13308": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13310": {
      "op": "SHL"
    },
    "13311": {
      "fn": "Address.verifyCallResult",
      "offset": [8187, 8207],
      "op": "DUP2",
      "path": "23"
    },
    "13312": {
      "fn": "Address.verifyCallResult",
      "offset": [8187, 8207],
      "op": "MSTORE",
      "path": "23"
    },
    "13313": {
      "fn": "Address.verifyCallResult",
      "offset": [8187, 8207],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "13315": {
      "fn": "Address.verifyCallResult",
      "offset": [8187, 8207],
      "op": "ADD",
      "path": "23"
    },
    "13316": {
      "fn": "Address.verifyCallResult",
      "offset": [8187, 8207],
      "op": "PUSH2",
      "path": "23",
      "value": "0x719"
    },
    "13319": {
      "fn": "Address.verifyCallResult",
      "offset": [8187, 8207],
      "op": "SWAP2",
      "path": "23"
    },
    "13320": {
      "fn": "Address.verifyCallResult",
      "offset": [8187, 8207],
      "op": "SWAP1",
      "path": "23"
    },
    "13321": {
      "fn": "Address.verifyCallResult",
      "offset": [8187, 8207],
      "op": "PUSH2",
      "path": "23",
      "value": "0x386F"
    },
    "13324": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [8187, 8207],
      "op": "JUMP",
      "path": "23"
    },
    "13325": {
      "op": "JUMPDEST"
    },
    "13326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13328": {
      "op": "DUP3"
    },
    "13329": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13331": {
      "op": "DUP4"
    },
    "13332": {
      "op": "ADD"
    },
    "13333": {
      "op": "SLT"
    },
    "13334": {
      "op": "PUSH2",
      "value": "0x341E"
    },
    "13337": {
      "op": "JUMPI"
    },
    "13338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13340": {
      "op": "DUP1"
    },
    "13341": {
      "op": "REVERT"
    },
    "13342": {
      "op": "JUMPDEST"
    },
    "13343": {
      "op": "DUP2"
    },
    "13344": {
      "op": "CALLDATALOAD"
    },
    "13345": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13354": {
      "op": "DUP1"
    },
    "13355": {
      "op": "DUP3"
    },
    "13356": {
      "op": "GT"
    },
    "13357": {
      "op": "ISZERO"
    },
    "13358": {
      "op": "PUSH2",
      "value": "0x3439"
    },
    "13361": {
      "op": "JUMPI"
    },
    "13362": {
      "op": "PUSH2",
      "value": "0x3439"
    },
    "13365": {
      "op": "PUSH2",
      "value": "0x3A13"
    },
    "13368": {
      "jump": "i",
      "op": "JUMP"
    },
    "13369": {
      "op": "JUMPDEST"
    },
    "13370": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13372": {
      "op": "MLOAD"
    },
    "13373": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13375": {
      "op": "DUP4"
    },
    "13376": {
      "op": "ADD"
    },
    "13377": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13379": {
      "op": "NOT"
    },
    "13380": {
      "op": "SWAP1"
    },
    "13381": {
      "op": "DUP2"
    },
    "13382": {
      "op": "AND"
    },
    "13383": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "13385": {
      "op": "ADD"
    },
    "13386": {
      "op": "AND"
    },
    "13387": {
      "op": "DUP2"
    },
    "13388": {
      "op": "ADD"
    },
    "13389": {
      "op": "SWAP1"
    },
    "13390": {
      "op": "DUP3"
    },
    "13391": {
      "op": "DUP3"
    },
    "13392": {
      "op": "GT"
    },
    "13393": {
      "op": "DUP2"
    },
    "13394": {
      "op": "DUP4"
    },
    "13395": {
      "op": "LT"
    },
    "13396": {
      "op": "OR"
    },
    "13397": {
      "op": "ISZERO"
    },
    "13398": {
      "op": "PUSH2",
      "value": "0x3461"
    },
    "13401": {
      "op": "JUMPI"
    },
    "13402": {
      "op": "PUSH2",
      "value": "0x3461"
    },
    "13405": {
      "op": "PUSH2",
      "value": "0x3A13"
    },
    "13408": {
      "jump": "i",
      "op": "JUMP"
    },
    "13409": {
      "op": "JUMPDEST"
    },
    "13410": {
      "op": "DUP2"
    },
    "13411": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13413": {
      "op": "MSTORE"
    },
    "13414": {
      "op": "DUP4"
    },
    "13415": {
      "op": "DUP2"
    },
    "13416": {
      "op": "MSTORE"
    },
    "13417": {
      "op": "DUP7"
    },
    "13418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13420": {
      "op": "DUP6"
    },
    "13421": {
      "op": "DUP9"
    },
    "13422": {
      "op": "ADD"
    },
    "13423": {
      "op": "ADD"
    },
    "13424": {
      "op": "GT"
    },
    "13425": {
      "op": "ISZERO"
    },
    "13426": {
      "op": "PUSH2",
      "value": "0x347A"
    },
    "13429": {
      "op": "JUMPI"
    },
    "13430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13432": {
      "op": "DUP1"
    },
    "13433": {
      "op": "REVERT"
    },
    "13434": {
      "op": "JUMPDEST"
    },
    "13435": {
      "op": "DUP4"
    },
    "13436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13438": {
      "op": "DUP8"
    },
    "13439": {
      "op": "ADD"
    },
    "13440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13442": {
      "op": "DUP4"
    },
    "13443": {
      "op": "ADD"
    },
    "13444": {
      "op": "CALLDATACOPY"
    },
    "13445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13449": {
      "op": "DUP6"
    },
    "13450": {
      "op": "DUP4"
    },
    "13451": {
      "op": "ADD"
    },
    "13452": {
      "op": "ADD"
    },
    "13453": {
      "op": "MSTORE"
    },
    "13454": {
      "op": "DUP1"
    },
    "13455": {
      "op": "SWAP5"
    },
    "13456": {
      "op": "POP"
    },
    "13457": {
      "op": "POP"
    },
    "13458": {
      "op": "POP"
    },
    "13459": {
      "op": "POP"
    },
    "13460": {
      "op": "POP"
    },
    "13461": {
      "op": "SWAP3"
    },
    "13462": {
      "op": "SWAP2"
    },
    "13463": {
      "op": "POP"
    },
    "13464": {
      "op": "POP"
    },
    "13465": {
      "jump": "o",
      "op": "JUMP"
    },
    "13466": {
      "op": "JUMPDEST"
    },
    "13467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13471": {
      "op": "DUP3"
    },
    "13472": {
      "op": "DUP5"
    },
    "13473": {
      "op": "SUB"
    },
    "13474": {
      "op": "SLT"
    },
    "13475": {
      "op": "ISZERO"
    },
    "13476": {
      "op": "PUSH2",
      "value": "0x34AC"
    },
    "13479": {
      "op": "JUMPI"
    },
    "13480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13482": {
      "op": "DUP1"
    },
    "13483": {
      "op": "REVERT"
    },
    "13484": {
      "op": "JUMPDEST"
    },
    "13485": {
      "op": "DUP2"
    },
    "13486": {
      "op": "CALLDATALOAD"
    },
    "13487": {
      "op": "PUSH2",
      "value": "0x329C"
    },
    "13490": {
      "op": "DUP2"
    },
    "13491": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13494": {
      "jump": "i",
      "op": "JUMP"
    },
    "13495": {
      "op": "JUMPDEST"
    },
    "13496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13500": {
      "op": "DUP3"
    },
    "13501": {
      "op": "DUP5"
    },
    "13502": {
      "op": "SUB"
    },
    "13503": {
      "op": "SLT"
    },
    "13504": {
      "op": "ISZERO"
    },
    "13505": {
      "op": "PUSH2",
      "value": "0x34C9"
    },
    "13508": {
      "op": "JUMPI"
    },
    "13509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13511": {
      "op": "DUP1"
    },
    "13512": {
      "op": "REVERT"
    },
    "13513": {
      "op": "JUMPDEST"
    },
    "13514": {
      "op": "DUP2"
    },
    "13515": {
      "op": "MLOAD"
    },
    "13516": {
      "op": "PUSH2",
      "value": "0x329C"
    },
    "13519": {
      "op": "DUP2"
    },
    "13520": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13523": {
      "jump": "i",
      "op": "JUMP"
    },
    "13524": {
      "op": "JUMPDEST"
    },
    "13525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13527": {
      "op": "DUP1"
    },
    "13528": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13530": {
      "op": "DUP4"
    },
    "13531": {
      "op": "DUP6"
    },
    "13532": {
      "op": "SUB"
    },
    "13533": {
      "op": "SLT"
    },
    "13534": {
      "op": "ISZERO"
    },
    "13535": {
      "op": "PUSH2",
      "value": "0x34E7"
    },
    "13538": {
      "op": "JUMPI"
    },
    "13539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13541": {
      "op": "DUP1"
    },
    "13542": {
      "op": "REVERT"
    },
    "13543": {
      "op": "JUMPDEST"
    },
    "13544": {
      "op": "DUP3"
    },
    "13545": {
      "op": "CALLDATALOAD"
    },
    "13546": {
      "op": "PUSH2",
      "value": "0x34F2"
    },
    "13549": {
      "op": "DUP2"
    },
    "13550": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13553": {
      "jump": "i",
      "op": "JUMP"
    },
    "13554": {
      "op": "JUMPDEST"
    },
    "13555": {
      "op": "SWAP2"
    },
    "13556": {
      "op": "POP"
    },
    "13557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13559": {
      "op": "DUP4"
    },
    "13560": {
      "op": "ADD"
    },
    "13561": {
      "op": "CALLDATALOAD"
    },
    "13562": {
      "op": "PUSH2",
      "value": "0x3502"
    },
    "13565": {
      "op": "DUP2"
    },
    "13566": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13569": {
      "jump": "i",
      "op": "JUMP"
    },
    "13570": {
      "op": "JUMPDEST"
    },
    "13571": {
      "op": "DUP1"
    },
    "13572": {
      "op": "SWAP2"
    },
    "13573": {
      "op": "POP"
    },
    "13574": {
      "op": "POP"
    },
    "13575": {
      "op": "SWAP3"
    },
    "13576": {
      "op": "POP"
    },
    "13577": {
      "op": "SWAP3"
    },
    "13578": {
      "op": "SWAP1"
    },
    "13579": {
      "op": "POP"
    },
    "13580": {
      "jump": "o",
      "op": "JUMP"
    },
    "13581": {
      "op": "JUMPDEST"
    },
    "13582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13584": {
      "op": "DUP1"
    },
    "13585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13587": {
      "op": "DUP1"
    },
    "13588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13590": {
      "op": "DUP1"
    },
    "13591": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13593": {
      "op": "DUP8"
    },
    "13594": {
      "op": "DUP10"
    },
    "13595": {
      "op": "SUB"
    },
    "13596": {
      "op": "SLT"
    },
    "13597": {
      "op": "ISZERO"
    },
    "13598": {
      "op": "PUSH2",
      "value": "0x3526"
    },
    "13601": {
      "op": "JUMPI"
    },
    "13602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13604": {
      "op": "DUP1"
    },
    "13605": {
      "op": "REVERT"
    },
    "13606": {
      "op": "JUMPDEST"
    },
    "13607": {
      "op": "DUP7"
    },
    "13608": {
      "op": "CALLDATALOAD"
    },
    "13609": {
      "op": "PUSH2",
      "value": "0x3531"
    },
    "13612": {
      "op": "DUP2"
    },
    "13613": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13616": {
      "jump": "i",
      "op": "JUMP"
    },
    "13617": {
      "op": "JUMPDEST"
    },
    "13618": {
      "op": "SWAP6"
    },
    "13619": {
      "op": "POP"
    },
    "13620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13622": {
      "op": "DUP8"
    },
    "13623": {
      "op": "ADD"
    },
    "13624": {
      "op": "CALLDATALOAD"
    },
    "13625": {
      "op": "PUSH2",
      "value": "0x3541"
    },
    "13628": {
      "op": "DUP2"
    },
    "13629": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13632": {
      "jump": "i",
      "op": "JUMP"
    },
    "13633": {
      "op": "JUMPDEST"
    },
    "13634": {
      "op": "SWAP5"
    },
    "13635": {
      "op": "POP"
    },
    "13636": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13638": {
      "op": "DUP8"
    },
    "13639": {
      "op": "ADD"
    },
    "13640": {
      "op": "CALLDATALOAD"
    },
    "13641": {
      "op": "PUSH2",
      "value": "0x3551"
    },
    "13644": {
      "op": "DUP2"
    },
    "13645": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13648": {
      "jump": "i",
      "op": "JUMP"
    },
    "13649": {
      "op": "JUMPDEST"
    },
    "13650": {
      "op": "SWAP4"
    },
    "13651": {
      "op": "POP"
    },
    "13652": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13654": {
      "op": "DUP8"
    },
    "13655": {
      "op": "ADD"
    },
    "13656": {
      "op": "CALLDATALOAD"
    },
    "13657": {
      "op": "PUSH2",
      "value": "0x3561"
    },
    "13660": {
      "op": "DUP2"
    },
    "13661": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13664": {
      "jump": "i",
      "op": "JUMP"
    },
    "13665": {
      "op": "JUMPDEST"
    },
    "13666": {
      "op": "SWAP3"
    },
    "13667": {
      "op": "POP"
    },
    "13668": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13670": {
      "op": "DUP8"
    },
    "13671": {
      "op": "ADD"
    },
    "13672": {
      "op": "CALLDATALOAD"
    },
    "13673": {
      "op": "PUSH2",
      "value": "0x3571"
    },
    "13676": {
      "op": "DUP2"
    },
    "13677": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13680": {
      "jump": "i",
      "op": "JUMP"
    },
    "13681": {
      "op": "JUMPDEST"
    },
    "13682": {
      "op": "DUP1"
    },
    "13683": {
      "op": "SWAP3"
    },
    "13684": {
      "op": "POP"
    },
    "13685": {
      "op": "POP"
    },
    "13686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13688": {
      "op": "DUP8"
    },
    "13689": {
      "op": "ADD"
    },
    "13690": {
      "op": "CALLDATALOAD"
    },
    "13691": {
      "op": "SWAP1"
    },
    "13692": {
      "op": "POP"
    },
    "13693": {
      "op": "SWAP3"
    },
    "13694": {
      "op": "SWAP6"
    },
    "13695": {
      "op": "POP"
    },
    "13696": {
      "op": "SWAP3"
    },
    "13697": {
      "op": "SWAP6"
    },
    "13698": {
      "op": "POP"
    },
    "13699": {
      "op": "SWAP3"
    },
    "13700": {
      "op": "SWAP6"
    },
    "13701": {
      "jump": "o",
      "op": "JUMP"
    },
    "13702": {
      "op": "JUMPDEST"
    },
    "13703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13705": {
      "op": "DUP1"
    },
    "13706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13708": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13710": {
      "op": "DUP5"
    },
    "13711": {
      "op": "DUP7"
    },
    "13712": {
      "op": "SUB"
    },
    "13713": {
      "op": "SLT"
    },
    "13714": {
      "op": "ISZERO"
    },
    "13715": {
      "op": "PUSH2",
      "value": "0x359B"
    },
    "13718": {
      "op": "JUMPI"
    },
    "13719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13721": {
      "op": "DUP1"
    },
    "13722": {
      "op": "REVERT"
    },
    "13723": {
      "op": "JUMPDEST"
    },
    "13724": {
      "op": "DUP4"
    },
    "13725": {
      "op": "CALLDATALOAD"
    },
    "13726": {
      "op": "PUSH2",
      "value": "0x35A6"
    },
    "13729": {
      "op": "DUP2"
    },
    "13730": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13733": {
      "jump": "i",
      "op": "JUMP"
    },
    "13734": {
      "op": "JUMPDEST"
    },
    "13735": {
      "op": "SWAP3"
    },
    "13736": {
      "op": "POP"
    },
    "13737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13739": {
      "op": "DUP5"
    },
    "13740": {
      "op": "ADD"
    },
    "13741": {
      "op": "CALLDATALOAD"
    },
    "13742": {
      "op": "PUSH2",
      "value": "0x35B6"
    },
    "13745": {
      "op": "DUP2"
    },
    "13746": {
      "op": "PUSH2",
      "value": "0x3A3E"
    },
    "13749": {
      "jump": "i",
      "op": "JUMP"
    },
    "13750": {
      "op": "JUMPDEST"
    },
    "13751": {
      "op": "SWAP2"
    },
    "13752": {
      "op": "POP"
    },
    "13753": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13755": {
      "op": "DUP5"
    },
    "13756": {
      "op": "ADD"
    },
    "13757": {
      "op": "CALLDATALOAD"
    },
    "13758": {
      "op": "PUSH2",
      "value": "0x35C6"
    },
    "13761": {
      "op": "DUP2"
    },
    "13762": {
      "op": "PUSH2",
      "value": "0x3A3E"
    },
    "13765": {
      "jump": "i",
      "op": "JUMP"
    },
    "13766": {
      "op": "JUMPDEST"
    },
    "13767": {
      "op": "DUP1"
    },
    "13768": {
      "op": "SWAP2"
    },
    "13769": {
      "op": "POP"
    },
    "13770": {
      "op": "POP"
    },
    "13771": {
      "op": "SWAP3"
    },
    "13772": {
      "op": "POP"
    },
    "13773": {
      "op": "SWAP3"
    },
    "13774": {
      "op": "POP"
    },
    "13775": {
      "op": "SWAP3"
    },
    "13776": {
      "jump": "o",
      "op": "JUMP"
    },
    "13777": {
      "op": "JUMPDEST"
    },
    "13778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13780": {
      "op": "DUP1"
    },
    "13781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13783": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13785": {
      "op": "DUP5"
    },
    "13786": {
      "op": "DUP7"
    },
    "13787": {
      "op": "SUB"
    },
    "13788": {
      "op": "SLT"
    },
    "13789": {
      "op": "ISZERO"
    },
    "13790": {
      "op": "PUSH2",
      "value": "0x35E6"
    },
    "13793": {
      "op": "JUMPI"
    },
    "13794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13796": {
      "op": "DUP1"
    },
    "13797": {
      "op": "REVERT"
    },
    "13798": {
      "op": "JUMPDEST"
    },
    "13799": {
      "op": "DUP4"
    },
    "13800": {
      "op": "CALLDATALOAD"
    },
    "13801": {
      "op": "PUSH2",
      "value": "0x35F1"
    },
    "13804": {
      "op": "DUP2"
    },
    "13805": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13808": {
      "jump": "i",
      "op": "JUMP"
    },
    "13809": {
      "op": "JUMPDEST"
    },
    "13810": {
      "op": "SWAP3"
    },
    "13811": {
      "op": "POP"
    },
    "13812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13814": {
      "op": "DUP5"
    },
    "13815": {
      "op": "ADD"
    },
    "13816": {
      "op": "CALLDATALOAD"
    },
    "13817": {
      "op": "SWAP2"
    },
    "13818": {
      "op": "POP"
    },
    "13819": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13821": {
      "op": "DUP5"
    },
    "13822": {
      "op": "ADD"
    },
    "13823": {
      "op": "CALLDATALOAD"
    },
    "13824": {
      "op": "PUSH2",
      "value": "0x35C6"
    },
    "13827": {
      "op": "DUP2"
    },
    "13828": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13831": {
      "jump": "i",
      "op": "JUMP"
    },
    "13832": {
      "op": "JUMPDEST"
    },
    "13833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13835": {
      "op": "DUP1"
    },
    "13836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13838": {
      "op": "DUP1"
    },
    "13839": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13841": {
      "op": "DUP6"
    },
    "13842": {
      "op": "DUP8"
    },
    "13843": {
      "op": "SUB"
    },
    "13844": {
      "op": "SLT"
    },
    "13845": {
      "op": "ISZERO"
    },
    "13846": {
      "op": "PUSH2",
      "value": "0x361E"
    },
    "13849": {
      "op": "JUMPI"
    },
    "13850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13852": {
      "op": "DUP1"
    },
    "13853": {
      "op": "REVERT"
    },
    "13854": {
      "op": "JUMPDEST"
    },
    "13855": {
      "op": "DUP5"
    },
    "13856": {
      "op": "CALLDATALOAD"
    },
    "13857": {
      "op": "PUSH2",
      "value": "0x3629"
    },
    "13860": {
      "op": "DUP2"
    },
    "13861": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13864": {
      "jump": "i",
      "op": "JUMP"
    },
    "13865": {
      "op": "JUMPDEST"
    },
    "13866": {
      "op": "SWAP4"
    },
    "13867": {
      "op": "POP"
    },
    "13868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13870": {
      "op": "DUP6"
    },
    "13871": {
      "op": "ADD"
    },
    "13872": {
      "op": "CALLDATALOAD"
    },
    "13873": {
      "op": "SWAP3"
    },
    "13874": {
      "op": "POP"
    },
    "13875": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13877": {
      "op": "DUP6"
    },
    "13878": {
      "op": "ADD"
    },
    "13879": {
      "op": "CALLDATALOAD"
    },
    "13880": {
      "op": "SWAP2"
    },
    "13881": {
      "op": "POP"
    },
    "13882": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13884": {
      "op": "DUP6"
    },
    "13885": {
      "op": "ADD"
    },
    "13886": {
      "op": "CALLDATALOAD"
    },
    "13887": {
      "op": "PUSH2",
      "value": "0x3647"
    },
    "13890": {
      "op": "DUP2"
    },
    "13891": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "13894": {
      "jump": "i",
      "op": "JUMP"
    },
    "13895": {
      "op": "JUMPDEST"
    },
    "13896": {
      "op": "SWAP4"
    },
    "13897": {
      "op": "SWAP7"
    },
    "13898": {
      "op": "SWAP3"
    },
    "13899": {
      "op": "SWAP6"
    },
    "13900": {
      "op": "POP"
    },
    "13901": {
      "op": "SWAP1"
    },
    "13902": {
      "op": "SWAP4"
    },
    "13903": {
      "op": "POP"
    },
    "13904": {
      "op": "POP"
    },
    "13905": {
      "jump": "o",
      "op": "JUMP"
    },
    "13906": {
      "op": "JUMPDEST"
    },
    "13907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13911": {
      "op": "DUP3"
    },
    "13912": {
      "op": "DUP5"
    },
    "13913": {
      "op": "SUB"
    },
    "13914": {
      "op": "SLT"
    },
    "13915": {
      "op": "ISZERO"
    },
    "13916": {
      "op": "PUSH2",
      "value": "0x3664"
    },
    "13919": {
      "op": "JUMPI"
    },
    "13920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13922": {
      "op": "DUP1"
    },
    "13923": {
      "op": "REVERT"
    },
    "13924": {
      "op": "JUMPDEST"
    },
    "13925": {
      "op": "DUP2"
    },
    "13926": {
      "op": "MLOAD"
    },
    "13927": {
      "op": "PUSH2",
      "value": "0x329C"
    },
    "13930": {
      "op": "DUP2"
    },
    "13931": {
      "op": "PUSH2",
      "value": "0x3A3E"
    },
    "13934": {
      "jump": "i",
      "op": "JUMP"
    },
    "13935": {
      "op": "JUMPDEST"
    },
    "13936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13940": {
      "op": "DUP3"
    },
    "13941": {
      "op": "DUP5"
    },
    "13942": {
      "op": "SUB"
    },
    "13943": {
      "op": "SLT"
    },
    "13944": {
      "op": "ISZERO"
    },
    "13945": {
      "op": "PUSH2",
      "value": "0x3681"
    },
    "13948": {
      "op": "JUMPI"
    },
    "13949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13951": {
      "op": "DUP1"
    },
    "13952": {
      "op": "REVERT"
    },
    "13953": {
      "op": "JUMPDEST"
    },
    "13954": {
      "op": "POP"
    },
    "13955": {
      "op": "CALLDATALOAD"
    },
    "13956": {
      "op": "SWAP2"
    },
    "13957": {
      "op": "SWAP1"
    },
    "13958": {
      "op": "POP"
    },
    "13959": {
      "jump": "o",
      "op": "JUMP"
    },
    "13960": {
      "op": "JUMPDEST"
    },
    "13961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13965": {
      "op": "DUP3"
    },
    "13966": {
      "op": "DUP5"
    },
    "13967": {
      "op": "SUB"
    },
    "13968": {
      "op": "SLT"
    },
    "13969": {
      "op": "ISZERO"
    },
    "13970": {
      "op": "PUSH2",
      "value": "0x369A"
    },
    "13973": {
      "op": "JUMPI"
    },
    "13974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13976": {
      "op": "DUP1"
    },
    "13977": {
      "op": "REVERT"
    },
    "13978": {
      "op": "JUMPDEST"
    },
    "13979": {
      "op": "POP"
    },
    "13980": {
      "op": "MLOAD"
    },
    "13981": {
      "op": "SWAP2"
    },
    "13982": {
      "op": "SWAP1"
    },
    "13983": {
      "op": "POP"
    },
    "13984": {
      "jump": "o",
      "op": "JUMP"
    },
    "13985": {
      "op": "JUMPDEST"
    },
    "13986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13988": {
      "op": "DUP1"
    },
    "13989": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13991": {
      "op": "DUP4"
    },
    "13992": {
      "op": "DUP6"
    },
    "13993": {
      "op": "SUB"
    },
    "13994": {
      "op": "SLT"
    },
    "13995": {
      "op": "ISZERO"
    },
    "13996": {
      "op": "PUSH2",
      "value": "0x36B4"
    },
    "13999": {
      "op": "JUMPI"
    },
    "14000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14002": {
      "op": "DUP1"
    },
    "14003": {
      "op": "REVERT"
    },
    "14004": {
      "op": "JUMPDEST"
    },
    "14005": {
      "op": "DUP3"
    },
    "14006": {
      "op": "CALLDATALOAD"
    },
    "14007": {
      "op": "SWAP2"
    },
    "14008": {
      "op": "POP"
    },
    "14009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14011": {
      "op": "DUP4"
    },
    "14012": {
      "op": "ADD"
    },
    "14013": {
      "op": "CALLDATALOAD"
    },
    "14014": {
      "op": "PUSH2",
      "value": "0x3502"
    },
    "14017": {
      "op": "DUP2"
    },
    "14018": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "14021": {
      "jump": "i",
      "op": "JUMP"
    },
    "14022": {
      "op": "JUMPDEST"
    },
    "14023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14025": {
      "op": "DUP1"
    },
    "14026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14028": {
      "op": "DUP1"
    },
    "14029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14031": {
      "op": "DUP1"
    },
    "14032": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14034": {
      "op": "DUP8"
    },
    "14035": {
      "op": "DUP10"
    },
    "14036": {
      "op": "SUB"
    },
    "14037": {
      "op": "SLT"
    },
    "14038": {
      "op": "ISZERO"
    },
    "14039": {
      "op": "PUSH2",
      "value": "0x36DF"
    },
    "14042": {
      "op": "JUMPI"
    },
    "14043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14045": {
      "op": "DUP1"
    },
    "14046": {
      "op": "REVERT"
    },
    "14047": {
      "op": "JUMPDEST"
    },
    "14048": {
      "op": "DUP7"
    },
    "14049": {
      "op": "CALLDATALOAD"
    },
    "14050": {
      "op": "SWAP6"
    },
    "14051": {
      "op": "POP"
    },
    "14052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14054": {
      "op": "DUP8"
    },
    "14055": {
      "op": "ADD"
    },
    "14056": {
      "op": "CALLDATALOAD"
    },
    "14057": {
      "op": "PUSH2",
      "value": "0x36F1"
    },
    "14060": {
      "op": "DUP2"
    },
    "14061": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "14064": {
      "jump": "i",
      "op": "JUMP"
    },
    "14065": {
      "op": "JUMPDEST"
    },
    "14066": {
      "op": "SWAP5"
    },
    "14067": {
      "op": "POP"
    },
    "14068": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14070": {
      "op": "DUP8"
    },
    "14071": {
      "op": "ADD"
    },
    "14072": {
      "op": "CALLDATALOAD"
    },
    "14073": {
      "op": "PUSH2",
      "value": "0x3701"
    },
    "14076": {
      "op": "DUP2"
    },
    "14077": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "14080": {
      "jump": "i",
      "op": "JUMP"
    },
    "14081": {
      "op": "JUMPDEST"
    },
    "14082": {
      "op": "SWAP4"
    },
    "14083": {
      "op": "POP"
    },
    "14084": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14086": {
      "op": "DUP8"
    },
    "14087": {
      "op": "ADD"
    },
    "14088": {
      "op": "CALLDATALOAD"
    },
    "14089": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14098": {
      "op": "DUP1"
    },
    "14099": {
      "op": "DUP3"
    },
    "14100": {
      "op": "GT"
    },
    "14101": {
      "op": "ISZERO"
    },
    "14102": {
      "op": "PUSH2",
      "value": "0x371E"
    },
    "14105": {
      "op": "JUMPI"
    },
    "14106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14108": {
      "op": "DUP1"
    },
    "14109": {
      "op": "REVERT"
    },
    "14110": {
      "op": "JUMPDEST"
    },
    "14111": {
      "op": "PUSH2",
      "value": "0x372A"
    },
    "14114": {
      "op": "DUP11"
    },
    "14115": {
      "op": "DUP4"
    },
    "14116": {
      "op": "DUP12"
    },
    "14117": {
      "op": "ADD"
    },
    "14118": {
      "op": "PUSH2",
      "value": "0x340D"
    },
    "14121": {
      "jump": "i",
      "op": "JUMP"
    },
    "14122": {
      "op": "JUMPDEST"
    },
    "14123": {
      "op": "SWAP5"
    },
    "14124": {
      "op": "POP"
    },
    "14125": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14127": {
      "op": "DUP10"
    },
    "14128": {
      "op": "ADD"
    },
    "14129": {
      "op": "CALLDATALOAD"
    },
    "14130": {
      "op": "SWAP2"
    },
    "14131": {
      "op": "POP"
    },
    "14132": {
      "op": "DUP1"
    },
    "14133": {
      "op": "DUP3"
    },
    "14134": {
      "op": "GT"
    },
    "14135": {
      "op": "ISZERO"
    },
    "14136": {
      "op": "PUSH2",
      "value": "0x3740"
    },
    "14139": {
      "op": "JUMPI"
    },
    "14140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14142": {
      "op": "DUP1"
    },
    "14143": {
      "op": "REVERT"
    },
    "14144": {
      "op": "JUMPDEST"
    },
    "14145": {
      "op": "POP"
    },
    "14146": {
      "op": "PUSH2",
      "value": "0x374D"
    },
    "14149": {
      "op": "DUP10"
    },
    "14150": {
      "op": "DUP3"
    },
    "14151": {
      "op": "DUP11"
    },
    "14152": {
      "op": "ADD"
    },
    "14153": {
      "op": "PUSH2",
      "value": "0x340D"
    },
    "14156": {
      "jump": "i",
      "op": "JUMP"
    },
    "14157": {
      "op": "JUMPDEST"
    },
    "14158": {
      "op": "SWAP3"
    },
    "14159": {
      "op": "POP"
    },
    "14160": {
      "op": "POP"
    },
    "14161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14163": {
      "op": "DUP8"
    },
    "14164": {
      "op": "ADD"
    },
    "14165": {
      "op": "CALLDATALOAD"
    },
    "14166": {
      "op": "SWAP1"
    },
    "14167": {
      "op": "POP"
    },
    "14168": {
      "op": "SWAP3"
    },
    "14169": {
      "op": "SWAP6"
    },
    "14170": {
      "op": "POP"
    },
    "14171": {
      "op": "SWAP3"
    },
    "14172": {
      "op": "SWAP6"
    },
    "14173": {
      "op": "POP"
    },
    "14174": {
      "op": "SWAP3"
    },
    "14175": {
      "op": "SWAP6"
    },
    "14176": {
      "jump": "o",
      "op": "JUMP"
    },
    "14177": {
      "op": "JUMPDEST"
    },
    "14178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14180": {
      "op": "DUP1"
    },
    "14181": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14183": {
      "op": "DUP4"
    },
    "14184": {
      "op": "DUP6"
    },
    "14185": {
      "op": "SUB"
    },
    "14186": {
      "op": "SLT"
    },
    "14187": {
      "op": "ISZERO"
    },
    "14188": {
      "op": "PUSH2",
      "value": "0x3774"
    },
    "14191": {
      "op": "JUMPI"
    },
    "14192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14194": {
      "op": "DUP1"
    },
    "14195": {
      "op": "REVERT"
    },
    "14196": {
      "op": "JUMPDEST"
    },
    "14197": {
      "op": "POP"
    },
    "14198": {
      "op": "POP"
    },
    "14199": {
      "op": "DUP1"
    },
    "14200": {
      "op": "CALLDATALOAD"
    },
    "14201": {
      "op": "SWAP3"
    },
    "14202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14204": {
      "op": "SWAP1"
    },
    "14205": {
      "op": "SWAP2"
    },
    "14206": {
      "op": "ADD"
    },
    "14207": {
      "op": "CALLDATALOAD"
    },
    "14208": {
      "op": "SWAP2"
    },
    "14209": {
      "op": "POP"
    },
    "14210": {
      "jump": "o",
      "op": "JUMP"
    },
    "14211": {
      "op": "JUMPDEST"
    },
    "14212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14214": {
      "op": "DUP1"
    },
    "14215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14217": {
      "op": "DUP1"
    },
    "14218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14220": {
      "op": "DUP1"
    },
    "14221": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14223": {
      "op": "DUP8"
    },
    "14224": {
      "op": "DUP10"
    },
    "14225": {
      "op": "SUB"
    },
    "14226": {
      "op": "SLT"
    },
    "14227": {
      "op": "ISZERO"
    },
    "14228": {
      "op": "PUSH2",
      "value": "0x379C"
    },
    "14231": {
      "op": "JUMPI"
    },
    "14232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14234": {
      "op": "DUP1"
    },
    "14235": {
      "op": "REVERT"
    },
    "14236": {
      "op": "JUMPDEST"
    },
    "14237": {
      "op": "DUP7"
    },
    "14238": {
      "op": "CALLDATALOAD"
    },
    "14239": {
      "op": "SWAP6"
    },
    "14240": {
      "op": "POP"
    },
    "14241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14243": {
      "op": "DUP8"
    },
    "14244": {
      "op": "ADD"
    },
    "14245": {
      "op": "CALLDATALOAD"
    },
    "14246": {
      "op": "SWAP5"
    },
    "14247": {
      "op": "POP"
    },
    "14248": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14250": {
      "op": "DUP8"
    },
    "14251": {
      "op": "ADD"
    },
    "14252": {
      "op": "CALLDATALOAD"
    },
    "14253": {
      "op": "SWAP4"
    },
    "14254": {
      "op": "POP"
    },
    "14255": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14257": {
      "op": "DUP8"
    },
    "14258": {
      "op": "ADD"
    },
    "14259": {
      "op": "CALLDATALOAD"
    },
    "14260": {
      "op": "PUSH2",
      "value": "0x37BC"
    },
    "14263": {
      "op": "DUP2"
    },
    "14264": {
      "op": "PUSH2",
      "value": "0x3A29"
    },
    "14267": {
      "jump": "i",
      "op": "JUMP"
    },
    "14268": {
      "op": "JUMPDEST"
    },
    "14269": {
      "op": "SWAP3"
    },
    "14270": {
      "op": "POP"
    },
    "14271": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14273": {
      "op": "DUP8"
    },
    "14274": {
      "op": "ADD"
    },
    "14275": {
      "op": "CALLDATALOAD"
    },
    "14276": {
      "op": "PUSH2",
      "value": "0x37CC"
    },
    "14279": {
      "op": "DUP2"
    },
    "14280": {
      "op": "PUSH2",
      "value": "0x3A3E"
    },
    "14283": {
      "jump": "i",
      "op": "JUMP"
    },
    "14284": {
      "op": "JUMPDEST"
    },
    "14285": {
      "op": "SWAP2"
    },
    "14286": {
      "op": "POP"
    },
    "14287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14289": {
      "op": "DUP8"
    },
    "14290": {
      "op": "ADD"
    },
    "14291": {
      "op": "CALLDATALOAD"
    },
    "14292": {
      "op": "PUSH2",
      "value": "0x37DC"
    },
    "14295": {
      "op": "DUP2"
    },
    "14296": {
      "op": "PUSH2",
      "value": "0x3A3E"
    },
    "14299": {
      "jump": "i",
      "op": "JUMP"
    },
    "14300": {
      "op": "JUMPDEST"
    },
    "14301": {
      "op": "DUP1"
    },
    "14302": {
      "op": "SWAP2"
    },
    "14303": {
      "op": "POP"
    },
    "14304": {
      "op": "POP"
    },
    "14305": {
      "op": "SWAP3"
    },
    "14306": {
      "op": "SWAP6"
    },
    "14307": {
      "op": "POP"
    },
    "14308": {
      "op": "SWAP3"
    },
    "14309": {
      "op": "SWAP6"
    },
    "14310": {
      "op": "POP"
    },
    "14311": {
      "op": "SWAP3"
    },
    "14312": {
      "op": "SWAP6"
    },
    "14313": {
      "jump": "o",
      "op": "JUMP"
    },
    "14314": {
      "op": "JUMPDEST"
    },
    "14315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14317": {
      "op": "DUP2"
    },
    "14318": {
      "op": "MLOAD"
    },
    "14319": {
      "op": "DUP1"
    },
    "14320": {
      "op": "DUP5"
    },
    "14321": {
      "op": "MSTORE"
    },
    "14322": {
      "op": "PUSH2",
      "value": "0x3802"
    },
    "14325": {
      "op": "DUP2"
    },
    "14326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14328": {
      "op": "DUP7"
    },
    "14329": {
      "op": "ADD"
    },
    "14330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14332": {
      "op": "DUP7"
    },
    "14333": {
      "op": "ADD"
    },
    "14334": {
      "op": "PUSH2",
      "value": "0x39A0"
    },
    "14337": {
      "jump": "i",
      "op": "JUMP"
    },
    "14338": {
      "op": "JUMPDEST"
    },
    "14339": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14341": {
      "op": "ADD"
    },
    "14342": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14344": {
      "op": "NOT"
    },
    "14345": {
      "op": "AND"
    },
    "14346": {
      "op": "SWAP3"
    },
    "14347": {
      "op": "SWAP1"
    },
    "14348": {
      "op": "SWAP3"
    },
    "14349": {
      "op": "ADD"
    },
    "14350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14352": {
      "op": "ADD"
    },
    "14353": {
      "op": "SWAP3"
    },
    "14354": {
      "op": "SWAP2"
    },
    "14355": {
      "op": "POP"
    },
    "14356": {
      "op": "POP"
    },
    "14357": {
      "jump": "o",
      "op": "JUMP"
    },
    "14358": {
      "op": "JUMPDEST"
    },
    "14359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14361": {
      "op": "DUP3"
    },
    "14362": {
      "op": "MLOAD"
    },
    "14363": {
      "op": "PUSH2",
      "value": "0x3828"
    },
    "14366": {
      "op": "DUP2"
    },
    "14367": {
      "op": "DUP5"
    },
    "14368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14370": {
      "op": "DUP8"
    },
    "14371": {
      "op": "ADD"
    },
    "14372": {
      "op": "PUSH2",
      "value": "0x39A0"
    },
    "14375": {
      "jump": "i",
      "op": "JUMP"
    },
    "14376": {
      "op": "JUMPDEST"
    },
    "14377": {
      "op": "SWAP2"
    },
    "14378": {
      "op": "SWAP1"
    },
    "14379": {
      "op": "SWAP2"
    },
    "14380": {
      "op": "ADD"
    },
    "14381": {
      "op": "SWAP3"
    },
    "14382": {
      "op": "SWAP2"
    },
    "14383": {
      "op": "POP"
    },
    "14384": {
      "op": "POP"
    },
    "14385": {
      "jump": "o",
      "op": "JUMP"
    },
    "14386": {
      "op": "JUMPDEST"
    },
    "14387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14393": {
      "op": "SHL"
    },
    "14394": {
      "op": "SUB"
    },
    "14395": {
      "op": "SWAP4"
    },
    "14396": {
      "op": "DUP5"
    },
    "14397": {
      "op": "AND"
    },
    "14398": {
      "op": "DUP2"
    },
    "14399": {
      "op": "MSTORE"
    },
    "14400": {
      "op": "SWAP2"
    },
    "14401": {
      "op": "SWAP1"
    },
    "14402": {
      "op": "SWAP3"
    },
    "14403": {
      "op": "AND"
    },
    "14404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14406": {
      "op": "DUP3"
    },
    "14407": {
      "op": "ADD"
    },
    "14408": {
      "op": "MSTORE"
    },
    "14409": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14411": {
      "op": "DUP2"
    },
    "14412": {
      "op": "ADD"
    },
    "14413": {
      "op": "SWAP2"
    },
    "14414": {
      "op": "SWAP1"
    },
    "14415": {
      "op": "SWAP2"
    },
    "14416": {
      "op": "MSTORE"
    },
    "14417": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14419": {
      "op": "ADD"
    },
    "14420": {
      "op": "SWAP1"
    },
    "14421": {
      "jump": "o",
      "op": "JUMP"
    },
    "14422": {
      "op": "JUMPDEST"
    },
    "14423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14429": {
      "op": "SHL"
    },
    "14430": {
      "op": "SUB"
    },
    "14431": {
      "op": "SWAP3"
    },
    "14432": {
      "op": "SWAP1"
    },
    "14433": {
      "op": "SWAP3"
    },
    "14434": {
      "op": "AND"
    },
    "14435": {
      "op": "DUP3"
    },
    "14436": {
      "op": "MSTORE"
    },
    "14437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14439": {
      "op": "DUP3"
    },
    "14440": {
      "op": "ADD"
    },
    "14441": {
      "op": "MSTORE"
    },
    "14442": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14444": {
      "op": "ADD"
    },
    "14445": {
      "op": "SWAP1"
    },
    "14446": {
      "jump": "o",
      "op": "JUMP"
    },
    "14447": {
      "op": "JUMPDEST"
    },
    "14448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14450": {
      "op": "DUP2"
    },
    "14451": {
      "op": "MSTORE"
    },
    "14452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14454": {
      "op": "PUSH2",
      "value": "0x329C"
    },
    "14457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14459": {
      "op": "DUP4"
    },
    "14460": {
      "op": "ADD"
    },
    "14461": {
      "op": "DUP5"
    },
    "14462": {
      "op": "PUSH2",
      "value": "0x37EA"
    },
    "14465": {
      "jump": "i",
      "op": "JUMP"
    },
    "14466": {
      "op": "JUMPDEST"
    },
    "14467": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14469": {
      "op": "DUP2"
    },
    "14470": {
      "op": "MSTORE"
    },
    "14471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14473": {
      "op": "PUSH2",
      "value": "0x3895"
    },
    "14476": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14478": {
      "op": "DUP4"
    },
    "14479": {
      "op": "ADD"
    },
    "14480": {
      "op": "DUP6"
    },
    "14481": {
      "op": "PUSH2",
      "value": "0x37EA"
    },
    "14484": {
      "jump": "i",
      "op": "JUMP"
    },
    "14485": {
      "op": "JUMPDEST"
    },
    "14486": {
      "op": "DUP3"
    },
    "14487": {
      "op": "DUP2"
    },
    "14488": {
      "op": "SUB"
    },
    "14489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14491": {
      "op": "DUP5"
    },
    "14492": {
      "op": "ADD"
    },
    "14493": {
      "op": "MSTORE"
    },
    "14494": {
      "op": "PUSH2",
      "value": "0x38A7"
    },
    "14497": {
      "op": "DUP2"
    },
    "14498": {
      "op": "DUP6"
    },
    "14499": {
      "op": "PUSH2",
      "value": "0x37EA"
    },
    "14502": {
      "jump": "i",
      "op": "JUMP"
    },
    "14503": {
      "op": "JUMPDEST"
    },
    "14504": {
      "op": "SWAP6"
    },
    "14505": {
      "op": "SWAP5"
    },
    "14506": {
      "op": "POP"
    },
    "14507": {
      "op": "POP"
    },
    "14508": {
      "op": "POP"
    },
    "14509": {
      "op": "POP"
    },
    "14510": {
      "op": "POP"
    },
    "14511": {
      "jump": "o",
      "op": "JUMP"
    },
    "14512": {
      "op": "JUMPDEST"
    },
    "14513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14515": {
      "op": "DUP1"
    },
    "14516": {
      "op": "DUP3"
    },
    "14517": {
      "op": "MSTORE"
    },
    "14518": {
      "op": "DUP2"
    },
    "14519": {
      "op": "DUP2"
    },
    "14520": {
      "op": "ADD"
    },
    "14521": {
      "op": "MSTORE"
    },
    "14522": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "14555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14557": {
      "op": "DUP3"
    },
    "14558": {
      "op": "ADD"
    },
    "14559": {
      "op": "MSTORE"
    },
    "14560": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14562": {
      "op": "ADD"
    },
    "14563": {
      "op": "SWAP1"
    },
    "14564": {
      "jump": "o",
      "op": "JUMP"
    },
    "14565": {
      "op": "JUMPDEST"
    },
    "14566": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14568": {
      "op": "DUP1"
    },
    "14569": {
      "op": "DUP3"
    },
    "14570": {
      "op": "MSTORE"
    },
    "14571": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "14573": {
      "op": "SWAP1"
    },
    "14574": {
      "op": "DUP3"
    },
    "14575": {
      "op": "ADD"
    },
    "14576": {
      "op": "MSTORE"
    },
    "14577": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "14610": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14612": {
      "op": "DUP3"
    },
    "14613": {
      "op": "ADD"
    },
    "14614": {
      "op": "MSTORE"
    },
    "14615": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "14627": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "14629": {
      "op": "SHL"
    },
    "14630": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14632": {
      "op": "DUP3"
    },
    "14633": {
      "op": "ADD"
    },
    "14634": {
      "op": "MSTORE"
    },
    "14635": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14637": {
      "op": "ADD"
    },
    "14638": {
      "op": "SWAP1"
    },
    "14639": {
      "jump": "o",
      "op": "JUMP"
    },
    "14640": {
      "op": "JUMPDEST"
    },
    "14641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14643": {
      "op": "DUP3"
    },
    "14644": {
      "op": "NOT"
    },
    "14645": {
      "op": "DUP3"
    },
    "14646": {
      "op": "GT"
    },
    "14647": {
      "op": "ISZERO"
    },
    "14648": {
      "op": "PUSH2",
      "value": "0x3943"
    },
    "14651": {
      "op": "JUMPI"
    },
    "14652": {
      "op": "PUSH2",
      "value": "0x3943"
    },
    "14655": {
      "op": "PUSH2",
      "value": "0x39E7"
    },
    "14658": {
      "jump": "i",
      "op": "JUMP"
    },
    "14659": {
      "op": "JUMPDEST"
    },
    "14660": {
      "op": "POP"
    },
    "14661": {
      "op": "ADD"
    },
    "14662": {
      "op": "SWAP1"
    },
    "14663": {
      "jump": "o",
      "op": "JUMP"
    },
    "14664": {
      "op": "JUMPDEST"
    },
    "14665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14667": {
      "op": "DUP3"
    },
    "14668": {
      "op": "PUSH2",
      "value": "0x3965"
    },
    "14671": {
      "op": "JUMPI"
    },
    "14672": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14677": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14679": {
      "op": "SHL"
    },
    "14680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14682": {
      "op": "MSTORE"
    },
    "14683": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14685": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14687": {
      "op": "MSTORE"
    },
    "14688": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14692": {
      "op": "REVERT"
    },
    "14693": {
      "op": "JUMPDEST"
    },
    "14694": {
      "op": "POP"
    },
    "14695": {
      "op": "DIV"
    },
    "14696": {
      "op": "SWAP1"
    },
    "14697": {
      "jump": "o",
      "op": "JUMP"
    },
    "14698": {
      "op": "JUMPDEST"
    },
    "14699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14701": {
      "op": "DUP2"
    },
    "14702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14704": {
      "op": "NOT"
    },
    "14705": {
      "op": "DIV"
    },
    "14706": {
      "op": "DUP4"
    },
    "14707": {
      "op": "GT"
    },
    "14708": {
      "op": "DUP3"
    },
    "14709": {
      "op": "ISZERO"
    },
    "14710": {
      "op": "ISZERO"
    },
    "14711": {
      "op": "AND"
    },
    "14712": {
      "op": "ISZERO"
    },
    "14713": {
      "op": "PUSH2",
      "value": "0x3984"
    },
    "14716": {
      "op": "JUMPI"
    },
    "14717": {
      "op": "PUSH2",
      "value": "0x3984"
    },
    "14720": {
      "op": "PUSH2",
      "value": "0x39E7"
    },
    "14723": {
      "jump": "i",
      "op": "JUMP"
    },
    "14724": {
      "op": "JUMPDEST"
    },
    "14725": {
      "op": "POP"
    },
    "14726": {
      "op": "MUL"
    },
    "14727": {
      "op": "SWAP1"
    },
    "14728": {
      "jump": "o",
      "op": "JUMP"
    },
    "14729": {
      "op": "JUMPDEST"
    },
    "14730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14732": {
      "op": "DUP3"
    },
    "14733": {
      "op": "DUP3"
    },
    "14734": {
      "op": "LT"
    },
    "14735": {
      "op": "ISZERO"
    },
    "14736": {
      "op": "PUSH2",
      "value": "0x399B"
    },
    "14739": {
      "op": "JUMPI"
    },
    "14740": {
      "op": "PUSH2",
      "value": "0x399B"
    },
    "14743": {
      "op": "PUSH2",
      "value": "0x39E7"
    },
    "14746": {
      "jump": "i",
      "op": "JUMP"
    },
    "14747": {
      "op": "JUMPDEST"
    },
    "14748": {
      "op": "POP"
    },
    "14749": {
      "op": "SUB"
    },
    "14750": {
      "op": "SWAP1"
    },
    "14751": {
      "jump": "o",
      "op": "JUMP"
    },
    "14752": {
      "op": "JUMPDEST"
    },
    "14753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14755": {
      "op": "JUMPDEST"
    },
    "14756": {
      "op": "DUP4"
    },
    "14757": {
      "op": "DUP2"
    },
    "14758": {
      "op": "LT"
    },
    "14759": {
      "op": "ISZERO"
    },
    "14760": {
      "op": "PUSH2",
      "value": "0x39BB"
    },
    "14763": {
      "op": "JUMPI"
    },
    "14764": {
      "op": "DUP2"
    },
    "14765": {
      "op": "DUP2"
    },
    "14766": {
      "op": "ADD"
    },
    "14767": {
      "op": "MLOAD"
    },
    "14768": {
      "op": "DUP4"
    },
    "14769": {
      "op": "DUP3"
    },
    "14770": {
      "op": "ADD"
    },
    "14771": {
      "op": "MSTORE"
    },
    "14772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14774": {
      "op": "ADD"
    },
    "14775": {
      "op": "PUSH2",
      "value": "0x39A3"
    },
    "14778": {
      "op": "JUMP"
    },
    "14779": {
      "op": "JUMPDEST"
    },
    "14780": {
      "op": "DUP4"
    },
    "14781": {
      "op": "DUP2"
    },
    "14782": {
      "op": "GT"
    },
    "14783": {
      "op": "ISZERO"
    },
    "14784": {
      "op": "PUSH2",
      "value": "0x22EA"
    },
    "14787": {
      "op": "JUMPI"
    },
    "14788": {
      "op": "POP"
    },
    "14789": {
      "op": "POP"
    },
    "14790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14792": {
      "op": "SWAP2"
    },
    "14793": {
      "op": "ADD"
    },
    "14794": {
      "op": "MSTORE"
    },
    "14795": {
      "jump": "o",
      "op": "JUMP"
    },
    "14796": {
      "op": "JUMPDEST"
    },
    "14797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14801": {
      "op": "NOT"
    },
    "14802": {
      "op": "DUP3"
    },
    "14803": {
      "op": "EQ"
    },
    "14804": {
      "op": "ISZERO"
    },
    "14805": {
      "op": "PUSH2",
      "value": "0x39E0"
    },
    "14808": {
      "op": "JUMPI"
    },
    "14809": {
      "op": "PUSH2",
      "value": "0x39E0"
    },
    "14812": {
      "op": "PUSH2",
      "value": "0x39E7"
    },
    "14815": {
      "jump": "i",
      "op": "JUMP"
    },
    "14816": {
      "op": "JUMPDEST"
    },
    "14817": {
      "op": "POP"
    },
    "14818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14820": {
      "op": "ADD"
    },
    "14821": {
      "op": "SWAP1"
    },
    "14822": {
      "jump": "o",
      "op": "JUMP"
    },
    "14823": {
      "op": "JUMPDEST"
    },
    "14824": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14829": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14831": {
      "op": "SHL"
    },
    "14832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14834": {
      "op": "MSTORE"
    },
    "14835": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14837": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14839": {
      "op": "MSTORE"
    },
    "14840": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14844": {
      "op": "REVERT"
    },
    "14845": {
      "op": "JUMPDEST"
    },
    "14846": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14851": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14853": {
      "op": "SHL"
    },
    "14854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14856": {
      "op": "MSTORE"
    },
    "14857": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14859": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14861": {
      "op": "MSTORE"
    },
    "14862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14866": {
      "op": "REVERT"
    },
    "14867": {
      "op": "JUMPDEST"
    },
    "14868": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14873": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14875": {
      "op": "SHL"
    },
    "14876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14878": {
      "op": "MSTORE"
    },
    "14879": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "14881": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14883": {
      "op": "MSTORE"
    },
    "14884": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14888": {
      "op": "REVERT"
    },
    "14889": {
      "op": "JUMPDEST"
    },
    "14890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14896": {
      "op": "SHL"
    },
    "14897": {
      "op": "SUB"
    },
    "14898": {
      "op": "DUP2"
    },
    "14899": {
      "op": "AND"
    },
    "14900": {
      "op": "DUP2"
    },
    "14901": {
      "op": "EQ"
    },
    "14902": {
      "op": "PUSH2",
      "value": "0x24AA"
    },
    "14905": {
      "op": "JUMPI"
    },
    "14906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14908": {
      "op": "DUP1"
    },
    "14909": {
      "op": "REVERT"
    },
    "14910": {
      "op": "JUMPDEST"
    },
    "14911": {
      "op": "DUP1"
    },
    "14912": {
      "op": "ISZERO"
    },
    "14913": {
      "op": "ISZERO"
    },
    "14914": {
      "op": "DUP2"
    },
    "14915": {
      "op": "EQ"
    },
    "14916": {
      "op": "PUSH2",
      "value": "0x24AA"
    },
    "14919": {
      "op": "JUMPI"
    },
    "14920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14922": {
      "op": "DUP1"
    },
    "14923": {
      "op": "REVERT"
    }
  },
  "sha1": "4b6ed7cc88d11cb72f6a422c7b39acea464f307f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./ERC20FactoryLib.sol\";\nimport \"./PoolHelperFactoryLib.sol\";\nimport \"../interfaces/IPTPStaking.sol\";\nimport \"../interfaces/IERC20.sol\";\nimport \"../interfaces/IStableStaking.sol\";\nimport \"../interfaces/IMasterPlatypus.sol\";\nimport \"../interfaces/IBaseRewardPool.sol\";\nimport \"../interfaces/IPoolHelper.sol\";\n\nimport \"../interfaces/IMasterChefVTX.sol\";\nimport \"../interfaces/IxPTP.sol\";\nimport \"../interfaces/IComputeAPR.sol\";\n\nimport \"./transparent_proxy/OwnableUpgradeable.sol\";\nimport \"./transparent_proxy/Initializable.sol\";\n\ncontract MainStaking is Initializable, OwnableUpgradeable {\n    using SafeERC20 for IERC20;\n\n    // Addresses\n    address public staking_ptp;\n    address public ptp;\n    address public xPTP;\n    address public stakingStable;\n    address public masterPlatypus;\n    address public masterVtx;\n    // APR Compute\n    address public computeAPR;\n    // Fees\n    uint256 constant FEE_DENOMINATOR = 10000;\n    uint256 public constant MAX_FEE = 2000;\n    uint256 public CALLER_FEE;\n    uint256 public constant MAX_CALLER_FEE = 500;\n    uint256 public totalFee;\n\n    struct Pair {\n        uint256 tokenAmount0;\n        uint256 tokenAmount1;\n        uint256 ratio;\n    }\n\n    struct Fees {\n        uint256 max_value;\n        uint256 min_value;\n        uint256 value;\n        address to;\n        bool isPTP;\n        bool isAddress;\n        bool isActive;\n    }\n\n    Fees[] public feeInfos;\n\n    struct Pool {\n        uint256 pid;\n        bool isActive;\n        address token;\n        address lpAddress;\n        uint256 sizeLp;\n        uint256 size;\n        address receiptToken;\n        address rewarder;\n        address helper;\n    }\n    mapping(address => Pool) public pools;\n    mapping(address => address) public tokenToAvaxPool;\n\n    event AddFee(address to, uint256 value, bool isPTP, bool isAddress);\n    event SetFee(address to, uint256 value);\n    event RemoveFee(address to);\n    event NewDeposit(\n        address indexed user,\n        address indexed token,\n        uint256 amount\n    );\n    event PtpClaimed(uint256 amount);\n    event PtpHarvested(uint256 amount, uint256 callerFee);\n    event RewardPaidTo(address to, address rewardToken, uint256 feeAmount);\n    event NewWithdraw(\n        address indexed user,\n        address indexed token,\n        uint256 amount\n    );\n    event NewPtpStaked(uint256 amount);\n    event PoolAdded(address tokenAddress);\n\n    function __MainStaking_init(\n        address _ptp,\n        address _staking_ptp,\n        address _stakingStable,\n        address _masterPlatypus,\n        address _masterVtx,\n        uint256 _callerFee\n    ) public initializer {\n        __Ownable_init();\n        staking_ptp = _staking_ptp;\n        // Address of the PTP Token\n        ptp = _ptp;\n        // Address of the Platypus Contract for depositing Stablecoins\n        stakingStable = _stakingStable;\n        // Address of the MasterPlatypus Contract for Staking Stablecoins\n        masterPlatypus = _masterPlatypus;\n        masterVtx = _masterVtx;\n        CALLER_FEE = _callerFee;\n        totalFee = _callerFee;\n    }\n\n    function setXPTP(address _xPTP) external onlyOwner {\n        require(xPTP == address(0), \"xPTP already set\");\n        xPTP = _xPTP;\n    }\n\n    function setComputeAPR(address _computeAPR) external onlyOwner {\n        computeAPR = _computeAPR;\n    }\n\n    function addFee(\n        uint256 max,\n        uint256 min,\n        uint256 value,\n        address to,\n        bool isPTP,\n        bool isAddress\n    ) external onlyOwner {\n        require(totalFee + value <= MAX_FEE, \"Max fee reached\");\n        require(min <= value && value <= max, \"Value not in range\");\n        feeInfos.push(\n            Fees({\n                max_value: max,\n                min_value: min,\n                value: value,\n                to: to,\n                isPTP: isPTP,\n                isAddress: isAddress,\n                isActive: true\n            })\n        );\n        totalFee += value;\n        emit AddFee(to, value, isPTP, isAddress);\n    }\n\n    function setFee(uint256 index, uint256 value) external onlyOwner {\n        Fees storage fee = feeInfos[index];\n        require(\n            fee.min_value <= value && value <= fee.max_value,\n            \"Value not in range\"\n        );\n        require(totalFee + value - fee.value <= MAX_FEE, \"Max fee reached\");\n        totalFee = totalFee - fee.value + value;\n        fee.value = value;\n        emit SetFee(fee.to, value);\n    }\n\n    function removeFee(uint256 index) external onlyOwner {\n        Fees storage fee = feeInfos[index];\n        totalFee -= fee.value;\n        fee.isActive = false;\n        emit RemoveFee(fee.to);\n    }\n\n    function setCallerFee(uint256 value) external onlyOwner {\n        require(value <= MAX_CALLER_FEE, \"Value too high\");\n        // Check if the fee delta does not make the total fee go over the limit\n        totalFee = totalFee + value - CALLER_FEE;\n        require(totalFee <= MAX_FEE, \"MAX Fee reached\");\n        CALLER_FEE = value;\n    }\n\n    function deposit(\n        address token,\n        uint256 amount,\n        address sender\n    ) external {\n        // Get information of the pool of the token\n        Pool storage poolInfo = pools[token];\n        //Requirements\n        require(poolInfo.isActive, \"Pool not active\");\n        require(msg.sender == poolInfo.helper, \"Only helper can deposit\");\n        IERC20(token).safeTransferFrom(sender, address(this), amount);\n        // Deposit to StableStaking Contract\n        IERC20(token).approve(stakingStable, amount);\n        IStableStaking(stakingStable).deposit(\n            token,\n            amount,\n            address(this),\n            block.timestamp\n        );\n        // Approve Transfer to Master Platypus for Staking\n        uint256 lpReceived = IERC20(poolInfo.lpAddress).balanceOf(\n            address(this)\n        );\n        IERC20(poolInfo.lpAddress).approve(masterPlatypus, lpReceived);\n        IMasterPlatypus(masterPlatypus).deposit(poolInfo.pid, lpReceived);\n        // update variables\n        uint256 amountTokenReceipt = getSharesForDepositTokens(amount, token);\n        IERC20(poolInfo.receiptToken).mint(msg.sender, amountTokenReceipt);\n        poolInfo.size += amount;\n        poolInfo.sizeLp += lpReceived;\n        emit NewDeposit(sender, token, amount);\n    }\n\n    function harvest(\n        address token,\n        bool isUser,\n        bool verbose\n    ) public {\n        Pool storage poolInfo = pools[token];\n        require(poolInfo.isActive, \"Pool not active\");\n        uint256 beforeBalance = IERC20(ptp).balanceOf(address(this));\n        IMasterPlatypus(masterPlatypus).deposit(poolInfo.pid, 0); //stock pour la pool chaque reward, vue ?\n        uint256 rewards = IERC20(ptp).balanceOf(address(this)) - beforeBalance;\n        uint256 afterFee = rewards;\n        if (isUser) {\n            uint256 feeAmount = (rewards * CALLER_FEE) / FEE_DENOMINATOR;\n            IERC20(ptp).approve(xPTP, feeAmount);\n            IxPTP(xPTP).deposit(feeAmount);\n            IERC20(xPTP).safeTransfer(msg.sender, feeAmount);\n            afterFee = afterFee - feeAmount;\n        }\n        sendRewards(\n            poolInfo.token,\n            poolInfo.rewarder,\n            rewards,\n            afterFee,\n            verbose\n        );\n        emit PtpHarvested(rewards, rewards - afterFee);\n    }\n\n    function sendRewards(\n        address token,\n        address rewarder,\n        uint256 _amount,\n        uint256 afterFee,\n        bool verbose\n    ) internal {\n        for (uint256 i = 0; i < feeInfos.length; i++) {\n            Fees storage feeInfo = feeInfos[i];\n            if (feeInfo.isActive) {\n                address rewardToken = ptp;\n                uint256 feeAmount = (_amount * feeInfo.value) / FEE_DENOMINATOR;\n                if (!feeInfo.isPTP) {\n                    IERC20(ptp).approve(xPTP, feeAmount);\n                    IxPTP(xPTP).deposit(feeAmount);\n                    rewardToken = xPTP;\n                }\n                if (!feeInfo.isAddress) {\n                    IERC20(rewardToken).approve(feeInfo.to, feeAmount);\n                    IBaseRewardPool(feeInfo.to).queueNewRewards(\n                        feeAmount,\n                        rewardToken\n                    );\n                    if (verbose && !(computeAPR == address(0))) {\n                        IComputeAPR(computeAPR).computeAPR(\n                            token,\n                            IBaseRewardPool(feeInfo.to).getStakingToken(),\n                            rewardToken,\n                            feeAmount,\n                            IBaseRewardPool(feeInfo.to).totalSupply()\n                        );\n                        emit RewardPaidTo(feeInfo.to, rewardToken, feeAmount);\n                    }\n                } else {\n                    ERC20(rewardToken).transfer(feeInfo.to, feeAmount);\n                    emit RewardPaidTo(feeInfo.to, rewardToken, feeAmount);\n                }\n                afterFee -= feeAmount;\n            }\n        }\n        IERC20(ptp).approve(rewarder, afterFee);\n        IBaseRewardPool(rewarder).queueNewRewards(afterFee, ptp);\n        if (verbose && !(computeAPR == address(0))) {\n            Pool storage poolInfo = pools[token];\n            IComputeAPR(computeAPR).computeAPRStable(\n                token,\n                ptp,\n                afterFee,\n                poolInfo.size\n            );\n            emit RewardPaidTo(rewarder, ptp, afterFee);\n        }\n    }\n\n    // In case of an airdrop\n    function sendTokenRewards(address _token, address _rewarder)\n        external\n        onlyOwner\n    {\n        require(_token != ptp, \"not authorized\");\n        require(!pools[_token].isActive, \"Not authorized\");\n        uint256 amount = IERC20(_token).balanceOf(address(this));\n        IERC20(_token).approve(_rewarder, amount);\n        IBaseRewardPool(_rewarder).queueNewRewards(amount, _token);\n    }\n\n    function withdraw(\n        address token,\n        uint256 _amount,\n        uint256 _slippage,\n        address sender\n    ) external {\n        // _amount is the amount of stable\n        require(_slippage <= 100, \"Slippage not in range\");\n        Pool storage poolInfo = pools[token];\n        require(msg.sender == poolInfo.helper, \"Only helper can withdraw\");\n        uint256 sharesAmount = getSharesForDepositTokens(_amount, token);\n        uint256 lpAmount = getLPTokensForShares(sharesAmount, token);\n        IERC20(poolInfo.receiptToken).burn(msg.sender, sharesAmount);\n        IERC20(poolInfo.lpAddress).approve(stakingStable, lpAmount);\n        IMasterPlatypus(masterPlatypus).withdraw(poolInfo.pid, lpAmount);\n        uint256 beforeWithdraw = IERC20(token).balanceOf(address(this));\n        IStableStaking(stakingStable).withdraw(\n            token,\n            lpAmount,\n            (_amount * _slippage) / 100, // SLIPPAGE\n            address(this),\n            block.timestamp\n        );\n\n        poolInfo.size -= _amount;\n        poolInfo.sizeLp -= lpAmount;\n\n        IERC20(token).safeTransfer(\n            sender,\n            IERC20(token).balanceOf(address(this)) - beforeWithdraw\n        );\n        emit NewWithdraw(sender, token, _amount);\n    }\n\n    function stakePTP(uint256 amount) public {\n        if (amount > 0) {\n            IERC20(ptp).approve(staking_ptp, amount);\n            IPTPStaking(staking_ptp).deposit(amount);\n        }\n        claimPTP();\n        emit NewPtpStaked(amount);\n    }\n\n    function stakeAllPtp() public {\n        stakePTP(IERC20(ptp).balanceOf(address(this)));\n    }\n\n    function claimPTP() public {\n        uint256 amount = IPTPStaking(staking_ptp).getStakedPtp(address(this));\n        if (amount > 0) {\n            IPTPStaking(staking_ptp).claim();\n        }\n        emit PtpClaimed(amount);\n    }\n\n    function claimdAndStakePTP() external {\n        claimPTP();\n        stakeAllPtp();\n    }\n\n    function getStakedPtp() external view returns (uint256) {\n        return IPTPStaking(staking_ptp).getStakedPtp(address(this));\n    }\n\n    function getVePtp() external view returns (uint256) {\n        return IERC20(staking_ptp).balanceOf(address(this));\n    }\n\n    /**\n     * @notice Calculate deposit tokens for a given amount of receipt tokens\n     * @param amount receipt tokens\n     * @return deposit tokens\n     */\n    function getLPTokensForShares(uint256 amount, address token)\n        public\n        view\n        returns (uint256)\n    {\n        Pool storage poolInfo = pools[token];\n        uint256 totalDeposits = poolInfo.sizeLp;\n        uint256 totalSupply = IERC20(poolInfo.receiptToken).totalSupply();\n        if (totalSupply * totalDeposits == 0) {\n            return 0;\n        }\n        return (amount * totalDeposits) / totalSupply;\n    }\n\n    function getSharesForDepositTokens(uint256 amount, address token)\n        public\n        view\n        returns (uint256)\n    {\n        Pool storage poolInfo = pools[token];\n        uint256 totalDeposits = poolInfo.size;\n        uint256 totalSupply = IERC20(poolInfo.receiptToken).totalSupply();\n\n        if (totalSupply * totalDeposits == 0) {\n            return amount;\n        }\n        return (amount * totalSupply) / totalDeposits;\n    }\n\n    /**\n     * @notice Calculate deposit tokens for a given amount of receipt tokens\n     * @param amount receipt tokens\n     * @return deposit tokens\n     */\n    function getDepositTokensForShares(uint256 amount, address token)\n        public\n        view\n        returns (uint256)\n    {\n        Pool storage poolInfo = pools[token];\n        uint256 totalDeposits = poolInfo.size;\n        uint256 totalSupply = IERC20(poolInfo.receiptToken).totalSupply();\n        if (totalSupply * totalDeposits == 0) {\n            return 0;\n        }\n        return (amount * totalDeposits) / totalSupply;\n    }\n\n    function registerPool(\n        uint256 _pid,\n        address _token,\n        address _lpAddress,\n        string memory receiptName,\n        string memory receiptSymbol,\n        uint256 allocPoints\n    ) external onlyOwner {\n        require(\n            pools[_token].isActive == false,\n            \"Pool is already registered or active\"\n        );\n        IERC20 newToken = IERC20(\n            ERC20FactoryLib.createERC20(receiptName, receiptSymbol)\n        );\n        address rewarder = IMasterChefVTX(masterVtx).createRewarder(\n            address(newToken),\n            address(ptp)\n        );\n        IPoolHelper helper = IPoolHelper(\n            PoolHelperFactoryLib.createPoolHelper(\n                _pid,\n                address(newToken),\n                address(_token),\n                address(this),\n                address(masterVtx),\n                address(rewarder),\n                address(xPTP)\n            )\n        );\n        IMasterChefVTX(masterVtx).add(\n            allocPoints,\n            address(newToken),\n            address(rewarder),\n            address(helper)\n        );\n        pools[_token] = Pool({\n            pid: _pid,\n            isActive: true,\n            token: _token,\n            lpAddress: _lpAddress,\n            sizeLp: 0,\n            size: 0,\n            receiptToken: address(newToken),\n            rewarder: address(rewarder),\n            helper: address(helper)\n        });\n        emit PoolAdded(_token);\n    }\n\n    function getPoolInfo(address _address)\n        external\n        view\n        returns (\n            uint256 pid,\n            bool isActive,\n            address token,\n            address lp,\n            uint256 sizeLp,\n            address receipt,\n            uint256 size,\n            address rewards_addr,\n            address helper\n        )\n    {\n        Pool storage tokenInfo = pools[_address];\n        pid = tokenInfo.pid;\n        isActive = tokenInfo.isActive;\n        token = tokenInfo.token;\n        lp = tokenInfo.lpAddress;\n        sizeLp = tokenInfo.sizeLp;\n        receipt = tokenInfo.receiptToken;\n        size = tokenInfo.size;\n        rewards_addr = tokenInfo.rewarder;\n        helper = tokenInfo.helper;\n    }\n\n    function removePool(address token) external onlyOwner {\n        pools[token].isActive = false;\n    }\n\n    uint256[40] private __gap;\n}\n",
  "sourceMap": "593:15534:12:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/MainStaking.sol",
  "type": "contract"
}
