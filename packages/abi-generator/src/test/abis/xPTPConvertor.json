{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_xptp",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ptp",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositedPTP",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "obtainedxPTP",
          "type": "uint256"
        }
      ],
      "name": "xPTPObtained",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deltaPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "obtainedxPtpAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_for",
          "type": "address"
        }
      ],
      "name": "depositFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "obtainedxPtpAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountSold",
          "type": "uint256"
        }
      ],
      "name": "estimateOutAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "estimateTotalConversion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minimumEstimatedTotal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getxPTPRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "xPTPRatio",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxAmountToBuy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ptp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setBuyPercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setBuyThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setDeltaPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippagePct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "xptp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/wastedborn/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
    "1": "/home/wastedborn/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/IERC20.sol",
    "10": "interfaces/IxPTP.sol",
    "2": "/home/wastedborn/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "/home/wastedborn/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Address.sol",
    "4": "/home/wastedborn/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Context.sol",
    "6": "contracts/xPTPConvertor.sol",
    "7": "interfaces/IJoePair.sol",
    "8": "interfaces/IJoeRouter01.sol"
  },
  "ast": {
    "absolutePath": "contracts/xPTPConvertor.sol",
    "exportedSymbols": {
      "Address": [2732],
      "Context": [2435],
      "IERC20": [1460],
      "IJoePair": [1926],
      "IJoeRouter01": [2234],
      "IxPTP": [2413],
      "Ownable": [1382],
      "SafeERC20": [1684],
      "xPTPConvertor": [1277]
    },
    "id": 1278,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 634,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "/home/wastedborn/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 635,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1278,
        "sourceUnit": 1685,
        "src": "57:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wastedborn/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 636,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1278,
        "sourceUnit": 1461,
        "src": "123:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wastedborn/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 637,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1278,
        "sourceUnit": 1383,
        "src": "180:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IxPTP.sol",
        "file": "../interfaces/IxPTP.sol",
        "id": 638,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1278,
        "sourceUnit": 2414,
        "src": "233:33:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IJoeRouter01.sol",
        "file": "../interfaces/IJoeRouter01.sol",
        "id": 639,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1278,
        "sourceUnit": 2235,
        "src": "267:40:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IJoePair.sol",
        "file": "../interfaces/IJoePair.sol",
        "id": 640,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1278,
        "sourceUnit": 1927,
        "src": "308:36:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 642,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1382,
              "src": "511:7:6"
            },
            "id": 643,
            "nodeType": "InheritanceSpecifier",
            "src": "511:7:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 641,
          "nodeType": "StructuredDocumentation",
          "src": "346:139:6",
          "text": "@title Smart Convertor\n @author Vector Team\n @notice Smart Convertor is a convertor to manage conversion or buying on trader Joe"
        },
        "fullyImplemented": true,
        "id": 1277,
        "linearizedBaseContracts": [1277, 1382, 2435],
        "name": "xPTPConvertor",
        "nameLocation": "494:13:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 647,
            "libraryName": {
              "id": 644,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1684,
              "src": "531:9:6"
            },
            "nodeType": "UsingForDirective",
            "src": "525:27:6",
            "typeName": {
              "id": 646,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 645,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1460,
                "src": "545:6:6"
              },
              "referencedDeclaration": 1460,
              "src": "545:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1460",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "383d78e0",
            "id": 649,
            "mutability": "immutable",
            "name": "xptp",
            "nameLocation": "582:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 1277,
            "src": "557:29:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 648,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "557:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6af66772",
            "id": 651,
            "mutability": "immutable",
            "name": "ptp",
            "nameLocation": "617:3:6",
            "nodeType": "VariableDeclaration",
            "scope": 1277,
            "src": "592:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 650,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "592:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f887ea40",
            "id": 653,
            "mutability": "immutable",
            "name": "router",
            "nameLocation": "651:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1277,
            "src": "626:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 652,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "626:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8aa1b31",
            "id": 655,
            "mutability": "immutable",
            "name": "pair",
            "nameLocation": "688:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 1277,
            "src": "663:29:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 654,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "663:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f13cff41",
            "id": 657,
            "mutability": "mutable",
            "name": "buyThreshold",
            "nameLocation": "714:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 1277,
            "src": "699:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 656,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "699:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "918f8674",
            "id": 660,
            "mutability": "constant",
            "name": "DENOMINATOR",
            "nameLocation": "756:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 1277,
            "src": "732:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 658,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "732:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 659,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "770:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f1455c9",
            "id": 662,
            "mutability": "mutable",
            "name": "buyPercent",
            "nameLocation": "796:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 1277,
            "src": "781:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 661,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "781:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2f5d97e",
            "id": 665,
            "mutability": "mutable",
            "name": "deltaPercentage",
            "nameLocation": "827:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 1277,
            "src": "812:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 663,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "812:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "39353030",
              "id": 664,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "845:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_9500_by_1",
                "typeString": "int_const 9500"
              },
              "value": "9500"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a082ccd0",
            "id": 668,
            "mutability": "mutable",
            "name": "slippagePct",
            "nameLocation": "870:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 1277,
            "src": "855:32:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 666,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "855:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353030",
              "id": 667,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "884:3:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 676,
            "name": "xPTPObtained",
            "nameLocation": "900:12:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "921:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "913:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 672,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositedPTP",
                  "nameLocation": "935:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "927:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 674,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "obtainedxPTP",
                  "nameLocation": "957:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "949:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "912:58:6"
            },
            "src": "894:77:6"
          },
          {
            "body": {
              "id": 703,
              "nodeType": "Block",
              "src": "1088:97:6",
              "statements": [
                {
                  "expression": {
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 687,
                      "name": "xptp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "1098:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 688,
                      "name": "_xptp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 678,
                      "src": "1105:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1098:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 690,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:12:6"
                },
                {
                  "expression": {
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 691,
                      "name": "ptp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "1120:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 692,
                      "name": "_ptp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "1126:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1120:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "1120:10:6"
                },
                {
                  "expression": {
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 695,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "1140:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 696,
                      "name": "_router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "1149:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1140:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:16:6"
                },
                {
                  "expression": {
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 699,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "1166:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 700,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 684,
                      "src": "1173:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1166:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:12:6"
                }
              ]
            },
            "id": 704,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 678,
                  "mutability": "mutable",
                  "name": "_xptp",
                  "nameLocation": "1006:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "998:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 680,
                  "mutability": "mutable",
                  "name": "_ptp",
                  "nameLocation": "1029:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "1021:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "1051:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "1043:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "1076:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "1068:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "988:99:6"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1088:0:6"
            },
            "scope": 1277,
            "src": "977:208:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "1253:109:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 712,
                            "name": "newValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "1271:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1283:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1271:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 715,
                            "name": "newValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "1288:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1300:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "1288:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1271:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420696e2072616e6765",
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1307:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20a52dac0398e643305dbe319845273d6c65ff217021f0b4a9ffa4921d780ba7",
                          "typeString": "literal_string \"Not in range\""
                        },
                        "value": "Not in range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20a52dac0398e643305dbe319845273d6c65ff217021f0b4a9ffa4921d780ba7",
                          "typeString": "literal_string \"Not in range\""
                        }
                      ],
                      "id": 711,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1263:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1263:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:59:6"
                },
                {
                  "expression": {
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 722,
                      "name": "buyThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "1332:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 723,
                      "name": "newValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "1347:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1332:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "1332:23:6"
                }
              ]
            },
            "functionSelector": "512b466a",
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 709,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 708,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1324,
                  "src": "1243:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1243:9:6"
              }
            ],
            "name": "setBuyThreshold",
            "nameLocation": "1200:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 706,
                  "mutability": "mutable",
                  "name": "newValue",
                  "nameLocation": "1224:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "1216:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1215:18:6"
            },
            "returnParameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1253:0:6"
            },
            "scope": 1277,
            "src": "1191:171:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "1428:107:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 735,
                            "name": "newValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "1446:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1458:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1446:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 738,
                            "name": "newValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "1463:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1475:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "1463:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1446:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420696e2072616e6765",
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1482:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20a52dac0398e643305dbe319845273d6c65ff217021f0b4a9ffa4921d780ba7",
                          "typeString": "literal_string \"Not in range\""
                        },
                        "value": "Not in range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20a52dac0398e643305dbe319845273d6c65ff217021f0b4a9ffa4921d780ba7",
                          "typeString": "literal_string \"Not in range\""
                        }
                      ],
                      "id": 734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1438:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1438:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 744,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:59:6"
                },
                {
                  "expression": {
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 745,
                      "name": "buyPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 662,
                      "src": "1507:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 746,
                      "name": "newValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 729,
                      "src": "1520:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1507:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:21:6"
                }
              ]
            },
            "functionSelector": "0bdcd8fb",
            "id": 750,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 732,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 731,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1324,
                  "src": "1418:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1418:9:6"
              }
            ],
            "name": "setBuyPercent",
            "nameLocation": "1377:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "newValue",
                  "nameLocation": "1399:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "1391:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1390:18:6"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1428:0:6"
            },
            "scope": 1277,
            "src": "1368:167:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 772,
              "nodeType": "Block",
              "src": "1606:112:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 758,
                            "name": "newValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "1624:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1636:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1624:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 761,
                            "name": "newValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "1641:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1653:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "1641:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1624:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420696e2072616e6765",
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1660:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20a52dac0398e643305dbe319845273d6c65ff217021f0b4a9ffa4921d780ba7",
                          "typeString": "literal_string \"Not in range\""
                        },
                        "value": "Not in range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20a52dac0398e643305dbe319845273d6c65ff217021f0b4a9ffa4921d780ba7",
                          "typeString": "literal_string \"Not in range\""
                        }
                      ],
                      "id": 757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1616:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1616:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 767,
                  "nodeType": "ExpressionStatement",
                  "src": "1616:59:6"
                },
                {
                  "expression": {
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 768,
                      "name": "deltaPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "1685:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 769,
                      "name": "newValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "1703:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1685:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 771,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:26:6"
                }
              ]
            },
            "functionSelector": "b84f7e53",
            "id": 773,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 755,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 754,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1324,
                  "src": "1596:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1596:9:6"
              }
            ],
            "name": "setDeltaPercentage",
            "nameLocation": "1550:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "newValue",
                  "nameLocation": "1577:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "1569:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1568:18:6"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1606:0:6"
            },
            "scope": 1277,
            "src": "1541:177:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 795,
              "nodeType": "Block",
              "src": "1782:108:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 781,
                            "name": "newValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 775,
                            "src": "1800:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1812:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1800:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 784,
                            "name": "newValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 775,
                            "src": "1817:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1829:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "1817:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1800:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420696e2072616e6765",
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1836:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20a52dac0398e643305dbe319845273d6c65ff217021f0b4a9ffa4921d780ba7",
                          "typeString": "literal_string \"Not in range\""
                        },
                        "value": "Not in range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20a52dac0398e643305dbe319845273d6c65ff217021f0b4a9ffa4921d780ba7",
                          "typeString": "literal_string \"Not in range\""
                        }
                      ],
                      "id": 780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1792:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:59:6"
                },
                {
                  "expression": {
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 791,
                      "name": "slippagePct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 668,
                      "src": "1861:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 792,
                      "name": "newValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "1875:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1861:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "1861:22:6"
                }
              ]
            },
            "functionSelector": "f0fa55a9",
            "id": 796,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 778,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 777,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1324,
                  "src": "1772:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1772:9:6"
              }
            ],
            "name": "setSlippage",
            "nameLocation": "1733:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "newValue",
                  "nameLocation": "1753:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "1745:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1745:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1744:18:6"
            },
            "returnParameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1782:0:6"
            },
            "scope": 1277,
            "src": "1724:166:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "2032:246:6",
              "statements": [
                {
                  "assignments": [803, 805, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 803,
                      "mutability": "mutable",
                      "name": "r0",
                      "nameLocation": "2051:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 840,
                      "src": "2043:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 802,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2043:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 805,
                      "mutability": "mutable",
                      "name": "r1",
                      "nameLocation": "2063:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 840,
                      "src": "2055:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 804,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2055:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 811,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 807,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "2080:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 806,
                          "name": "IJoePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1926,
                          "src": "2071:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IJoePair_$1926_$",
                            "typeString": "type(contract IJoePair)"
                          }
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2071:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IJoePair_$1926",
                          "typeString": "contract IJoePair"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1868,
                      "src": "2071:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2042:57:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 813,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 655,
                              "src": "2122:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 812,
                            "name": "IJoePair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1926,
                            "src": "2113:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IJoePair_$1926_$",
                              "typeString": "type(contract IJoePair)"
                            }
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2113:14:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IJoePair_$1926",
                            "typeString": "contract IJoePair"
                          }
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1854,
                        "src": "2113:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2113:23:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 817,
                      "name": "xptp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "2140:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2113:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 838,
                    "nodeType": "Block",
                    "src": "2212:60:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 829,
                            "name": "xPTPRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 800,
                            "src": "2226:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 830,
                                    "name": "r0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 803,
                                    "src": "2239:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 831,
                                    "name": "DENOMINATOR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 660,
                                    "src": "2244:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2239:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 833,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2238:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 834,
                              "name": "r1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 805,
                              "src": "2259:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2238:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2226:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 837,
                        "nodeType": "ExpressionStatement",
                        "src": "2226:35:6"
                      }
                    ]
                  },
                  "id": 839,
                  "nodeType": "IfStatement",
                  "src": "2109:163:6",
                  "trueBody": {
                    "id": 828,
                    "nodeType": "Block",
                    "src": "2146:60:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 819,
                            "name": "xPTPRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 800,
                            "src": "2160:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 822,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 820,
                                    "name": "r1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 805,
                                    "src": "2173:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 821,
                                    "name": "DENOMINATOR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 660,
                                    "src": "2178:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2173:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 823,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2172:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 824,
                              "name": "r0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 803,
                              "src": "2193:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2172:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2160:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 827,
                        "nodeType": "ExpressionStatement",
                        "src": "2160:35:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 797,
              "nodeType": "StructuredDocumentation",
              "src": "1896:67:6",
              "text": "@notice returns the ratio between xPTP and PTP. 10000= 1:1 rate"
            },
            "functionSelector": "42ebbe1c",
            "id": 841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getxPTPRatio",
            "nameLocation": "1977:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1989:2:6"
            },
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "xPTPRatio",
                  "nameLocation": "2021:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "2013:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2012:19:6"
            },
            "scope": 1277,
            "src": "1968:310:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 891,
              "nodeType": "Block",
              "src": "2448:472:6",
              "statements": [
                {
                  "assignments": [850, 852, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 850,
                      "mutability": "mutable",
                      "name": "r0",
                      "nameLocation": "2467:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 891,
                      "src": "2459:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 849,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2459:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 852,
                      "mutability": "mutable",
                      "name": "r1",
                      "nameLocation": "2479:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 891,
                      "src": "2471:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 851,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2471:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 858,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 854,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "2496:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 853,
                          "name": "IJoePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1926,
                          "src": "2487:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IJoePair_$1926_$",
                            "typeString": "type(contract IJoePair)"
                          }
                        },
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2487:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IJoePair_$1926",
                          "typeString": "contract IJoePair"
                        }
                      },
                      "id": 856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1868,
                      "src": "2487:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2487:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2458:57:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 860,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 655,
                              "src": "2538:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 859,
                            "name": "IJoePair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1926,
                            "src": "2529:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IJoePair_$1926_$",
                              "typeString": "type(contract IJoePair)"
                            }
                          },
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2529:14:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IJoePair_$1926",
                            "typeString": "contract IJoePair"
                          }
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1859,
                        "src": "2529:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2529:23:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 864,
                      "name": "xptp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "2556:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2529:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 889,
                    "nodeType": "Block",
                    "src": "2741:173:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 878,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 847,
                            "src": "2755:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 883,
                                "name": "amountSold",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 844,
                                "src": "2801:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 884,
                                "name": "r1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 852,
                                "src": "2813:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 885,
                                "name": "r0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 850,
                                "src": "2817:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 880,
                                    "name": "router",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 653,
                                    "src": "2780:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 879,
                                  "name": "IJoeRouter01",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2234,
                                  "src": "2767:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IJoeRouter01_$2234_$",
                                    "typeString": "type(contract IJoeRouter01)"
                                  }
                                },
                                "id": 881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2767:20:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IJoeRouter01_$2234",
                                  "typeString": "contract IJoeRouter01"
                                }
                              },
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2200,
                              "src": "2767:33:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure external returns (uint256)"
                              }
                            },
                            "id": 886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2767:53:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2755:65:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 888,
                        "nodeType": "ExpressionStatement",
                        "src": "2755:65:6"
                      }
                    ]
                  },
                  "id": 890,
                  "nodeType": "IfStatement",
                  "src": "2525:389:6",
                  "trueBody": {
                    "id": 877,
                    "nodeType": "Block",
                    "src": "2562:173:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 866,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 847,
                            "src": "2576:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 871,
                                "name": "amountSold",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 844,
                                "src": "2622:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 872,
                                "name": "r0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 850,
                                "src": "2634:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 873,
                                "name": "r1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 852,
                                "src": "2638:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 868,
                                    "name": "router",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 653,
                                    "src": "2601:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 867,
                                  "name": "IJoeRouter01",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2234,
                                  "src": "2588:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IJoeRouter01_$2234_$",
                                    "typeString": "type(contract IJoeRouter01)"
                                  }
                                },
                                "id": 869,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2588:20:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IJoeRouter01_$2234",
                                  "typeString": "contract IJoeRouter01"
                                }
                              },
                              "id": 870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2200,
                              "src": "2588:33:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure external returns (uint256)"
                              }
                            },
                            "id": 874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2588:53:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2576:65:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 876,
                        "nodeType": "ExpressionStatement",
                        "src": "2576:65:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 842,
              "nodeType": "StructuredDocumentation",
              "src": "2284:72:6",
              "text": "@notice estimates the amount of xPTP recieved if bought on traderJoe"
            },
            "functionSelector": "1e828d95",
            "id": 892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "estimateOutAmount",
            "nameLocation": "2370:17:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "amountSold",
                  "nameLocation": "2396:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 892,
                  "src": "2388:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2388:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2387:20:6"
            },
            "returnParameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "2437:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 892,
                  "src": "2429:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2429:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2428:19:6"
            },
            "scope": 1277,
            "src": "2361:559:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 928,
              "nodeType": "Block",
              "src": "3337:145:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 908,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3383:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_xPTPConvertor_$1277",
                                "typeString": "contract xPTPConvertor"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_xPTPConvertor_$1277",
                                "typeString": "contract xPTPConvertor"
                              }
                            ],
                            "id": 907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3375:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 906,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3375:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3375:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 910,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 897,
                          "src": "3390:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 903,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 895,
                              "src": "3358:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 902,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1460,
                            "src": "3351:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$1460_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3351:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1460",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1419,
                        "src": "3351:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3351:43:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 912,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "3397:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3351:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 927,
                  "nodeType": "IfStatement",
                  "src": "3347:129:6",
                  "trueBody": {
                    "id": 926,
                    "nodeType": "Block",
                    "src": "3406:70:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 918,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 897,
                              "src": "3442:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 921,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3452:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 920,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3452:7:6",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 919,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "3447:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 922,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3447:13:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "3447:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 915,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 895,
                                  "src": "3427:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 914,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1460,
                                "src": "3420:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1460_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3420:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1460",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1429,
                            "src": "3420:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3420:45:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 925,
                        "nodeType": "ExpressionStatement",
                        "src": "3420:45:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 893,
              "nodeType": "StructuredDocumentation",
              "src": "2926:292:6",
              "text": "@notice increase allowance to a contract to the maximum amount for a specific token if it is needed\n @param token the token to increase the allowance of\n @param _to the contract to increase the allowance\n @param _amount the amount of allowance that the contract needs"
            },
            "id": 929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approveTokenIfNeeded",
            "nameLocation": "3232:21:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 895,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3271:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "3263:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3263:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3294:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "3286:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3286:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3315:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "3307:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3307:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3253:75:6"
            },
            "returnParameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3337:0:6"
            },
            "scope": 1277,
            "src": "3223:259:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 990,
              "nodeType": "Block",
              "src": "3544:399:6",
              "statements": [
                {
                  "assignments": [935, 937, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 935,
                      "mutability": "mutable",
                      "name": "r0",
                      "nameLocation": "3563:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 990,
                      "src": "3555:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 934,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3555:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 937,
                      "mutability": "mutable",
                      "name": "r1",
                      "nameLocation": "3575:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 990,
                      "src": "3567:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 936,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3567:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 943,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 939,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "3592:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 938,
                          "name": "IJoePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1926,
                          "src": "3583:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IJoePair_$1926_$",
                            "typeString": "type(contract IJoePair)"
                          }
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3583:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IJoePair_$1926",
                          "typeString": "contract IJoePair"
                        }
                      },
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1868,
                      "src": "3583:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3583:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3554:57:6"
                },
                {
                  "assignments": [945],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 945,
                      "mutability": "mutable",
                      "name": "xptpReserves",
                      "nameLocation": "3629:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 990,
                      "src": "3621:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 944,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3621:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 957,
                  "initialValue": {
                    "components": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 947,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 655,
                                    "src": "3654:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 946,
                                  "name": "IJoePair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1926,
                                  "src": "3645:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IJoePair_$1926_$",
                                    "typeString": "type(contract IJoePair)"
                                  }
                                },
                                "id": 948,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3645:14:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IJoePair_$1926",
                                  "typeString": "contract IJoePair"
                                }
                              },
                              "id": 949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token0",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1854,
                              "src": "3645:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3645:23:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 951,
                            "name": "xptp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "3672:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3645:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 954,
                          "name": "r1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "3684:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "3645:41:6",
                        "trueExpression": {
                          "id": 953,
                          "name": "r0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "3679:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 956,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3644:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3621:66:6"
                },
                {
                  "assignments": [959],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 959,
                      "mutability": "mutable",
                      "name": "ptpReserves",
                      "nameLocation": "3705:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 990,
                      "src": "3697:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 958,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3697:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 971,
                  "initialValue": {
                    "components": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 961,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 655,
                                    "src": "3729:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 960,
                                  "name": "IJoePair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1926,
                                  "src": "3720:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IJoePair_$1926_$",
                                    "typeString": "type(contract IJoePair)"
                                  }
                                },
                                "id": 962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3720:14:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IJoePair_$1926",
                                  "typeString": "contract IJoePair"
                                }
                              },
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token0",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1854,
                              "src": "3720:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3720:23:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 965,
                            "name": "xptp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "3747:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3720:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 968,
                          "name": "r0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "3759:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "3720:41:6",
                        "trueExpression": {
                          "id": 967,
                          "name": "r1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "3754:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 970,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3719:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3697:65:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 972,
                      "name": "ptpReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 959,
                      "src": "3776:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 973,
                      "name": "xptpReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 945,
                      "src": "3790:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3776:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 988,
                    "nodeType": "Block",
                    "src": "3843:94:6",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 980,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 978,
                                        "name": "xptpReserves",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 945,
                                        "src": "3866:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 979,
                                        "name": "ptpReserves",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 959,
                                        "src": "3881:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3866:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 981,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3865:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 982,
                                  "name": "deltaPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 665,
                                  "src": "3896:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3865:46:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 984,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3864:48:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 985,
                            "name": "DENOMINATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "3915:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3864:62:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 933,
                        "id": 987,
                        "nodeType": "Return",
                        "src": "3857:69:6"
                      }
                    ]
                  },
                  "id": 989,
                  "nodeType": "IfStatement",
                  "src": "3772:165:6",
                  "trueBody": {
                    "id": 977,
                    "nodeType": "Block",
                    "src": "3804:33:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3825:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 933,
                        "id": 976,
                        "nodeType": "Return",
                        "src": "3818:8:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "170f0671",
            "id": 991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxAmountToBuy",
            "nameLocation": "3497:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3511:2:6"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 991,
                  "src": "3535:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3535:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3534:9:6"
            },
            "scope": 1277,
            "src": "3488:455:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1063,
              "nodeType": "Block",
              "src": "4316:777:6",
              "statements": [
                {
                  "assignments": [1000],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1000,
                      "mutability": "mutable",
                      "name": "xPTPRatio",
                      "nameLocation": "4334:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "4326:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 999,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4326:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1003,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1001,
                      "name": "getxPTPRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "4346:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4346:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4326:34:6"
                },
                {
                  "expression": {
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1004,
                      "name": "minimumEstimatedTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "4370:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1005,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 994,
                      "src": "4394:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4370:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "4370:31:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1008,
                      "name": "xPTPRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "4415:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1009,
                      "name": "buyThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "4428:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4415:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1062,
                  "nodeType": "IfStatement",
                  "src": "4411:676:6",
                  "trueBody": {
                    "id": 1061,
                    "nodeType": "Block",
                    "src": "4442:645:6",
                    "statements": [
                      {
                        "assignments": [1012],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1012,
                            "mutability": "mutable",
                            "name": "amountToBuy",
                            "nameLocation": "4464:11:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1061,
                            "src": "4456:19:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1011,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4456:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1019,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1013,
                                  "name": "minimumEstimatedTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 997,
                                  "src": "4479:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1014,
                                  "name": "buyPercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 662,
                                  "src": "4503:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4479:34:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1016,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4478:36:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1017,
                            "name": "DENOMINATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "4517:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4478:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4456:72:6"
                      },
                      {
                        "assignments": [1021],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1021,
                            "mutability": "mutable",
                            "name": "maxAmountToRespectPriceImpact",
                            "nameLocation": "4550:29:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1061,
                            "src": "4542:37:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1020,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4542:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1024,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1022,
                            "name": "maxAmountToBuy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "4582:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4582:16:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4542:56:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1025,
                            "name": "amountToBuy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1012,
                            "src": "4616:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1026,
                            "name": "maxAmountToRespectPriceImpact",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "4630:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4616:43:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1033,
                        "nodeType": "IfStatement",
                        "src": "4612:125:6",
                        "trueBody": {
                          "id": 1032,
                          "nodeType": "Block",
                          "src": "4661:76:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1030,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1028,
                                  "name": "amountToBuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1012,
                                  "src": "4679:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1029,
                                  "name": "maxAmountToRespectPriceImpact",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1021,
                                  "src": "4693:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4679:43:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1031,
                              "nodeType": "ExpressionStatement",
                              "src": "4679:43:6"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [1035],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1035,
                            "mutability": "mutable",
                            "name": "estimatedOutAmount",
                            "nameLocation": "4758:18:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1061,
                            "src": "4750:26:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1034,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4750:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1039,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1037,
                              "name": "amountToBuy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1012,
                              "src": "4797:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1036,
                            "name": "estimateOutAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "4779:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4779:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4750:59:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1040,
                            "name": "amountToBuy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1012,
                            "src": "4827:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1041,
                            "name": "estimatedOutAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1035,
                            "src": "4841:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4827:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1060,
                        "nodeType": "IfStatement",
                        "src": "4823:254:6",
                        "trueBody": {
                          "id": 1059,
                          "nodeType": "Block",
                          "src": "4861:216:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1043,
                                  "name": "minimumEstimatedTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 997,
                                  "src": "4879:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1044,
                                  "name": "amountToBuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1012,
                                  "src": "4904:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4879:36:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1046,
                              "nodeType": "ExpressionStatement",
                              "src": "4879:36:6"
                            },
                            {
                              "expression": {
                                "id": 1057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1047,
                                  "name": "minimumEstimatedTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 997,
                                  "src": "4933:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1056,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1053,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1048,
                                          "name": "estimatedOutAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1035,
                                          "src": "4979:18:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1051,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1049,
                                                "name": "DENOMINATOR",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 660,
                                                "src": "5001:11:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "id": 1050,
                                                "name": "slippagePct",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 668,
                                                "src": "5015:11:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "5001:25:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1052,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "5000:27:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4979:48:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1054,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4978:50:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 1055,
                                    "name": "DENOMINATOR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 660,
                                    "src": "5051:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4978:84:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4933:129:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1058,
                              "nodeType": "ExpressionStatement",
                              "src": "4933:129:6"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 992,
              "nodeType": "StructuredDocumentation",
              "src": "3949:230:6",
              "text": "@notice deposit PTP in vector protocol and get xPTP\n @dev if xPTPRation < buyThreshold, will buy in open market a % of the deposit\n @dev this % is determined by buyPercent\n @param _amount the amount of PTP"
            },
            "functionSelector": "34e66b38",
            "id": 1064,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "estimateTotalConversion",
            "nameLocation": "4193:23:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 994,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4225:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "4217:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4217:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4216:17:6"
            },
            "returnParameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "minimumEstimatedTotal",
                  "nameLocation": "4289:21:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "4281:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4280:31:6"
            },
            "scope": 1277,
            "src": "4184:909:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "5494:1791:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1078,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5533:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5533:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1082,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5553:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_xPTPConvertor_$1277",
                              "typeString": "contract xPTPConvertor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_xPTPConvertor_$1277",
                              "typeString": "contract xPTPConvertor"
                            }
                          ],
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5545:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1080,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5545:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5545:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1084,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1067,
                        "src": "5560:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1075,
                            "name": "ptp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "5511:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1074,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1460,
                          "src": "5504:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1460_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5504:11:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1460",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1517,
                      "src": "5504:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1460_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1460_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5504:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "5504:64:6"
                },
                {
                  "assignments": [1088],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1088,
                      "mutability": "mutable",
                      "name": "xPTPRatio",
                      "nameLocation": "5586:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1240,
                      "src": "5578:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1087,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5578:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1091,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1089,
                      "name": "getxPTPRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "5598:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5598:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5578:34:6"
                },
                {
                  "assignments": [1093],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1093,
                      "mutability": "mutable",
                      "name": "amountToConvert",
                      "nameLocation": "5630:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1240,
                      "src": "5622:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1092,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5622:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1095,
                  "initialValue": {
                    "id": 1094,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1067,
                    "src": "5648:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5622:33:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1096,
                      "name": "xPTPRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1088,
                      "src": "5669:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1097,
                      "name": "buyThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "5682:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5669:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1203,
                  "nodeType": "IfStatement",
                  "src": "5665:1222:6",
                  "trueBody": {
                    "id": 1202,
                    "nodeType": "Block",
                    "src": "5696:1191:6",
                    "statements": [
                      {
                        "assignments": [1100],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1100,
                            "mutability": "mutable",
                            "name": "amountToBuy",
                            "nameLocation": "5718:11:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1202,
                            "src": "5710:19:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1099,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5710:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1107,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1101,
                                  "name": "amountToConvert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1093,
                                  "src": "5733:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1102,
                                  "name": "buyPercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 662,
                                  "src": "5751:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5733:28:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1104,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5732:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1105,
                            "name": "DENOMINATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "5765:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5732:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5710:66:6"
                      },
                      {
                        "assignments": [1109],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1109,
                            "mutability": "mutable",
                            "name": "maxAmountToRespectPriceImpact",
                            "nameLocation": "5798:29:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1202,
                            "src": "5790:37:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1108,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5790:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1112,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1110,
                            "name": "maxAmountToBuy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "5830:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5830:16:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5790:56:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1113,
                            "name": "amountToBuy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1100,
                            "src": "5864:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1114,
                            "name": "maxAmountToRespectPriceImpact",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "5878:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5864:43:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1121,
                        "nodeType": "IfStatement",
                        "src": "5860:125:6",
                        "trueBody": {
                          "id": 1120,
                          "nodeType": "Block",
                          "src": "5909:76:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1116,
                                  "name": "amountToBuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1100,
                                  "src": "5927:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1117,
                                  "name": "maxAmountToRespectPriceImpact",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1109,
                                  "src": "5941:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5927:43:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1119,
                              "nodeType": "ExpressionStatement",
                              "src": "5927:43:6"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1122,
                            "name": "amountToBuy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1100,
                            "src": "6002:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6016:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6002:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1201,
                        "nodeType": "IfStatement",
                        "src": "5998:879:6",
                        "trueBody": {
                          "id": 1200,
                          "nodeType": "Block",
                          "src": "6019:858:6",
                          "statements": [
                            {
                              "assignments": [1126],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1126,
                                  "mutability": "mutable",
                                  "name": "estimatedOutAmount",
                                  "nameLocation": "6045:18:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1200,
                                  "src": "6037:26:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1125,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6037:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1130,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1128,
                                    "name": "amountToBuy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1100,
                                    "src": "6084:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1127,
                                  "name": "estimateOutAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 892,
                                  "src": "6066:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 1129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6066:30:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6037:59:6"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1131,
                                  "name": "amountToBuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1100,
                                  "src": "6118:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1132,
                                  "name": "estimatedOutAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1126,
                                  "src": "6132:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6118:32:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1199,
                              "nodeType": "IfStatement",
                              "src": "6114:749:6",
                              "trueBody": {
                                "id": 1198,
                                "nodeType": "Block",
                                "src": "6152:711:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1135,
                                          "name": "ptp",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 651,
                                          "src": "6196:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1136,
                                          "name": "router",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 653,
                                          "src": "6201:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1137,
                                          "name": "amountToBuy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1100,
                                          "src": "6209:11:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1134,
                                        "name": "_approveTokenIfNeeded",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 929,
                                        "src": "6174:21:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,address,uint256)"
                                        }
                                      },
                                      "id": 1138,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6174:47:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1139,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6174:47:6"
                                  },
                                  {
                                    "assignments": [1144],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1144,
                                        "mutability": "mutable",
                                        "name": "path",
                                        "nameLocation": "6260:4:6",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1198,
                                        "src": "6243:21:6",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[]"
                                        },
                                        "typeName": {
                                          "baseType": {
                                            "id": 1142,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6243:7:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "id": 1143,
                                          "nodeType": "ArrayTypeName",
                                          "src": "6243:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                            "typeString": "address[]"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1150,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "hexValue": "32",
                                          "id": 1148,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6281:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          }
                                        ],
                                        "id": 1147,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "NewExpression",
                                        "src": "6267:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                          "typeString": "function (uint256) pure returns (address[] memory)"
                                        },
                                        "typeName": {
                                          "baseType": {
                                            "id": 1145,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6271:7:6",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "id": 1146,
                                          "nodeType": "ArrayTypeName",
                                          "src": "6271:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                            "typeString": "address[]"
                                          }
                                        }
                                      },
                                      "id": 1149,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6267:16:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6243:40:6"
                                  },
                                  {
                                    "expression": {
                                      "id": 1155,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 1151,
                                          "name": "path",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1144,
                                          "src": "6305:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 1153,
                                        "indexExpression": {
                                          "hexValue": "30",
                                          "id": 1152,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6310:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "6305:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 1154,
                                        "name": "ptp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 651,
                                        "src": "6315:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "6305:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1156,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6305:13:6"
                                  },
                                  {
                                    "expression": {
                                      "id": 1161,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 1157,
                                          "name": "path",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1144,
                                          "src": "6340:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 1159,
                                        "indexExpression": {
                                          "hexValue": "31",
                                          "id": 1158,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6345:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "6340:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 1160,
                                        "name": "xptp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 649,
                                        "src": "6350:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "6340:14:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1162,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6340:14:6"
                                  },
                                  {
                                    "expression": {
                                      "id": 1185,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1163,
                                        "name": "obtainedxPtpAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1072,
                                        "src": "6376:18:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "arguments": [
                                            {
                                              "id": 1168,
                                              "name": "amountToBuy",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1100,
                                              "src": "6468:11:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1177,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 1174,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 1169,
                                                      "name": "estimatedOutAmount",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1126,
                                                      "src": "6506:18:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "*",
                                                    "rightExpression": {
                                                      "components": [
                                                        {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "id": 1172,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 1170,
                                                            "name": "DENOMINATOR",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 660,
                                                            "src": "6528:11:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "-",
                                                          "rightExpression": {
                                                            "id": 1171,
                                                            "name": "slippagePct",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 668,
                                                            "src": "6542:11:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "src": "6528:25:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        }
                                                      ],
                                                      "id": 1173,
                                                      "isConstant": false,
                                                      "isInlineArray": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "TupleExpression",
                                                      "src": "6527:27:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "6506:48:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 1175,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "6505:50:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "/",
                                              "rightExpression": {
                                                "id": 1176,
                                                "name": "DENOMINATOR",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 660,
                                                "src": "6558:11:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "6505:64:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "id": 1178,
                                              "name": "path",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1144,
                                              "src": "6595:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              }
                                            },
                                            {
                                              "id": 1179,
                                              "name": "_for",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1069,
                                              "src": "6625:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 1180,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "6655:5:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 1181,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "6655:15:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 1165,
                                                  "name": "router",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 653,
                                                  "src": "6410:6:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 1164,
                                                "name": "IJoeRouter01",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2234,
                                                "src": "6397:12:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IJoeRouter01_$2234_$",
                                                  "typeString": "type(contract IJoeRouter01)"
                                                }
                                              },
                                              "id": 1166,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "6397:20:6",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IJoeRouter01_$2234",
                                                "typeString": "contract IJoeRouter01"
                                              }
                                            },
                                            "id": 1167,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "swapExactTokensForTokens",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2097,
                                            "src": "6397:45:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 1182,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "6397:295:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 1184,
                                        "indexExpression": {
                                          "hexValue": "31",
                                          "id": 1183,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6693:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6397:298:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6376:319:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1186,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6376:319:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1190,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1188,
                                            "name": "obtainedxPtpAmount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1072,
                                            "src": "6725:18:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": ">",
                                          "rightExpression": {
                                            "id": 1189,
                                            "name": "amountToBuy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1100,
                                            "src": "6746:11:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "6725:32:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "5472616e73616374696f6e20697320646973616476616e746167656f7573",
                                          "id": 1191,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6759:32:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_0cd8f32f85df9d717a81ebf05c0e5f189ea1b563755046d89a691cf5daae5c37",
                                            "typeString": "literal_string \"Transaction is disadvantageous\""
                                          },
                                          "value": "Transaction is disadvantageous"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_0cd8f32f85df9d717a81ebf05c0e5f189ea1b563755046d89a691cf5daae5c37",
                                            "typeString": "literal_string \"Transaction is disadvantageous\""
                                          }
                                        ],
                                        "id": 1187,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [-18, -18],
                                        "referencedDeclaration": -18,
                                        "src": "6717:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1192,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6717:75:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1193,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6717:75:6"
                                  },
                                  {
                                    "expression": {
                                      "id": 1196,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1194,
                                        "name": "amountToConvert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1093,
                                        "src": "6814:15:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 1195,
                                        "name": "amountToBuy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1100,
                                        "src": "6833:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6814:30:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1197,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6814:30:6"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1204,
                      "name": "amountToConvert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "6900:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6918:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6900:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1233,
                  "nodeType": "IfStatement",
                  "src": "6896:321:6",
                  "trueBody": {
                    "id": 1232,
                    "nodeType": "Block",
                    "src": "6921:296:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1207,
                            "name": "obtainedxPtpAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1072,
                            "src": "6935:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1208,
                            "name": "amountToConvert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1093,
                            "src": "6957:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6935:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1210,
                        "nodeType": "ExpressionStatement",
                        "src": "6935:37:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1212,
                              "name": "ptp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 651,
                              "src": "7008:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1213,
                              "name": "xptp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 649,
                              "src": "7013:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1214,
                              "name": "amountToConvert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1093,
                              "src": "7019:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1211,
                            "name": "_approveTokenIfNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "6986:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6986:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1216,
                        "nodeType": "ExpressionStatement",
                        "src": "6986:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1221,
                              "name": "amountToConvert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1093,
                              "src": "7128:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1218,
                                  "name": "xptp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 649,
                                  "src": "7114:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1217,
                                "name": "IxPTP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2413,
                                "src": "7108:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IxPTP_$2413_$",
                                  "typeString": "type(contract IxPTP)"
                                }
                              },
                              "id": 1219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7108:11:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IxPTP_$2413",
                                "typeString": "contract IxPTP"
                              }
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2385,
                            "src": "7108:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7108:36:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1223,
                        "nodeType": "ExpressionStatement",
                        "src": "7108:36:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1228,
                              "name": "_for",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1069,
                              "src": "7184:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1229,
                              "name": "amountToConvert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1093,
                              "src": "7190:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1225,
                                  "name": "xptp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 649,
                                  "src": "7165:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1224,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1460,
                                "src": "7158:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1460_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7158:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1460",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1491,
                            "src": "7158:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1460_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1460_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7158:48:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1231,
                        "nodeType": "ExpressionStatement",
                        "src": "7158:48:6"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1235,
                        "name": "_for",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "7244:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1236,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1067,
                        "src": "7250:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1237,
                        "name": "obtainedxPtpAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "7259:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1234,
                      "name": "xPTPObtained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "7231:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7231:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "EmitStatement",
                  "src": "7226:52:6"
                }
              ]
            },
            "documentation": {
              "id": 1065,
              "nodeType": "StructuredDocumentation",
              "src": "5099:272:6",
              "text": "@notice deposit PTP in vector protocol and get xPTP\n @dev if xPTPRation < buyThreshold, will buy in open market a % of the deposit\n @dev this % is determined by buyPercent\n @param _amount the amount of PTP\n @param _for, receiver of the xPTP"
            },
            "id": 1241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositFor",
            "nameLocation": "5385:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5405:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "5397:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5397:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "_for",
                  "nameLocation": "5422:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "5414:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5414:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5396:31:6"
            },
            "returnParameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "obtainedxPtpAmount",
                  "nameLocation": "5470:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "5462:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5462:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5461:28:6"
            },
            "scope": 1277,
            "src": "5376:1909:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1257,
              "nodeType": "Block",
              "src": "7606:70:6",
              "statements": [
                {
                  "expression": {
                    "id": 1255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1249,
                      "name": "obtainedxPtpAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1247,
                      "src": "7616:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1251,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1244,
                          "src": "7649:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1252,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7658:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7658:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1250,
                        "name": "_depositFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "7637:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) returns (uint256)"
                        }
                      },
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7637:32:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7616:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1256,
                  "nodeType": "ExpressionStatement",
                  "src": "7616:53:6"
                }
              ]
            },
            "documentation": {
              "id": 1242,
              "nodeType": "StructuredDocumentation",
              "src": "7291:230:6",
              "text": "@notice deposit PTP in vector protocol and get xPTP\n @dev if xPTPRation < buyThreshold, will buy in open market a % of the deposit\n @dev this % is determined by buyPercent\n @param _amount the amount of PTP"
            },
            "functionSelector": "b6b55f25",
            "id": 1258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "7535:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1244,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7551:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1258,
                  "src": "7543:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7543:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7542:17:6"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "obtainedxPtpAmount",
                  "nameLocation": "7586:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1258,
                  "src": "7578:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7578:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7577:28:6"
            },
            "scope": 1277,
            "src": "7526:150:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1275,
              "nodeType": "Block",
              "src": "8034:64:6",
              "statements": [
                {
                  "expression": {
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1268,
                      "name": "obtainedxPtpAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1266,
                      "src": "8044:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1270,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1261,
                          "src": "8077:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1271,
                          "name": "_for",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "8086:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1269,
                        "name": "_depositFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "8065:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) returns (uint256)"
                        }
                      },
                      "id": 1272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8065:26:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8044:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1274,
                  "nodeType": "ExpressionStatement",
                  "src": "8044:47:6"
                }
              ]
            },
            "documentation": {
              "id": 1259,
              "nodeType": "StructuredDocumentation",
              "src": "7682:230:6",
              "text": "@notice deposit PTP in vector protocol and get xPTP\n @dev if xPTPRation < buyThreshold, will buy in open market a % of the deposit\n @dev this % is determined by buyPercent\n @param _amount the amount of PTP"
            },
            "functionSelector": "36efd16f",
            "id": 1276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositFor",
            "nameLocation": "7926:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1261,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7945:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "7937:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7937:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1263,
                  "mutability": "mutable",
                  "name": "_for",
                  "nameLocation": "7962:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "7954:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7954:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7936:31:6"
            },
            "returnParameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1266,
                  "mutability": "mutable",
                  "name": "obtainedxPtpAmount",
                  "nameLocation": "8010:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "8002:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8002:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8001:28:6"
            },
            "scope": 1277,
            "src": "7917:181:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1278,
        "src": "485:7615:6",
        "usedErrors": []
      }
    ],
    "src": "32:8069:6"
  },
  "bytecode": "61010060405261251c6003556101f46004553480156200001e57600080fd5b5060405162001c1838038062001c188339810160408190526200004191620000e9565b6200004c336200007c565b6001600160601b0319606094851b811660805292841b831660a05290831b821660c05290911b1660e05262000146565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000e457600080fd5b919050565b600080600080608085870312156200010057600080fd5b6200010b85620000cc565b93506200011b60208601620000cc565b92506200012b60408601620000cc565b91506200013b60608601620000cc565b905092959194509250565b60805160601c60a05160601c60c05160601c60e05160601c6119eb6200022d600039600081816102310152818161033e01528181610412015281816104e7015281816105d6015281816106a80152818161096c0152610a3e0152600081816102b60152818161076a0152818161081701528181610dcc0152610ebc0152600081816101e801528181610d1401528181610dab01528181610e14015261101f015260008181610185015281816103e8015281816104bd0152818161067e01528181610a1401528181610e68015281816110400152818161107b01526110ec01526119eb6000f3fe608060405234801561001057600080fd5b50600436106101125760003560e01c80630bdcd8fb14610117578063170f06711461012c5780631e828d951461014757806334e66b381461015a57806336efd16f1461016d578063383d78e01461018057806342ebbe1c146101bf5780634f1455c9146101c7578063512b466a146101d05780636af66772146101e3578063715018a61461020a5780638da5cb5b14610212578063918f86741461021a578063a082ccd014610223578063a8aa1b311461022c578063b6b55f2514610253578063b84f7e5314610266578063c2f5d97e14610279578063f0fa55a914610282578063f13cff4114610295578063f2fde38b1461029e578063f887ea40146102b1575b600080fd5b61012a61012536600461172c565b6102d8565b005b610134610337565b6040519081526020015b60405180910390f35b61013461015536600461172c565b6105cf565b61013461016836600461172c565b6108a3565b61013461017b36600461175e565b610952565b6101a77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161013e565b610134610965565b61013460025481565b61012a6101de36600461172c565b610b07565b6101a77f000000000000000000000000000000000000000000000000000000000000000081565b61012a610b5d565b6101a7610b98565b61013461271081565b61013460045481565b6101a77f000000000000000000000000000000000000000000000000000000000000000081565b61013461026136600461172c565b610ba7565b61012a61027436600461172c565b610bb9565b61013460035481565b61012a61029036600461172c565b610c0f565b61013460015481565b61012a6102ac3660046115bc565b610c65565b6101a77f000000000000000000000000000000000000000000000000000000000000000081565b336102e1610b98565b6001600160a01b0316146103105760405162461bcd60e51b81526004016103079061181c565b60405180910390fd5b6127108111156103325760405162461bcd60e51b8152600401610307906117f6565b600255565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561039557600080fd5b505afa1580156103a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd91906116dc565b506001600160701b031691506001600160701b0316915060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561046957600080fd5b505afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a191906115d9565b6001600160a01b0316146104b557816104b7565b825b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561053e57600080fd5b505afa158015610552573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057691906115d9565b6001600160a01b03161461058a578361058c565b825b9050818111156105a157600094505050505090565b600354612710906105b2838561191b565b6105bc91906118fc565b6105c691906118da565b94505050505090565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561062d57600080fd5b505afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066591906116dc565b506001600160701b031691506001600160701b031691507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156106ff57600080fd5b505afa158015610713573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073791906115d9565b6001600160a01b031614156107f357604051630153543560e21b81526004810185905260248101839052604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063054d50d49060640160206040518083038186803b1580156107b457600080fd5b505afa1580156107c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ec9190611745565b925061089c565b604051630153543560e21b81526004810185905260248101829052604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063054d50d49060640160206040518083038186803b15801561086157600080fd5b505afa158015610875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108999190611745565b92505b5050919050565b6000806108ae610965565b9050829150600154811161094c576000612710600254846108cf91906118fc565b6108d991906118da565b905060006108e5610337565b9050808211156108f3578091505b60006108fe836105cf565b90508083101561094857610912838661191b565b9450612710600454612710610927919061191b565b61093190836118fc565b61093b91906118da565b61094590866118c2565b94505b5050505b50919050565b600061095e8383610d05565b9392505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156109c357600080fd5b505afa1580156109d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fb91906116dc565b506001600160701b031691506001600160701b031691507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610a9557600080fd5b505afa158015610aa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acd91906115d9565b6001600160a01b03161415610afa5781610ae9612710836118fc565b610af391906118da565b9250505090565b80610ae9612710846118fc565b33610b10610b98565b6001600160a01b031614610b365760405162461bcd60e51b81526004016103079061181c565b612710811115610b585760405162461bcd60e51b8152600401610307906117f6565b600155565b33610b66610b98565b6001600160a01b031614610b8c5760405162461bcd60e51b81526004016103079061181c565b610b966000611167565b565b6000546001600160a01b031690565b6000610bb38233610d05565b92915050565b33610bc2610b98565b6001600160a01b031614610be85760405162461bcd60e51b81526004016103079061181c565b612710811115610c0a5760405162461bcd60e51b8152600401610307906117f6565b600355565b33610c18610b98565b6001600160a01b031614610c3e5760405162461bcd60e51b81526004016103079061181c565b612710811115610c605760405162461bcd60e51b8152600401610307906117f6565b600455565b33610c6e610b98565b6001600160a01b031614610c945760405162461bcd60e51b81526004016103079061181c565b6001600160a01b038116610cf95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610307565b610d0281611167565b50565b6000610d3c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330866111b7565b6000610d46610965565b6001549091508490821161100857600061271060025483610d6791906118fc565b610d7191906118da565b90506000610d7d610337565b905080821115610d8b578091505b8115611005576000610d9c836105cf565b90508083101561100357610df17f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000085611228565b6040805160028082526060820183526000926020830190803683370190505090507f000000000000000000000000000000000000000000000000000000000000000081600081518110610e4657610e46611974565b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110610e9a57610e9a611974565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed173985612710600454612710610efd919061191b565b610f0790876118fc565b610f1191906118da565b848c426040518663ffffffff1660e01b8152600401610f34959493929190611851565b600060405180830381600087803b158015610f4e57600080fd5b505af1158015610f62573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f8a91908101906115f6565b600181518110610f9c57610f9c611974565b60200260200101519650838711610ff55760405162461bcd60e51b815260206004820152601e60248201527f5472616e73616374696f6e20697320646973616476616e746167656f757300006044820152606401610307565b610fff848661191b565b9450505b505b50505b80156111155761101881846118c2565b92506110657f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000083611228565b60405163b6b55f2560e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b6b55f2590602401600060405180830381600087803b1580156110c757600080fd5b505af11580156110db573d6000803e3d6000fd5b506111159250506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690508583611337565b604080516001600160a01b0386168152602081018790529081018490527fa91037ba08e3c8b150648a5ad60512dcede6ff057dfb3cb89bbdf11ed528f42c9060600160405180910390a1505092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526112229085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611356565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015282919085169063dd62ed3e9060440160206040518083038186803b15801561127257600080fd5b505afa158015611286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112aa9190611745565b10156113325760405163095ea7b360e01b81526001600160a01b0384169063095ea7b3906112e0908590600019906004016117aa565b602060405180830381600087803b1580156112fa57600080fd5b505af115801561130e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122291906116ba565b505050565b6113328363a9059cbb60e01b84846040516024016111eb9291906117aa565b60006113ab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114289092919063ffffffff16565b80519091501561133257808060200190518101906113c991906116ba565b6113325760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610307565b6060611437848460008561143f565b949350505050565b6060824710156114a05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610307565b843b6114ee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610307565b600080866001600160a01b0316858760405161150a919061178e565b60006040518083038185875af1925050503d8060008114611547576040519150601f19603f3d011682016040523d82523d6000602084013e61154c565b606091505b509150915061155c828286611567565b979650505050505050565b6060831561157657508161095e565b8251156115865782518084602001fd5b8160405162461bcd60e51b815260040161030791906117c3565b80516001600160701b03811681146115b757600080fd5b919050565b6000602082840312156115ce57600080fd5b813561095e816119a0565b6000602082840312156115eb57600080fd5b815161095e816119a0565b6000602080838503121561160957600080fd5b82516001600160401b038082111561162057600080fd5b818501915085601f83011261163457600080fd5b8151818111156116465761164661198a565b8060051b604051601f19603f8301168101818110858211171561166b5761166b61198a565b604052828152858101935084860182860187018a101561168a57600080fd5b600095505b838610156116ad57805185526001959095019493860193860161168f565b5098975050505050505050565b6000602082840312156116cc57600080fd5b8151801515811461095e57600080fd5b6000806000606084860312156116f157600080fd5b6116fa846115a0565b9250611708602085016115a0565b9150604084015163ffffffff8116811461172157600080fd5b809150509250925092565b60006020828403121561173e57600080fd5b5035919050565b60006020828403121561175757600080fd5b5051919050565b6000806040838503121561177157600080fd5b823591506020830135611783816119a0565b809150509250929050565b600082516117a0818460208701611932565b9190910192915050565b6001600160a01b03929092168252602082015260400190565b60208152600082518060208401526117e2816040850160208701611932565b601f01601f19169190910160400192915050565b6020808252600c908201526b4e6f7420696e2072616e676560a01b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156118a15784516001600160a01b03168352938301939183019160010161187c565b50506001600160a01b03969096166060850152505050608001529392505050565b600082198211156118d5576118d561195e565b500190565b6000826118f757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156119165761191661195e565b500290565b60008282101561192d5761192d61195e565b500390565b60005b8381101561194d578181015183820152602001611935565b838111156112225750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d0257600080fdfea264697066735822122018cacff02a563d0a37874be5572682846d2bdc092ca035e4534ea1d57baab20664736f6c63430008070033",
  "bytecodeSha1": "0c93cd5a9788c58fb3816996c3e123f75bae7a92",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 10
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "xPTPConvertor",
  "coverageMap": {
    "branches": {
      "0": {
        "Context._msgSender": {
          "72": [1248, 1271, true]
        },
        "Ownable.transferOwnership": {
          "73": [2006, 2028, true]
        }
      },
      "1": {},
      "10": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "74": [3735, 3756, false],
          "75": [3819, 3849, true]
        }
      },
      "3": {
        "Address.functionCallWithValue": {
          "69": [4798, 4828, true]
        },
        "Address.verifyCallResult": {
          "70": [7388, 7395, false],
          "71": [7529, 7550, false]
        }
      },
      "4": {},
      "6": {
        "xPTPConvertor._approveTokenIfNeeded": {
          "68": [3351, 3404, false]
        },
        "xPTPConvertor._depositFor": {
          "62": [5669, 5694, false],
          "63": [5864, 5907, false],
          "64": [6002, 6017, false],
          "65": [6118, 6150, false],
          "66": [6725, 6757, true],
          "67": [6900, 6919, false]
        },
        "xPTPConvertor.estimateOutAmount": {
          "54": [2529, 2560, false]
        },
        "xPTPConvertor.estimateTotalConversion": {
          "55": [4415, 4440, false],
          "56": [4616, 4659, false],
          "57": [4827, 4859, false]
        },
        "xPTPConvertor.getxPTPRatio": {
          "58": [2113, 2144, false]
        },
        "xPTPConvertor.maxAmountToBuy": {
          "51": [3645, 3676, true],
          "52": [3720, 3751, true],
          "53": [3776, 3802, false]
        },
        "xPTPConvertor.setBuyPercent": {
          "50": [1463, 1480, true]
        },
        "xPTPConvertor.setBuyThreshold": {
          "59": [1288, 1305, true]
        },
        "xPTPConvertor.setDeltaPercentage": {
          "60": [1641, 1658, true]
        },
        "xPTPConvertor.setSlippage": {
          "61": [1817, 1834, true]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "38": [2378, 2395],
          "39": [2405, 2450]
        },
        "Ownable.owner": {
          "17": [1101, 1114]
        },
        "Ownable.renounceOwnership": {
          "16": [1732, 1762]
        },
        "Ownable.transferOwnership": {
          "23": [1998, 2071],
          "24": [2081, 2109]
        }
      },
      "1": {},
      "10": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "43": [3811, 3896]
        },
        "SafeERC20.safeTransfer": {
          "42": [813, 899]
        },
        "SafeERC20.safeTransferFrom": {
          "40": [1050, 1146]
        }
      },
      "3": {
        "Address.functionCall": {
          "44": [3671, 3730]
        },
        "Address.functionCallWithValue": {
          "45": [4790, 4871],
          "46": [4881, 4941],
          "47": [5035, 5093]
        },
        "Address.verifyCallResult": {
          "48": [7411, 7428],
          "49": [7855, 7875]
        }
      },
      "4": {
        "Context._msgSender": {
          "0": [712, 729]
        }
      },
      "6": {
        "xPTPConvertor._approveTokenIfNeeded": {
          "41": [3420, 3465]
        },
        "xPTPConvertor._depositFor": {
          "25": [5504, 5568],
          "26": [5927, 5970],
          "27": [6174, 6221],
          "28": [6305, 6318],
          "29": [6340, 6354],
          "30": [6376, 6695],
          "31": [6717, 6792],
          "32": [6814, 6844],
          "33": [6935, 6972],
          "34": [6986, 7035],
          "35": [7108, 7144],
          "36": [7158, 7206],
          "37": [7226, 7278]
        },
        "xPTPConvertor.deposit": {
          "18": [7616, 7669]
        },
        "xPTPConvertor.depositFor": {
          "11": [8044, 8091]
        },
        "xPTPConvertor.estimateOutAmount": {
          "5": [2576, 2641],
          "6": [2755, 2820]
        },
        "xPTPConvertor.estimateTotalConversion": {
          "7": [4370, 4401],
          "8": [4679, 4722],
          "9": [4879, 4915],
          "10": [4933, 5062]
        },
        "xPTPConvertor.getxPTPRatio": {
          "12": [2160, 2195],
          "13": [2226, 2261]
        },
        "xPTPConvertor.maxAmountToBuy": {
          "3": [3818, 3826],
          "4": [3857, 3926]
        },
        "xPTPConvertor.setBuyPercent": {
          "1": [1438, 1497],
          "2": [1507, 1528]
        },
        "xPTPConvertor.setBuyThreshold": {
          "14": [1263, 1322],
          "15": [1332, 1355]
        },
        "xPTPConvertor.setDeltaPercentage": {
          "19": [1616, 1675],
          "20": [1685, 1711]
        },
        "xPTPConvertor.setSlippage": {
          "21": [1792, 1851],
          "22": [1861, 1883]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/IERC20",
    "IJoePair",
    "IJoeRouter01",
    "IxPTP",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101125760003560e01c80630bdcd8fb14610117578063170f06711461012c5780631e828d951461014757806334e66b381461015a57806336efd16f1461016d578063383d78e01461018057806342ebbe1c146101bf5780634f1455c9146101c7578063512b466a146101d05780636af66772146101e3578063715018a61461020a5780638da5cb5b14610212578063918f86741461021a578063a082ccd014610223578063a8aa1b311461022c578063b6b55f2514610253578063b84f7e5314610266578063c2f5d97e14610279578063f0fa55a914610282578063f13cff4114610295578063f2fde38b1461029e578063f887ea40146102b1575b600080fd5b61012a61012536600461172c565b6102d8565b005b610134610337565b6040519081526020015b60405180910390f35b61013461015536600461172c565b6105cf565b61013461016836600461172c565b6108a3565b61013461017b36600461175e565b610952565b6101a77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161013e565b610134610965565b61013460025481565b61012a6101de36600461172c565b610b07565b6101a77f000000000000000000000000000000000000000000000000000000000000000081565b61012a610b5d565b6101a7610b98565b61013461271081565b61013460045481565b6101a77f000000000000000000000000000000000000000000000000000000000000000081565b61013461026136600461172c565b610ba7565b61012a61027436600461172c565b610bb9565b61013460035481565b61012a61029036600461172c565b610c0f565b61013460015481565b61012a6102ac3660046115bc565b610c65565b6101a77f000000000000000000000000000000000000000000000000000000000000000081565b336102e1610b98565b6001600160a01b0316146103105760405162461bcd60e51b81526004016103079061181c565b60405180910390fd5b6127108111156103325760405162461bcd60e51b8152600401610307906117f6565b600255565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561039557600080fd5b505afa1580156103a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd91906116dc565b506001600160701b031691506001600160701b0316915060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561046957600080fd5b505afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a191906115d9565b6001600160a01b0316146104b557816104b7565b825b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561053e57600080fd5b505afa158015610552573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057691906115d9565b6001600160a01b03161461058a578361058c565b825b9050818111156105a157600094505050505090565b600354612710906105b2838561191b565b6105bc91906118fc565b6105c691906118da565b94505050505090565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561062d57600080fd5b505afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066591906116dc565b506001600160701b031691506001600160701b031691507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156106ff57600080fd5b505afa158015610713573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073791906115d9565b6001600160a01b031614156107f357604051630153543560e21b81526004810185905260248101839052604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063054d50d49060640160206040518083038186803b1580156107b457600080fd5b505afa1580156107c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ec9190611745565b925061089c565b604051630153543560e21b81526004810185905260248101829052604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063054d50d49060640160206040518083038186803b15801561086157600080fd5b505afa158015610875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108999190611745565b92505b5050919050565b6000806108ae610965565b9050829150600154811161094c576000612710600254846108cf91906118fc565b6108d991906118da565b905060006108e5610337565b9050808211156108f3578091505b60006108fe836105cf565b90508083101561094857610912838661191b565b9450612710600454612710610927919061191b565b61093190836118fc565b61093b91906118da565b61094590866118c2565b94505b5050505b50919050565b600061095e8383610d05565b9392505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156109c357600080fd5b505afa1580156109d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fb91906116dc565b506001600160701b031691506001600160701b031691507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610a9557600080fd5b505afa158015610aa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acd91906115d9565b6001600160a01b03161415610afa5781610ae9612710836118fc565b610af391906118da565b9250505090565b80610ae9612710846118fc565b33610b10610b98565b6001600160a01b031614610b365760405162461bcd60e51b81526004016103079061181c565b612710811115610b585760405162461bcd60e51b8152600401610307906117f6565b600155565b33610b66610b98565b6001600160a01b031614610b8c5760405162461bcd60e51b81526004016103079061181c565b610b966000611167565b565b6000546001600160a01b031690565b6000610bb38233610d05565b92915050565b33610bc2610b98565b6001600160a01b031614610be85760405162461bcd60e51b81526004016103079061181c565b612710811115610c0a5760405162461bcd60e51b8152600401610307906117f6565b600355565b33610c18610b98565b6001600160a01b031614610c3e5760405162461bcd60e51b81526004016103079061181c565b612710811115610c605760405162461bcd60e51b8152600401610307906117f6565b600455565b33610c6e610b98565b6001600160a01b031614610c945760405162461bcd60e51b81526004016103079061181c565b6001600160a01b038116610cf95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610307565b610d0281611167565b50565b6000610d3c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330866111b7565b6000610d46610965565b6001549091508490821161100857600061271060025483610d6791906118fc565b610d7191906118da565b90506000610d7d610337565b905080821115610d8b578091505b8115611005576000610d9c836105cf565b90508083101561100357610df17f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000085611228565b6040805160028082526060820183526000926020830190803683370190505090507f000000000000000000000000000000000000000000000000000000000000000081600081518110610e4657610e46611974565b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110610e9a57610e9a611974565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed173985612710600454612710610efd919061191b565b610f0790876118fc565b610f1191906118da565b848c426040518663ffffffff1660e01b8152600401610f34959493929190611851565b600060405180830381600087803b158015610f4e57600080fd5b505af1158015610f62573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f8a91908101906115f6565b600181518110610f9c57610f9c611974565b60200260200101519650838711610ff55760405162461bcd60e51b815260206004820152601e60248201527f5472616e73616374696f6e20697320646973616476616e746167656f757300006044820152606401610307565b610fff848661191b565b9450505b505b50505b80156111155761101881846118c2565b92506110657f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000083611228565b60405163b6b55f2560e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b6b55f2590602401600060405180830381600087803b1580156110c757600080fd5b505af11580156110db573d6000803e3d6000fd5b506111159250506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690508583611337565b604080516001600160a01b0386168152602081018790529081018490527fa91037ba08e3c8b150648a5ad60512dcede6ff057dfb3cb89bbdf11ed528f42c9060600160405180910390a1505092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526112229085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611356565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015282919085169063dd62ed3e9060440160206040518083038186803b15801561127257600080fd5b505afa158015611286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112aa9190611745565b10156113325760405163095ea7b360e01b81526001600160a01b0384169063095ea7b3906112e0908590600019906004016117aa565b602060405180830381600087803b1580156112fa57600080fd5b505af115801561130e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122291906116ba565b505050565b6113328363a9059cbb60e01b84846040516024016111eb9291906117aa565b60006113ab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114289092919063ffffffff16565b80519091501561133257808060200190518101906113c991906116ba565b6113325760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610307565b6060611437848460008561143f565b949350505050565b6060824710156114a05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610307565b843b6114ee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610307565b600080866001600160a01b0316858760405161150a919061178e565b60006040518083038185875af1925050503d8060008114611547576040519150601f19603f3d011682016040523d82523d6000602084013e61154c565b606091505b509150915061155c828286611567565b979650505050505050565b6060831561157657508161095e565b8251156115865782518084602001fd5b8160405162461bcd60e51b815260040161030791906117c3565b80516001600160701b03811681146115b757600080fd5b919050565b6000602082840312156115ce57600080fd5b813561095e816119a0565b6000602082840312156115eb57600080fd5b815161095e816119a0565b6000602080838503121561160957600080fd5b82516001600160401b038082111561162057600080fd5b818501915085601f83011261163457600080fd5b8151818111156116465761164661198a565b8060051b604051601f19603f8301168101818110858211171561166b5761166b61198a565b604052828152858101935084860182860187018a101561168a57600080fd5b600095505b838610156116ad57805185526001959095019493860193860161168f565b5098975050505050505050565b6000602082840312156116cc57600080fd5b8151801515811461095e57600080fd5b6000806000606084860312156116f157600080fd5b6116fa846115a0565b9250611708602085016115a0565b9150604084015163ffffffff8116811461172157600080fd5b809150509250925092565b60006020828403121561173e57600080fd5b5035919050565b60006020828403121561175757600080fd5b5051919050565b6000806040838503121561177157600080fd5b823591506020830135611783816119a0565b809150509250929050565b600082516117a0818460208701611932565b9190910192915050565b6001600160a01b03929092168252602082015260400190565b60208152600082518060208401526117e2816040850160208701611932565b601f01601f19169190910160400192915050565b6020808252600c908201526b4e6f7420696e2072616e676560a01b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156118a15784516001600160a01b03168352938301939183019160010161187c565b50506001600160a01b03969096166060850152505050608001529392505050565b600082198211156118d5576118d561195e565b500190565b6000826118f757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156119165761191661195e565b500290565b60008282101561192d5761192d61195e565b500390565b60005b8381101561194d578181015183820152602001611935565b838111156112225750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d0257600080fdfea264697066735822122018cacff02a563d0a37874be5572682846d2bdc092ca035e4534ea1d57baab20664736f6c63430008070033",
  "deployedSourceMap": "485:7615:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1368:167;;;;;;:::i;:::-;;:::i;:::-;;3488:455;;;:::i;:::-;;;8239:25:11;;;8227:2;8212:18;3488:455:6;;;;;;;;2361:559;;;;;;:::i;:::-;;:::i;4184:909::-;;;;;;:::i;:::-;;:::i;7917:181::-;;;;;;:::i;:::-;;:::i;557:29::-;;;;;;;;-1:-1:-1;;;;;3699:32:11;;;3681:51;;3669:2;3654:18;557:29:6;3535:203:11;1968:310:6;;;:::i;781:25::-;;;;;;1191:171;;;;;;:::i;:::-;;:::i;592:28::-;;;;;1668:101:0;;;:::i;1036:85::-;;;:::i;732:43:6:-;;770:5;732:43;;855:32;;;;;;663:29;;;;;7526:150;;;;;;:::i;:::-;;:::i;1541:177::-;;;;;;:::i;:::-;;:::i;812:37::-;;;;;;1724:166;;;;;;:::i;:::-;;:::i;699:27::-;;;;;;1918:198:0;;;;;;:::i;:::-;;:::i;626:31:6:-;;;;;1368:167;719:10:4;1248:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1475:5:6::1;1463:8;:17;;1438:59;;;;-1:-1:-1::0;;;1438:59:6::1;;;;;;;:::i;:::-;1507:10;:21:::0;1368:167::o;3488:455::-;3535:7;3555:10;3567;3592:4;-1:-1:-1;;;;;3583:26:6;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3554:57;-1:-1:-1;;;;;3554:57:6;;;-1:-1:-1;;;;;3554:57:6;;;3621:20;3672:4;-1:-1:-1;;;;;3645:31:6;3654:4;-1:-1:-1;;;;;3645:21:6;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3645:31:6;;:41;;3684:2;3645:41;;;3679:2;3645:41;3621:66;;3697:19;3747:4;-1:-1:-1;;;;;3720:31:6;3729:4;-1:-1:-1;;;;;3720:21:6;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3720:31:6;;:41;;3759:2;3720:41;;;3754:2;3720:41;3697:65;;3790:12;3776:11;:26;3772:165;;;3825:1;3818:8;;;;;;3488:455;:::o;3772:165::-;3896:15;;770:5;;3866:26;3881:11;3866:12;:26;:::i;:::-;3865:46;;;;:::i;:::-;3864:62;;;;:::i;:::-;3857:69;;;;;;3488:455;:::o;2361:559::-;2429:17;2459:10;2471;2496:4;-1:-1:-1;;;;;2487:26:6;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2458:57;-1:-1:-1;;;;;2458:57:6;;;-1:-1:-1;;;;;2458:57:6;;;2556:4;-1:-1:-1;;;;;2529:31:6;2538:4;-1:-1:-1;;;;;2529:21:6;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2529:31:6;;2525:389;;;2588:53;;-1:-1:-1;;;2588:53:6;;;;;9454:25:11;;;9495:18;;;9488:34;;;9538:18;;;9531:34;;;2601:6:6;-1:-1:-1;;;;;2588:33:6;;;;9427:18:11;;2588:53:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2576:65;;2525:389;;;2767:53;;-1:-1:-1;;;2767:53:6;;;;;9454:25:11;;;9495:18;;;9488:34;;;9538:18;;;9531:34;;;2780:6:6;-1:-1:-1;;;;;2767:33:6;;;;9427:18:11;;2767:53:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2755:65;;2525:389;2448:472;;2361:559;;;:::o;4184:909::-;4281:29;4326:17;4346:14;:12;:14::i;:::-;4326:34;;4394:7;4370:31;;4428:12;;4415:9;:25;4411:676;;4456:19;770:5;4503:10;;4479:21;:34;;;;:::i;:::-;4478:50;;;;:::i;:::-;4456:72;;4542:37;4582:16;:14;:16::i;:::-;4542:56;;4630:29;4616:11;:43;4612:125;;;4693:29;4679:43;;4612:125;4750:26;4779:30;4797:11;4779:17;:30::i;:::-;4750:59;;4841:18;4827:11;:32;4823:254;;;4879:36;4904:11;4879:36;;:::i;:::-;;;770:5;5015:11;;770:5;5001:25;;;;:::i;:::-;4979:48;;:18;:48;:::i;:::-;4978:84;;;;:::i;:::-;4933:129;;;;:::i;:::-;;;4823:254;4442:645;;;4411:676;4316:777;4184:909;;;:::o;7917:181::-;8002:26;8065;8077:7;8086:4;8065:11;:26::i;:::-;8044:47;7917:181;-1:-1:-1;;;7917:181:6:o;1968:310::-;2013:17;2043:10;2055;2080:4;-1:-1:-1;;;;;2071:26:6;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:57;-1:-1:-1;;;;;2042:57:6;;;-1:-1:-1;;;;;2042:57:6;;;2140:4;-1:-1:-1;;;;;2113:31:6;2122:4;-1:-1:-1;;;;;2113:21:6;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2113:31:6;;2109:163;;;2193:2;2173:16;770:5;2173:2;:16;:::i;:::-;2172:23;;;;:::i;:::-;2160:35;;2032:246;;1968:310;:::o;2109:163::-;2259:2;2239:16;770:5;2239:2;:16;:::i;1191:171::-;719:10:4;1248:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1300:5:6::1;1288:8;:17;;1263:59;;;;-1:-1:-1::0;;;1263:59:6::1;;;;;;;:::i;:::-;1332:12;:23:::0;1191:171::o;1668:101:0:-;719:10:4;1248:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;;1036:85::o;7526:150:6:-;7578:26;7637:32;7649:7;7658:10;7637:11;:32::i;:::-;7616:53;7526:150;-1:-1:-1;;7526:150:6:o;1541:177::-;719:10:4;1248:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1653:5:6::1;1641:8;:17;;1616:59;;;;-1:-1:-1::0;;;1616:59:6::1;;;;;;;:::i;:::-;1685:15;:26:::0;1541:177::o;1724:166::-;719:10:4;1248:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1829:5:6::1;1817:8;:17;;1792:59;;;;-1:-1:-1::0;;;1792:59:6::1;;;;;;;:::i;:::-;1861:11;:22:::0;1724:166::o;1918:198:0:-;719:10:4;1248:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;6351:2:11;1998:73:0::1;::::0;::::1;6333:21:11::0;6390:2;6370:18;;;6363:30;6429:34;6409:18;;;6402:62;-1:-1:-1;;;6480:18:11;;;6473:36;6526:19;;1998:73:0::1;6149:402:11::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;5376:1909:6:-;5462:26;5504:64;-1:-1:-1;;;;;5511:3:6;5504:28;5533:10;5553:4;5560:7;5504:28;:64::i;:::-;5578:17;5598:14;:12;:14::i;:::-;5682:12;;5578:34;;-1:-1:-1;5648:7:6;;5669:25;;5665:1222;;5710:19;770:5;5751:10;;5733:15;:28;;;;:::i;:::-;5732:44;;;;:::i;:::-;5710:66;;5790:37;5830:16;:14;:16::i;:::-;5790:56;;5878:29;5864:11;:43;5860:125;;;5941:29;5927:43;;5860:125;6002:15;;5998:879;;6037:26;6066:30;6084:11;6066:17;:30::i;:::-;6037:59;;6132:18;6118:11;:32;6114:749;;;6174:47;6196:3;6201:6;6209:11;6174:21;:47::i;:::-;6267:16;;;6281:1;6267:16;;;;;;;;6243:21;;6267:16;;;;;;;;;;-1:-1:-1;6267:16:6;6243:40;;6315:3;6305:4;6310:1;6305:7;;;;;;;;:::i;:::-;;;;;;:13;-1:-1:-1;;;;;6305:13:6;;;-1:-1:-1;;;;;6305:13:6;;;;;6350:4;6340;6345:1;6340:7;;;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;6340:14:6;;;-1:-1:-1;;;;;6340:14:6;;;;;6410:6;-1:-1:-1;;;;;6397:45:6;;6468:11;770:5;6542:11;;770:5;6528:25;;;;:::i;:::-;6506:48;;:18;:48;:::i;:::-;6505:64;;;;:::i;:::-;6595:4;6625;6655:15;6397:295;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6397:295:6;;;;;;;;;;;;:::i;:::-;6693:1;6397:298;;;;;;;;:::i;:::-;;;;;;;6376:319;;6746:11;6725:18;:32;6717:75;;;;-1:-1:-1;;;6717:75:6;;5651:2:11;6717:75:6;;;5633:21:11;5690:2;5670:18;;;5663:30;5729:32;5709:18;;;5702:60;5779:18;;6717:75:6;5449:354:11;6717:75:6;6814:30;6833:11;6814:30;;:::i;:::-;;;6152:711;6114:749;6019:858;5998:879;5696:1191;;5665:1222;6900:19;;6896:321;;6935:37;6957:15;6935:37;;:::i;:::-;;;6986:49;7008:3;7013:4;7019:15;6986:21;:49::i;:::-;7108:36;;-1:-1:-1;;;7108:36:6;;;;;8239:25:11;;;7114:4:6;-1:-1:-1;;;;;7108:19:6;;;;8212:18:11;;7108:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7158:48:6;;-1:-1:-1;;;;;;;7165:4:6;7158:25;;-1:-1:-1;7184:4:6;7190:15;7158:25;:48::i;:::-;7231:47;;;-1:-1:-1;;;;;4931:32:11;;4913:51;;4995:2;4980:18;;4973:34;;;5023:18;;;5016:34;;;7231:47:6;;4901:2:11;4886:18;7231:47:6;;;;;;;5494:1791;;5376:1909;;;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;912:241:2:-;1077:68;;-1:-1:-1;;;;;4310:15:11;;;1077:68:2;;;4292:34:11;4362:15;;4342:18;;;4335:43;4394:18;;;4387:34;;;1050:96:2;;1070:5;;-1:-1:-1;;;1100:27:2;4227:18:11;;1077:68:2;;;;-1:-1:-1;;1077:68:2;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:2;-1:-1:-1;;;;;;1077:68:2;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;3223:259:6:-;3351:43;;-1:-1:-1;;;3351:43:6;;3383:4;3351:43;;;3955:34:11;-1:-1:-1;;;;;4025:15:11;;;4005:18;;;3998:43;3397:7:6;;3351:23;;;;;;3890:18:11;;3351:43:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;3347:129;;;3420:45;;-1:-1:-1;;;3420:45:6;;-1:-1:-1;;;;;3420:21:6;;;;;:45;;3442:3;;-1:-1:-1;;3447:17:6;3420:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3347:129::-;3223:259;;;:::o;701:205:2:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:2;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;7884:2:11;3811:85:2;;;7866:21:11;7923:2;7903:18;;;7896:30;7962:34;7942:18;;;7935:62;-1:-1:-1;;;8013:18:11;;;8006:40;8063:19;;3811:85:2;7682:406:11;3514:223:3;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3678:21;:52::i;:::-;3671:59;3514:223;-1:-1:-1;;;;3514:223:3:o;4601:499::-;4766:12;4823:5;4798:21;:30;;4790:81;;;;-1:-1:-1;;;4790:81:3;;6758:2:11;4790:81:3;;;6740:21:11;6797:2;6777:18;;;6770:30;6836:34;6816:18;;;6809:62;-1:-1:-1;;;6887:18:11;;;6880:36;6933:19;;4790:81:3;6556:402:11;4790:81:3;1087:20;;4881:60;;;;-1:-1:-1;;;4881:60:3;;7526:2:11;4881:60:3;;;7508:21:11;7565:2;7545:18;;;7538:30;7604:31;7584:18;;;7577:59;7653:18;;4881:60:3;7324:353:11;4881:60:3;4953:12;4967:23;4994:6;-1:-1:-1;;;;;4994:11:3;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;5042:16;:51::i;:::-;5035:58;4601:499;-1:-1:-1;;;;;;;4601:499:3:o;7214:692::-;7360:12;7388:7;7384:516;;;-1:-1:-1;7418:10:3;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7525:365;7862:12;7855:20;;-1:-1:-1;;;7855:20:3;;;;;;;;:::i;14:177:11:-;93:13;;-1:-1:-1;;;;;135:31:11;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:247::-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;363:9;350:23;382:31;407:5;382:31;:::i;448:251::-;518:6;571:2;559:9;550:7;546:23;542:32;539:52;;;587:1;584;577:12;539:52;619:9;613:16;638:31;663:5;638:31;:::i;704:1116::-;799:6;830:2;873;861:9;852:7;848:23;844:32;841:52;;;889:1;886;879:12;841:52;916:16;;-1:-1:-1;;;;;981:14:11;;;978:34;;;1008:1;1005;998:12;978:34;1046:6;1035:9;1031:22;1021:32;;1091:7;1084:4;1080:2;1076:13;1072:27;1062:55;;1113:1;1110;1103:12;1062:55;1142:2;1136:9;1164:2;1160;1157:10;1154:36;;;1170:18;;:::i;:::-;1216:2;1213:1;1209:10;1248:2;1242:9;1311:2;1307:7;1302:2;1298;1294:11;1290:25;1282:6;1278:38;1366:6;1354:10;1351:22;1346:2;1334:10;1331:18;1328:46;1325:72;;;1377:18;;:::i;:::-;1413:2;1406:22;1463:18;;;1497:15;;;;-1:-1:-1;1532:11:11;;;1562;;;1558:20;;1555:33;-1:-1:-1;1552:53:11;;;1601:1;1598;1591:12;1552:53;1623:1;1614:10;;1633:156;1647:2;1644:1;1641:9;1633:156;;;1704:10;;1692:23;;1665:1;1658:9;;;;;1735:12;;;;1767;;1633:156;;;-1:-1:-1;1808:6:11;704:1116;-1:-1:-1;;;;;;;;704:1116:11:o;1825:277::-;1892:6;1945:2;1933:9;1924:7;1920:23;1916:32;1913:52;;;1961:1;1958;1951:12;1913:52;1993:9;1987:16;2046:5;2039:13;2032:21;2025:5;2022:32;2012:60;;2068:1;2065;2058:12;2107:450;2194:6;2202;2210;2263:2;2251:9;2242:7;2238:23;2234:32;2231:52;;;2279:1;2276;2269:12;2231:52;2302:40;2332:9;2302:40;:::i;:::-;2292:50;;2361:49;2406:2;2395:9;2391:18;2361:49;:::i;:::-;2351:59;;2453:2;2442:9;2438:18;2432:25;2497:10;2490:5;2486:22;2479:5;2476:33;2466:61;;2523:1;2520;2513:12;2466:61;2546:5;2536:15;;;2107:450;;;;;:::o;2562:180::-;2621:6;2674:2;2662:9;2653:7;2649:23;2645:32;2642:52;;;2690:1;2687;2680:12;2642:52;-1:-1:-1;2713:23:11;;2562:180;-1:-1:-1;2562:180:11:o;2747:184::-;2817:6;2870:2;2858:9;2849:7;2845:23;2841:32;2838:52;;;2886:1;2883;2876:12;2838:52;-1:-1:-1;2909:16:11;;2747:184;-1:-1:-1;2747:184:11:o;2936:315::-;3004:6;3012;3065:2;3053:9;3044:7;3040:23;3036:32;3033:52;;;3081:1;3078;3071:12;3033:52;3117:9;3104:23;3094:33;;3177:2;3166:9;3162:18;3149:32;3190:31;3215:5;3190:31;:::i;:::-;3240:5;3230:15;;;2936:315;;;;;:::o;3256:274::-;3385:3;3423:6;3417:13;3439:53;3485:6;3480:3;3473:4;3465:6;3461:17;3439:53;:::i;:::-;3508:16;;;;;3256:274;-1:-1:-1;;3256:274:11:o;4432:::-;-1:-1:-1;;;;;4624:32:11;;;;4606:51;;4688:2;4673:18;;4666:34;4594:2;4579:18;;4432:274::o;5061:383::-;5210:2;5199:9;5192:21;5173:4;5242:6;5236:13;5285:6;5280:2;5269:9;5265:18;5258:34;5301:66;5360:6;5355:2;5344:9;5340:18;5335:2;5327:6;5323:15;5301:66;:::i;:::-;5428:2;5407:15;-1:-1:-1;;5403:29:11;5388:45;;;;5435:2;5384:54;;5061:383;-1:-1:-1;;5061:383:11:o;5808:336::-;6010:2;5992:21;;;6049:2;6029:18;;;6022:30;-1:-1:-1;;;6083:2:11;6068:18;;6061:42;6135:2;6120:18;;5808:336::o;6963:356::-;7165:2;7147:21;;;7184:18;;;7177:30;7243:34;7238:2;7223:18;;7216:62;7310:2;7295:18;;6963:356::o;8275:972::-;8529:4;8577:3;8566:9;8562:19;8608:6;8597:9;8590:25;8634:2;8672:6;8667:2;8656:9;8652:18;8645:34;8715:3;8710:2;8699:9;8695:18;8688:31;8739:6;8774;8768:13;8805:6;8797;8790:22;8843:3;8832:9;8828:19;8821:26;;8882:2;8874:6;8870:15;8856:29;;8903:1;8913:195;8927:6;8924:1;8921:13;8913:195;;;8992:13;;-1:-1:-1;;;;;8988:39:11;8976:52;;9083:15;;;;9048:12;;;;9024:1;8942:9;8913:195;;;-1:-1:-1;;;;;;;9164:32:11;;;;9159:2;9144:18;;9137:60;-1:-1:-1;;;9228:3:11;9213:19;9206:35;9125:3;8275:972;-1:-1:-1;;;8275:972:11:o;9576:128::-;9616:3;9647:1;9643:6;9640:1;9637:13;9634:39;;;9653:18;;:::i;:::-;-1:-1:-1;9689:9:11;;9576:128::o;9709:217::-;9749:1;9775;9765:132;;9819:10;9814:3;9810:20;9807:1;9800:31;9854:4;9851:1;9844:15;9882:4;9879:1;9872:15;9765:132;-1:-1:-1;9911:9:11;;9709:217::o;9931:168::-;9971:7;10037:1;10033;10029:6;10025:14;10022:1;10019:21;10014:1;10007:9;10000:17;9996:45;9993:71;;;10044:18;;:::i;:::-;-1:-1:-1;10084:9:11;;9931:168::o;10104:125::-;10144:4;10172:1;10169;10166:8;10163:34;;;10177:18;;:::i;:::-;-1:-1:-1;10214:9:11;;10104:125::o;10234:258::-;10306:1;10316:113;10330:6;10327:1;10324:13;10316:113;;;10406:11;;;10400:18;10387:11;;;10380:39;10352:2;10345:10;10316:113;;;10447:6;10444:1;10441:13;10438:48;;;-1:-1:-1;;10482:1:11;10464:16;;10457:27;10234:258::o;10497:127::-;10558:10;10553:3;10549:20;10546:1;10539:31;10589:4;10586:1;10579:15;10613:4;10610:1;10603:15;10629:127;10690:10;10685:3;10681:20;10678:1;10671:31;10721:4;10718:1;10711:15;10745:4;10742:1;10735:15;10761:127;10822:10;10817:3;10813:20;10810:1;10803:31;10853:4;10850:1;10843:15;10877:4;10874:1;10867:15;10893:131;-1:-1:-1;;;;;10968:31:11;;10958:42;;10948:70;;11014:1;11011;11004:12",
  "language": "Solidity",
  "natspec": {
    "author": "Vector Team",
    "kind": "dev",
    "methods": {
      "deposit(uint256)": {
        "details": "if xPTPRation < buyThreshold, will buy in open market a % of the depositthis % is determined by buyPercent",
        "notice": "deposit PTP in vector protocol and get xPTP",
        "params": {
          "_amount": "the amount of PTP"
        }
      },
      "depositFor(uint256,address)": {
        "details": "if xPTPRation < buyThreshold, will buy in open market a % of the depositthis % is determined by buyPercent",
        "notice": "deposit PTP in vector protocol and get xPTP",
        "params": {
          "_amount": "the amount of PTP"
        }
      },
      "estimateOutAmount(uint256)": {
        "notice": "estimates the amount of xPTP recieved if bought on traderJoe"
      },
      "estimateTotalConversion(uint256)": {
        "details": "if xPTPRation < buyThreshold, will buy in open market a % of the depositthis % is determined by buyPercent",
        "notice": "deposit PTP in vector protocol and get xPTP",
        "params": {
          "_amount": "the amount of PTP"
        }
      },
      "getxPTPRatio()": {
        "notice": "returns the ratio between xPTP and PTP. 10000= 1:1 rate"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "Smart Convertor is a convertor to manage conversion or buying on trader Joe",
    "title": "Smart Convertor",
    "version": 1
  },
  "offset": [485, 8100],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x112 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBDCD8FB EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x170F0671 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x1E828D95 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x34E66B38 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x36EFD16F EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x383D78E0 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x42EBBE1C EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x4F1455C9 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x512B466A EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x6AF66772 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x918F8674 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xA082CCD0 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xA8AA1B31 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xB84F7E53 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xC2F5D97E EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xF0FA55A9 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xF13CFF41 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x2B1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x172C JUMP JUMPDEST PUSH2 0x2D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x172C JUMP JUMPDEST PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x134 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x172C JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x952 JUMP JUMPDEST PUSH2 0x1A7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13E JUMP JUMPDEST PUSH2 0x134 PUSH2 0x965 JUMP JUMPDEST PUSH2 0x134 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x172C JUMP JUMPDEST PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x1A7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x12A PUSH2 0xB5D JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x134 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x172C JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x172C JUMP JUMPDEST PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x134 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x172C JUMP JUMPDEST PUSH2 0xC0F JUMP JUMPDEST PUSH2 0x134 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x15BC JUMP JUMPDEST PUSH2 0xC65 JUMP JUMPDEST PUSH2 0x1A7 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH2 0x2E1 PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x310 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x181C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x332 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4B5 JUMPI DUP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x53E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x552 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x58A JUMPI DUP4 PUSH2 0x58C JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x5B2 DUP4 DUP6 PUSH2 0x191B JUMP JUMPDEST PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x641 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x713 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x737 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1535435 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x54D50D4 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST SWAP3 POP PUSH2 0x89C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1535435 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x54D50D4 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x875 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x899 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8AE PUSH2 0x965 JUMP JUMPDEST SWAP1 POP DUP3 SWAP2 POP PUSH1 0x1 SLOAD DUP2 GT PUSH2 0x94C JUMPI PUSH1 0x0 PUSH2 0x2710 PUSH1 0x2 SLOAD DUP5 PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8E5 PUSH2 0x337 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8F3 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x8FE DUP4 PUSH2 0x5CF JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT ISZERO PUSH2 0x948 JUMPI PUSH2 0x912 DUP4 DUP7 PUSH2 0x191B JUMP JUMPDEST SWAP5 POP PUSH2 0x2710 PUSH1 0x4 SLOAD PUSH2 0x2710 PUSH2 0x927 SWAP2 SWAP1 PUSH2 0x191B JUMP JUMPDEST PUSH2 0x931 SWAP1 DUP4 PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x93B SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x945 SWAP1 DUP7 PUSH2 0x18C2 JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95E DUP4 DUP4 PUSH2 0xD05 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FB SWAP2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACD SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xAFA JUMPI DUP2 PUSH2 0xAE9 PUSH2 0x2710 DUP4 PUSH2 0x18FC JUMP JUMPDEST PUSH2 0xAF3 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0xAE9 PUSH2 0x2710 DUP5 PUSH2 0x18FC JUMP JUMPDEST CALLER PUSH2 0xB10 PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x181C JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST CALLER PUSH2 0xB66 PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x181C JUMP JUMPDEST PUSH2 0xB96 PUSH1 0x0 PUSH2 0x1167 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP3 CALLER PUSH2 0xD05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0xBC2 PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x181C JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST CALLER PUSH2 0xC18 PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x181C JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xC60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST CALLER PUSH2 0xC6E PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x181C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x307 JUMP JUMPDEST PUSH2 0xD02 DUP2 PUSH2 0x1167 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD46 PUSH2 0x965 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP DUP5 SWAP1 DUP3 GT PUSH2 0x1008 JUMPI PUSH1 0x0 PUSH2 0x2710 PUSH1 0x2 SLOAD DUP4 PUSH2 0xD67 SWAP2 SWAP1 PUSH2 0x18FC JUMP JUMPDEST PUSH2 0xD71 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD7D PUSH2 0x337 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD8B JUMPI DUP1 SWAP2 POP JUMPDEST DUP2 ISZERO PUSH2 0x1005 JUMPI PUSH1 0x0 PUSH2 0xD9C DUP4 PUSH2 0x5CF JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT ISZERO PUSH2 0x1003 JUMPI PUSH2 0xDF1 PUSH32 0x0 PUSH32 0x0 DUP6 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH32 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE46 JUMPI PUSH2 0xE46 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH32 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE9A JUMPI PUSH2 0xE9A PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP6 PUSH2 0x2710 PUSH1 0x4 SLOAD PUSH2 0x2710 PUSH2 0xEFD SWAP2 SWAP1 PUSH2 0x191B JUMP JUMPDEST PUSH2 0xF07 SWAP1 DUP8 PUSH2 0x18FC JUMP JUMPDEST PUSH2 0xF11 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST DUP5 DUP13 TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF34 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xF8A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x15F6 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF9C JUMPI PUSH2 0xF9C PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP7 POP DUP4 DUP8 GT PUSH2 0xFF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20697320646973616476616E746167656F75730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x307 JUMP JUMPDEST PUSH2 0xFFF DUP5 DUP7 PUSH2 0x191B JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP JUMPDEST POP POP JUMPDEST DUP1 ISZERO PUSH2 0x1115 JUMPI PUSH2 0x1018 DUP2 DUP5 PUSH2 0x18C2 JUMP JUMPDEST SWAP3 POP PUSH2 0x1065 PUSH32 0x0 PUSH32 0x0 DUP4 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB6B55F25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB6B55F25 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1115 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 POP DUP6 DUP4 PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xA91037BA08E3C8B150648A5AD60512DCEDE6FF057DFB3CB89BBDF11ED528F42C SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1222 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1356 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 SWAP2 SWAP1 DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1286 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12AA SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST LT ISZERO PUSH2 0x1332 JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0x12E0 SWAP1 DUP6 SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x4 ADD PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x130E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1222 SWAP2 SWAP1 PUSH2 0x16BA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1332 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x11EB SWAP3 SWAP2 SWAP1 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13AB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1428 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1332 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13C9 SWAP2 SWAP1 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x1332 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x307 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1437 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x143F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x14A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x307 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x14EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x307 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x150A SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1547 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x154C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x155C DUP3 DUP3 DUP7 PUSH2 0x1567 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1576 JUMPI POP DUP2 PUSH2 0x95E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1586 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x95E DUP2 PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x95E DUP2 PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1646 JUMPI PUSH2 0x1646 PUSH2 0x198A JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x166B JUMPI PUSH2 0x166B PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x168A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x16AD JUMPI DUP1 MLOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x168F JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16FA DUP5 PUSH2 0x15A0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1708 PUSH1 0x20 DUP6 ADD PUSH2 0x15A0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1783 DUP2 PUSH2 0x19A0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x17A0 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1932 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x17E2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x4E6F7420696E2072616E6765 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18A1 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x187C JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18D5 JUMPI PUSH2 0x18D5 PUSH2 0x195E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1916 JUMPI PUSH2 0x1916 PUSH2 0x195E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x192D JUMPI PUSH2 0x192D PUSH2 0x195E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x194D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1935 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1222 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xCA 0xCF CREATE 0x2A JUMP RETURNDATASIZE EXP CALLDATACOPY DUP8 0x4B 0xE5 JUMPI 0x26 DUP3 DUP5 PUSH14 0x2BDC092CA035E4534EA1D57BAAB2 MOD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [485, 8100],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [485, 8100],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [485, 8100],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [485, 8100],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [485, 8100],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [485, 8100],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [485, 8100],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [485, 8100],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x112"
    },
    "25": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [485, 8100],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [485, 8100],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBDCD8FB"
    },
    "38": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x117"
    },
    "42": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0x170F0671"
    },
    "49": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12C"
    },
    "53": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1E828D95"
    },
    "60": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x147"
    },
    "64": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0x34E66B38"
    },
    "71": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "75": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0x36EFD16F"
    },
    "82": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16D"
    },
    "86": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0x383D78E0"
    },
    "93": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x180"
    },
    "97": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0x42EBBE1C"
    },
    "104": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "105": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BF"
    },
    "108": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "109": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4F1455C9"
    },
    "115": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "116": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C7"
    },
    "119": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "120": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0x512B466A"
    },
    "126": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "127": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D0"
    },
    "130": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "131": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6AF66772"
    },
    "137": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "138": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E3"
    },
    "141": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "142": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "148": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "149": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20A"
    },
    "152": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "153": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "154": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "159": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "160": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "163": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "164": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "165": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0x918F8674"
    },
    "170": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "171": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21A"
    },
    "174": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "175": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "176": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA082CCD0"
    },
    "181": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "182": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x223"
    },
    "185": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "186": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "187": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA8AA1B31"
    },
    "192": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "193": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22C"
    },
    "196": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "198": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB6B55F25"
    },
    "203": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "204": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x253"
    },
    "207": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "208": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "209": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB84F7E53"
    },
    "214": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "215": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x266"
    },
    "218": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "219": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "220": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC2F5D97E"
    },
    "225": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "226": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x279"
    },
    "229": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "230": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "231": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF0FA55A9"
    },
    "236": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "237": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x282"
    },
    "240": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "241": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "242": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF13CFF41"
    },
    "247": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "248": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x295"
    },
    "251": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "252": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "253": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "258": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "259": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29E"
    },
    "262": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "263": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "264": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF887EA40"
    },
    "269": {
      "fn": null,
      "offset": [485, 8100],
      "op": "EQ",
      "path": "6"
    },
    "270": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B1"
    },
    "273": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPI",
      "path": "6"
    },
    "274": {
      "fn": null,
      "offset": [485, 8100],
      "op": "JUMPDEST",
      "path": "6"
    },
    "275": {
      "fn": null,
      "offset": [485, 8100],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "277": {
      "fn": null,
      "offset": [485, 8100],
      "op": "DUP1",
      "path": "6"
    },
    "278": {
      "first_revert": true,
      "fn": null,
      "offset": [485, 8100],
      "op": "REVERT",
      "path": "6"
    },
    "279": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1368, 1535],
      "op": "JUMPDEST",
      "path": "6"
    },
    "280": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1368, 1535],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A"
    },
    "283": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1368, 1535],
      "op": "PUSH2",
      "path": "6",
      "value": "0x125"
    },
    "286": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1368, 1535],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "287": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1368, 1535],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "289": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1368, 1535],
      "op": "PUSH2",
      "path": "6",
      "value": "0x172C"
    },
    "292": {
      "fn": "xPTPConvertor.setBuyPercent",
      "jump": "i",
      "offset": [1368, 1535],
      "op": "JUMP",
      "path": "6"
    },
    "293": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1368, 1535],
      "op": "JUMPDEST",
      "path": "6"
    },
    "294": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1368, 1535],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D8"
    },
    "297": {
      "fn": "xPTPConvertor.setBuyPercent",
      "jump": "i",
      "offset": [1368, 1535],
      "op": "JUMP",
      "path": "6"
    },
    "298": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1368, 1535],
      "op": "JUMPDEST",
      "path": "6"
    },
    "299": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1368, 1535],
      "op": "STOP",
      "path": "6"
    },
    "300": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "JUMPDEST",
      "path": "6"
    },
    "301": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "304": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "PUSH2",
      "path": "6",
      "value": "0x337"
    },
    "307": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "jump": "i",
      "offset": [3488, 3943],
      "op": "JUMP",
      "path": "6"
    },
    "308": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "JUMPDEST",
      "path": "6"
    },
    "309": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "311": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "MLOAD",
      "path": "6"
    },
    "312": {
      "op": "SWAP1"
    },
    "313": {
      "op": "DUP2"
    },
    "314": {
      "op": "MSTORE"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "317": {
      "op": "ADD"
    },
    "318": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "JUMPDEST",
      "path": "6"
    },
    "319": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "321": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "MLOAD",
      "path": "6"
    },
    "322": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "DUP1",
      "path": "6"
    },
    "323": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "SWAP2",
      "path": "6"
    },
    "324": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "SUB",
      "path": "6"
    },
    "325": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "SWAP1",
      "path": "6"
    },
    "326": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "RETURN",
      "path": "6"
    },
    "327": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2361, 2920],
      "op": "JUMPDEST",
      "path": "6"
    },
    "328": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2361, 2920],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "331": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2361, 2920],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155"
    },
    "334": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2361, 2920],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "335": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2361, 2920],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "337": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2361, 2920],
      "op": "PUSH2",
      "path": "6",
      "value": "0x172C"
    },
    "340": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "jump": "i",
      "offset": [2361, 2920],
      "op": "JUMP",
      "path": "6"
    },
    "341": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2361, 2920],
      "op": "JUMPDEST",
      "path": "6"
    },
    "342": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2361, 2920],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CF"
    },
    "345": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "jump": "i",
      "offset": [2361, 2920],
      "op": "JUMP",
      "path": "6"
    },
    "346": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4184, 5093],
      "op": "JUMPDEST",
      "path": "6"
    },
    "347": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4184, 5093],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "350": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4184, 5093],
      "op": "PUSH2",
      "path": "6",
      "value": "0x168"
    },
    "353": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4184, 5093],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "354": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4184, 5093],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "356": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4184, 5093],
      "op": "PUSH2",
      "path": "6",
      "value": "0x172C"
    },
    "359": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "i",
      "offset": [4184, 5093],
      "op": "JUMP",
      "path": "6"
    },
    "360": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4184, 5093],
      "op": "JUMPDEST",
      "path": "6"
    },
    "361": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4184, 5093],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8A3"
    },
    "364": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "i",
      "offset": [4184, 5093],
      "op": "JUMP",
      "path": "6"
    },
    "365": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [7917, 8098],
      "op": "JUMPDEST",
      "path": "6"
    },
    "366": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [7917, 8098],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "369": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [7917, 8098],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17B"
    },
    "372": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [7917, 8098],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "373": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [7917, 8098],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "375": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [7917, 8098],
      "op": "PUSH2",
      "path": "6",
      "value": "0x175E"
    },
    "378": {
      "fn": "xPTPConvertor.depositFor",
      "jump": "i",
      "offset": [7917, 8098],
      "op": "JUMP",
      "path": "6"
    },
    "379": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [7917, 8098],
      "op": "JUMPDEST",
      "path": "6"
    },
    "380": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [7917, 8098],
      "op": "PUSH2",
      "path": "6",
      "value": "0x952"
    },
    "383": {
      "fn": "xPTPConvertor.depositFor",
      "jump": "i",
      "offset": [7917, 8098],
      "op": "JUMP",
      "path": "6"
    },
    "384": {
      "offset": [557, 586],
      "op": "JUMPDEST",
      "path": "6"
    },
    "385": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [557, 586],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A7"
    },
    "388": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [557, 586],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "421": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [557, 586],
      "op": "DUP2",
      "path": "6"
    },
    "422": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [557, 586],
      "op": "JUMP",
      "path": "6"
    },
    "423": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [557, 586],
      "op": "JUMPDEST",
      "path": "6"
    },
    "424": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [557, 586],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "426": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [557, 586],
      "op": "MLOAD",
      "path": "6"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "433": {
      "op": "SHL"
    },
    "434": {
      "op": "SUB"
    },
    "435": {
      "op": "SWAP1"
    },
    "436": {
      "op": "SWAP2"
    },
    "437": {
      "op": "AND"
    },
    "438": {
      "op": "DUP2"
    },
    "439": {
      "op": "MSTORE"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "442": {
      "op": "ADD"
    },
    "443": {
      "offset": [557, 586],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13E"
    },
    "446": {
      "op": "JUMP"
    },
    "447": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [1968, 2278],
      "op": "JUMPDEST",
      "path": "6"
    },
    "448": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [1968, 2278],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "451": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [1968, 2278],
      "op": "PUSH2",
      "path": "6",
      "value": "0x965"
    },
    "454": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "jump": "i",
      "offset": [1968, 2278],
      "op": "JUMP",
      "path": "6"
    },
    "455": {
      "offset": [781, 806],
      "op": "JUMPDEST",
      "path": "6"
    },
    "456": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [781, 806],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "459": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [781, 806],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "461": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [781, 806],
      "op": "SLOAD",
      "path": "6"
    },
    "462": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [781, 806],
      "op": "DUP2",
      "path": "6"
    },
    "463": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [781, 806],
      "op": "JUMP",
      "path": "6"
    },
    "464": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1191, 1362],
      "op": "JUMPDEST",
      "path": "6"
    },
    "465": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1191, 1362],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A"
    },
    "468": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1191, 1362],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DE"
    },
    "471": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1191, 1362],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "472": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1191, 1362],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "474": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1191, 1362],
      "op": "PUSH2",
      "path": "6",
      "value": "0x172C"
    },
    "477": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "jump": "i",
      "offset": [1191, 1362],
      "op": "JUMP",
      "path": "6"
    },
    "478": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1191, 1362],
      "op": "JUMPDEST",
      "path": "6"
    },
    "479": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1191, 1362],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB07"
    },
    "482": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "jump": "i",
      "offset": [1191, 1362],
      "op": "JUMP",
      "path": "6"
    },
    "483": {
      "offset": [592, 620],
      "op": "JUMPDEST",
      "path": "6"
    },
    "484": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [592, 620],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A7"
    },
    "487": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [592, 620],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "520": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [592, 620],
      "op": "DUP2",
      "path": "6"
    },
    "521": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [592, 620],
      "op": "JUMP",
      "path": "6"
    },
    "522": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "JUMPDEST",
      "path": "0"
    },
    "523": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A"
    },
    "526": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5D"
    },
    "529": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1668, 1769],
      "op": "JUMP",
      "path": "0"
    },
    "530": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "JUMPDEST",
      "path": "0"
    },
    "531": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A7"
    },
    "534": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB98"
    },
    "537": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [1036, 1121],
      "op": "JUMP",
      "path": "0"
    },
    "538": {
      "offset": [732, 775],
      "op": "JUMPDEST",
      "path": "6"
    },
    "539": {
      "fn": "Ownable.owner",
      "offset": [732, 775],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "542": {
      "offset": [770, 775],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "545": {
      "offset": [732, 775],
      "op": "DUP2",
      "path": "6"
    },
    "546": {
      "fn": "Ownable.owner",
      "offset": [732, 775],
      "op": "JUMP",
      "path": "6"
    },
    "547": {
      "offset": [855, 887],
      "op": "JUMPDEST",
      "path": "6"
    },
    "548": {
      "fn": "Ownable.owner",
      "offset": [855, 887],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "551": {
      "fn": "Ownable.owner",
      "offset": [855, 887],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "553": {
      "fn": "Ownable.owner",
      "offset": [855, 887],
      "op": "SLOAD",
      "path": "6"
    },
    "554": {
      "fn": "Ownable.owner",
      "offset": [855, 887],
      "op": "DUP2",
      "path": "6"
    },
    "555": {
      "fn": "Ownable.owner",
      "offset": [855, 887],
      "op": "JUMP",
      "path": "6"
    },
    "556": {
      "offset": [663, 692],
      "op": "JUMPDEST",
      "path": "6"
    },
    "557": {
      "fn": "Ownable.owner",
      "offset": [663, 692],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A7"
    },
    "560": {
      "fn": "Ownable.owner",
      "offset": [663, 692],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "593": {
      "fn": "Ownable.owner",
      "offset": [663, 692],
      "op": "DUP2",
      "path": "6"
    },
    "594": {
      "fn": "Ownable.owner",
      "offset": [663, 692],
      "op": "JUMP",
      "path": "6"
    },
    "595": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7526, 7676],
      "op": "JUMPDEST",
      "path": "6"
    },
    "596": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7526, 7676],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "599": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7526, 7676],
      "op": "PUSH2",
      "path": "6",
      "value": "0x261"
    },
    "602": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7526, 7676],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "603": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7526, 7676],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "605": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7526, 7676],
      "op": "PUSH2",
      "path": "6",
      "value": "0x172C"
    },
    "608": {
      "fn": "xPTPConvertor.deposit",
      "jump": "i",
      "offset": [7526, 7676],
      "op": "JUMP",
      "path": "6"
    },
    "609": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7526, 7676],
      "op": "JUMPDEST",
      "path": "6"
    },
    "610": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7526, 7676],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBA7"
    },
    "613": {
      "fn": "xPTPConvertor.deposit",
      "jump": "i",
      "offset": [7526, 7676],
      "op": "JUMP",
      "path": "6"
    },
    "614": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1541, 1718],
      "op": "JUMPDEST",
      "path": "6"
    },
    "615": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1541, 1718],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A"
    },
    "618": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1541, 1718],
      "op": "PUSH2",
      "path": "6",
      "value": "0x274"
    },
    "621": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1541, 1718],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "622": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1541, 1718],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "624": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1541, 1718],
      "op": "PUSH2",
      "path": "6",
      "value": "0x172C"
    },
    "627": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "jump": "i",
      "offset": [1541, 1718],
      "op": "JUMP",
      "path": "6"
    },
    "628": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1541, 1718],
      "op": "JUMPDEST",
      "path": "6"
    },
    "629": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1541, 1718],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBB9"
    },
    "632": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "jump": "i",
      "offset": [1541, 1718],
      "op": "JUMP",
      "path": "6"
    },
    "633": {
      "offset": [812, 849],
      "op": "JUMPDEST",
      "path": "6"
    },
    "634": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [812, 849],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "637": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [812, 849],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "639": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [812, 849],
      "op": "SLOAD",
      "path": "6"
    },
    "640": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [812, 849],
      "op": "DUP2",
      "path": "6"
    },
    "641": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [812, 849],
      "op": "JUMP",
      "path": "6"
    },
    "642": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1724, 1890],
      "op": "JUMPDEST",
      "path": "6"
    },
    "643": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1724, 1890],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A"
    },
    "646": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1724, 1890],
      "op": "PUSH2",
      "path": "6",
      "value": "0x290"
    },
    "649": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1724, 1890],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "650": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1724, 1890],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "652": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1724, 1890],
      "op": "PUSH2",
      "path": "6",
      "value": "0x172C"
    },
    "655": {
      "fn": "xPTPConvertor.setSlippage",
      "jump": "i",
      "offset": [1724, 1890],
      "op": "JUMP",
      "path": "6"
    },
    "656": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1724, 1890],
      "op": "JUMPDEST",
      "path": "6"
    },
    "657": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1724, 1890],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC0F"
    },
    "660": {
      "fn": "xPTPConvertor.setSlippage",
      "jump": "i",
      "offset": [1724, 1890],
      "op": "JUMP",
      "path": "6"
    },
    "661": {
      "offset": [699, 726],
      "op": "JUMPDEST",
      "path": "6"
    },
    "662": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [699, 726],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "665": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [699, 726],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "667": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [699, 726],
      "op": "SLOAD",
      "path": "6"
    },
    "668": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [699, 726],
      "op": "DUP2",
      "path": "6"
    },
    "669": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [699, 726],
      "op": "JUMP",
      "path": "6"
    },
    "670": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "0"
    },
    "671": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A"
    },
    "674": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "677": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "678": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "680": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15BC"
    },
    "683": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [1918, 2116],
      "op": "JUMP",
      "path": "0"
    },
    "684": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "0"
    },
    "685": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC65"
    },
    "688": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [1918, 2116],
      "op": "JUMP",
      "path": "0"
    },
    "689": {
      "offset": [626, 657],
      "op": "JUMPDEST",
      "path": "6"
    },
    "690": {
      "fn": "Ownable.transferOwnership",
      "offset": [626, 657],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A7"
    },
    "693": {
      "fn": "Ownable.transferOwnership",
      "offset": [626, 657],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "726": {
      "fn": "Ownable.transferOwnership",
      "offset": [626, 657],
      "op": "DUP2",
      "path": "6"
    },
    "727": {
      "fn": "Ownable.transferOwnership",
      "offset": [626, 657],
      "op": "JUMP",
      "path": "6"
    },
    "728": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1368, 1535],
      "op": "JUMPDEST",
      "path": "6"
    },
    "729": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4",
      "statement": 0
    },
    "730": {
      "offset": [1248, 1255],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E1"
    },
    "733": {
      "offset": [1248, 1253],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB98"
    },
    "736": {
      "jump": "i",
      "offset": [1248, 1255],
      "op": "JUMP",
      "path": "0"
    },
    "737": {
      "fn": "Context._msgSender",
      "offset": [1248, 1255],
      "op": "JUMPDEST",
      "path": "0"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "744": {
      "op": "SHL"
    },
    "745": {
      "op": "SUB"
    },
    "746": {
      "offset": [1248, 1271],
      "op": "AND",
      "path": "0"
    },
    "747": {
      "fn": "Context._msgSender",
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "748": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "751": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "752": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "754": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "755": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "763": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "764": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "766": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "767": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x307"
    },
    "770": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "771": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181C"
    },
    "774": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "775": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "776": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "778": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "779": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "DUP1",
      "path": "0"
    },
    "780": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP2",
      "path": "0"
    },
    "781": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SUB",
      "path": "0"
    },
    "782": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "783": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "784": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "785": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1475, 1480],
      "op": "PUSH2",
      "path": "6",
      "statement": 1,
      "value": "0x2710"
    },
    "788": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1463, 1471],
      "op": "DUP2",
      "path": "6"
    },
    "789": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1463, 1480],
      "op": "GT",
      "path": "6"
    },
    "790": {
      "branch": 50,
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1463, 1480],
      "op": "ISZERO",
      "path": "6"
    },
    "791": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1438, 1497],
      "op": "PUSH2",
      "path": "6",
      "value": "0x332"
    },
    "794": {
      "branch": 50,
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1438, 1497],
      "op": "JUMPI",
      "path": "6"
    },
    "795": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1438, 1497],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "797": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1438, 1497],
      "op": "MLOAD",
      "path": "6"
    },
    "798": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1438, 1497],
      "op": "DUP2",
      "path": "6"
    },
    "806": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1438, 1497],
      "op": "MSTORE",
      "path": "6"
    },
    "807": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1438, 1497],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "809": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1438, 1497],
      "op": "ADD",
      "path": "6"
    },
    "810": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1438, 1497],
      "op": "PUSH2",
      "path": "6",
      "value": "0x307"
    },
    "813": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1438, 1497],
      "op": "SWAP1",
      "path": "6"
    },
    "814": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1438, 1497],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F6"
    },
    "817": {
      "fn": "xPTPConvertor.setBuyPercent",
      "jump": "i",
      "offset": [1438, 1497],
      "op": "JUMP",
      "path": "6"
    },
    "818": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1438, 1497],
      "op": "JUMPDEST",
      "path": "6"
    },
    "819": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1507, 1517],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x2"
    },
    "821": {
      "fn": "xPTPConvertor.setBuyPercent",
      "offset": [1507, 1528],
      "op": "SSTORE",
      "path": "6"
    },
    "822": {
      "fn": "xPTPConvertor.setBuyPercent",
      "jump": "o",
      "offset": [1368, 1535],
      "op": "JUMP",
      "path": "6"
    },
    "823": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "JUMPDEST",
      "path": "6"
    },
    "824": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3535, 3542],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "826": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3555, 3565],
      "op": "DUP1",
      "path": "6"
    },
    "827": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3567, 3577],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "829": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3592, 3596],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "868": {
      "op": "SHL"
    },
    "869": {
      "op": "SUB"
    },
    "870": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3609],
      "op": "AND",
      "path": "6"
    },
    "871": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3609],
      "op": "PUSH4",
      "path": "6",
      "value": "0x902F1AC"
    },
    "876": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "878": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "MLOAD",
      "path": "6"
    },
    "879": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP2",
      "path": "6"
    },
    "880": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "885": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "AND",
      "path": "6"
    },
    "886": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "888": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "SHL",
      "path": "6"
    },
    "889": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP2",
      "path": "6"
    },
    "890": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "MSTORE",
      "path": "6"
    },
    "891": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "893": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "ADD",
      "path": "6"
    },
    "894": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "896": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "898": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "MLOAD",
      "path": "6"
    },
    "899": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP1",
      "path": "6"
    },
    "900": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP4",
      "path": "6"
    },
    "901": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "SUB",
      "path": "6"
    },
    "902": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP2",
      "path": "6"
    },
    "903": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP7",
      "path": "6"
    },
    "904": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP1",
      "path": "6"
    },
    "905": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "906": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "ISZERO",
      "path": "6"
    },
    "907": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP1",
      "path": "6"
    },
    "908": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "ISZERO",
      "path": "6"
    },
    "909": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH2",
      "path": "6",
      "value": "0x395"
    },
    "912": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "JUMPI",
      "path": "6"
    },
    "913": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "915": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP1",
      "path": "6"
    },
    "916": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "REVERT",
      "path": "6"
    },
    "917": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "JUMPDEST",
      "path": "6"
    },
    "918": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "POP",
      "path": "6"
    },
    "919": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "GAS",
      "path": "6"
    },
    "920": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "STATICCALL",
      "path": "6"
    },
    "921": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "ISZERO",
      "path": "6"
    },
    "922": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP1",
      "path": "6"
    },
    "923": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "ISZERO",
      "path": "6"
    },
    "924": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3A9"
    },
    "927": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "JUMPI",
      "path": "6"
    },
    "928": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "929": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "931": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP1",
      "path": "6"
    },
    "932": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "933": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "934": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "936": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "REVERT",
      "path": "6"
    },
    "937": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "JUMPDEST",
      "path": "6"
    },
    "938": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "POP",
      "path": "6"
    },
    "939": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "POP",
      "path": "6"
    },
    "940": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "POP",
      "path": "6"
    },
    "941": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "POP",
      "path": "6"
    },
    "942": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "944": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "MLOAD",
      "path": "6"
    },
    "945": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "946": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "948": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "NOT",
      "path": "6"
    },
    "949": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "951": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP3",
      "path": "6"
    },
    "952": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "ADD",
      "path": "6"
    },
    "953": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "AND",
      "path": "6"
    },
    "954": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP3",
      "path": "6"
    },
    "955": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "ADD",
      "path": "6"
    },
    "956": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP1",
      "path": "6"
    },
    "957": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "959": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "MSTORE",
      "path": "6"
    },
    "960": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "POP",
      "path": "6"
    },
    "961": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "DUP2",
      "path": "6"
    },
    "962": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "ADD",
      "path": "6"
    },
    "963": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "SWAP1",
      "path": "6"
    },
    "964": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CD"
    },
    "967": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "SWAP2",
      "path": "6"
    },
    "968": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "SWAP1",
      "path": "6"
    },
    "969": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16DC"
    },
    "972": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "jump": "i",
      "offset": [3583, 3611],
      "op": "JUMP",
      "path": "6"
    },
    "973": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3583, 3611],
      "op": "JUMPDEST",
      "path": "6"
    },
    "974": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3554, 3611],
      "op": "POP",
      "path": "6"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "981": {
      "op": "SHL"
    },
    "982": {
      "op": "SUB"
    },
    "983": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3554, 3611],
      "op": "AND",
      "path": "6"
    },
    "984": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3554, 3611],
      "op": "SWAP2",
      "path": "6"
    },
    "985": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3554, 3611],
      "op": "POP",
      "path": "6"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "992": {
      "op": "SHL"
    },
    "993": {
      "op": "SUB"
    },
    "994": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3554, 3611],
      "op": "AND",
      "path": "6"
    },
    "995": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3554, 3611],
      "op": "SWAP2",
      "path": "6"
    },
    "996": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3554, 3611],
      "op": "POP",
      "path": "6"
    },
    "997": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3621, 3641],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "999": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3672, 3676],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "SUB"
    },
    "1040": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3676],
      "op": "AND",
      "path": "6"
    },
    "1041": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3654, 3658],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1080": {
      "op": "SHL"
    },
    "1081": {
      "op": "SUB"
    },
    "1082": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3666],
      "op": "AND",
      "path": "6"
    },
    "1083": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3666],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDFE1681"
    },
    "1088": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1090": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "MLOAD",
      "path": "6"
    },
    "1091": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP2",
      "path": "6"
    },
    "1092": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1097": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "AND",
      "path": "6"
    },
    "1098": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "1100": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "SHL",
      "path": "6"
    },
    "1101": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP2",
      "path": "6"
    },
    "1102": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "MSTORE",
      "path": "6"
    },
    "1103": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1105": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "ADD",
      "path": "6"
    },
    "1106": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1108": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1110": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "MLOAD",
      "path": "6"
    },
    "1111": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP1",
      "path": "6"
    },
    "1112": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP4",
      "path": "6"
    },
    "1113": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "SUB",
      "path": "6"
    },
    "1114": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP2",
      "path": "6"
    },
    "1115": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP7",
      "path": "6"
    },
    "1116": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP1",
      "path": "6"
    },
    "1117": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1118": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "ISZERO",
      "path": "6"
    },
    "1119": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP1",
      "path": "6"
    },
    "1120": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "ISZERO",
      "path": "6"
    },
    "1121": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH2",
      "path": "6",
      "value": "0x469"
    },
    "1124": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "JUMPI",
      "path": "6"
    },
    "1125": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1127": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP1",
      "path": "6"
    },
    "1128": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "REVERT",
      "path": "6"
    },
    "1129": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1130": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "POP",
      "path": "6"
    },
    "1131": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "GAS",
      "path": "6"
    },
    "1132": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "STATICCALL",
      "path": "6"
    },
    "1133": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "ISZERO",
      "path": "6"
    },
    "1134": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP1",
      "path": "6"
    },
    "1135": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "ISZERO",
      "path": "6"
    },
    "1136": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH2",
      "path": "6",
      "value": "0x47D"
    },
    "1139": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "JUMPI",
      "path": "6"
    },
    "1140": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1141": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1143": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP1",
      "path": "6"
    },
    "1144": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1145": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1146": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1148": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "REVERT",
      "path": "6"
    },
    "1149": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1150": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "POP",
      "path": "6"
    },
    "1151": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "POP",
      "path": "6"
    },
    "1152": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "POP",
      "path": "6"
    },
    "1153": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "POP",
      "path": "6"
    },
    "1154": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1156": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "MLOAD",
      "path": "6"
    },
    "1157": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1158": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1160": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "NOT",
      "path": "6"
    },
    "1161": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1163": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP3",
      "path": "6"
    },
    "1164": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "ADD",
      "path": "6"
    },
    "1165": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "AND",
      "path": "6"
    },
    "1166": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP3",
      "path": "6"
    },
    "1167": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "ADD",
      "path": "6"
    },
    "1168": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP1",
      "path": "6"
    },
    "1169": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1171": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "MSTORE",
      "path": "6"
    },
    "1172": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "POP",
      "path": "6"
    },
    "1173": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "DUP2",
      "path": "6"
    },
    "1174": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "ADD",
      "path": "6"
    },
    "1175": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "SWAP1",
      "path": "6"
    },
    "1176": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A1"
    },
    "1179": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "SWAP2",
      "path": "6"
    },
    "1180": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "SWAP1",
      "path": "6"
    },
    "1181": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15D9"
    },
    "1184": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "jump": "i",
      "offset": [3645, 3668],
      "op": "JUMP",
      "path": "6"
    },
    "1185": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3668],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1192": {
      "op": "SHL"
    },
    "1193": {
      "op": "SUB"
    },
    "1194": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3676],
      "op": "AND",
      "path": "6"
    },
    "1195": {
      "branch": 51,
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3676],
      "op": "EQ",
      "path": "6"
    },
    "1196": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3686],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B5"
    },
    "1199": {
      "branch": 51,
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3686],
      "op": "JUMPI",
      "path": "6"
    },
    "1200": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3684, 3686],
      "op": "DUP2",
      "path": "6"
    },
    "1201": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3686],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B7"
    },
    "1204": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3686],
      "op": "JUMP",
      "path": "6"
    },
    "1205": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3686],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1206": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3679, 3681],
      "op": "DUP3",
      "path": "6"
    },
    "1207": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3645, 3686],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1208": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3621, 3687],
      "op": "SWAP1",
      "path": "6"
    },
    "1209": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3621, 3687],
      "op": "POP",
      "path": "6"
    },
    "1210": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3697, 3716],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1212": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3747, 3751],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1251": {
      "op": "SHL"
    },
    "1252": {
      "op": "SUB"
    },
    "1253": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3751],
      "op": "AND",
      "path": "6"
    },
    "1254": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3729, 3733],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1293": {
      "op": "SHL"
    },
    "1294": {
      "op": "SUB"
    },
    "1295": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3741],
      "op": "AND",
      "path": "6"
    },
    "1296": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3741],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDFE1681"
    },
    "1301": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1303": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "MLOAD",
      "path": "6"
    },
    "1304": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP2",
      "path": "6"
    },
    "1305": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1310": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "AND",
      "path": "6"
    },
    "1311": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "1313": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "SHL",
      "path": "6"
    },
    "1314": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP2",
      "path": "6"
    },
    "1315": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "MSTORE",
      "path": "6"
    },
    "1316": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1318": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "ADD",
      "path": "6"
    },
    "1319": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1321": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1323": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "MLOAD",
      "path": "6"
    },
    "1324": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP1",
      "path": "6"
    },
    "1325": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP4",
      "path": "6"
    },
    "1326": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "SUB",
      "path": "6"
    },
    "1327": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP2",
      "path": "6"
    },
    "1328": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP7",
      "path": "6"
    },
    "1329": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP1",
      "path": "6"
    },
    "1330": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1331": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "ISZERO",
      "path": "6"
    },
    "1332": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP1",
      "path": "6"
    },
    "1333": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "ISZERO",
      "path": "6"
    },
    "1334": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH2",
      "path": "6",
      "value": "0x53E"
    },
    "1337": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "JUMPI",
      "path": "6"
    },
    "1338": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1340": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP1",
      "path": "6"
    },
    "1341": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "REVERT",
      "path": "6"
    },
    "1342": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1343": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "POP",
      "path": "6"
    },
    "1344": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "GAS",
      "path": "6"
    },
    "1345": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "STATICCALL",
      "path": "6"
    },
    "1346": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "ISZERO",
      "path": "6"
    },
    "1347": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP1",
      "path": "6"
    },
    "1348": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "ISZERO",
      "path": "6"
    },
    "1349": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH2",
      "path": "6",
      "value": "0x552"
    },
    "1352": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "JUMPI",
      "path": "6"
    },
    "1353": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1354": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1356": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP1",
      "path": "6"
    },
    "1357": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1358": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1359": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1361": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "REVERT",
      "path": "6"
    },
    "1362": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1363": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "POP",
      "path": "6"
    },
    "1364": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "POP",
      "path": "6"
    },
    "1365": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "POP",
      "path": "6"
    },
    "1366": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "POP",
      "path": "6"
    },
    "1367": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1369": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "MLOAD",
      "path": "6"
    },
    "1370": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1371": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1373": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "NOT",
      "path": "6"
    },
    "1374": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1376": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP3",
      "path": "6"
    },
    "1377": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "ADD",
      "path": "6"
    },
    "1378": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "AND",
      "path": "6"
    },
    "1379": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP3",
      "path": "6"
    },
    "1380": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "ADD",
      "path": "6"
    },
    "1381": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP1",
      "path": "6"
    },
    "1382": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1384": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "MSTORE",
      "path": "6"
    },
    "1385": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "POP",
      "path": "6"
    },
    "1386": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "DUP2",
      "path": "6"
    },
    "1387": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "ADD",
      "path": "6"
    },
    "1388": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "SWAP1",
      "path": "6"
    },
    "1389": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH2",
      "path": "6",
      "value": "0x576"
    },
    "1392": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "SWAP2",
      "path": "6"
    },
    "1393": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "SWAP1",
      "path": "6"
    },
    "1394": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15D9"
    },
    "1397": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "jump": "i",
      "offset": [3720, 3743],
      "op": "JUMP",
      "path": "6"
    },
    "1398": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3743],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1405": {
      "op": "SHL"
    },
    "1406": {
      "op": "SUB"
    },
    "1407": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3751],
      "op": "AND",
      "path": "6"
    },
    "1408": {
      "branch": 52,
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3751],
      "op": "EQ",
      "path": "6"
    },
    "1409": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3761],
      "op": "PUSH2",
      "path": "6",
      "value": "0x58A"
    },
    "1412": {
      "branch": 52,
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3761],
      "op": "JUMPI",
      "path": "6"
    },
    "1413": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3759, 3761],
      "op": "DUP4",
      "path": "6"
    },
    "1414": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3761],
      "op": "PUSH2",
      "path": "6",
      "value": "0x58C"
    },
    "1417": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3761],
      "op": "JUMP",
      "path": "6"
    },
    "1418": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3761],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1419": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3754, 3756],
      "op": "DUP3",
      "path": "6"
    },
    "1420": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3720, 3761],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1421": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3697, 3762],
      "op": "SWAP1",
      "path": "6"
    },
    "1422": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3697, 3762],
      "op": "POP",
      "path": "6"
    },
    "1423": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3790, 3802],
      "op": "DUP2",
      "path": "6"
    },
    "1424": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3776, 3787],
      "op": "DUP2",
      "path": "6"
    },
    "1425": {
      "branch": 53,
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3776, 3802],
      "op": "GT",
      "path": "6"
    },
    "1426": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3772, 3937],
      "op": "ISZERO",
      "path": "6"
    },
    "1427": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3772, 3937],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A1"
    },
    "1430": {
      "branch": 53,
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3772, 3937],
      "op": "JUMPI",
      "path": "6"
    },
    "1431": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3825, 3826],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x0"
    },
    "1433": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3818, 3826],
      "op": "SWAP5",
      "path": "6"
    },
    "1434": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3818, 3826],
      "op": "POP",
      "path": "6"
    },
    "1435": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3818, 3826],
      "op": "POP",
      "path": "6"
    },
    "1436": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3818, 3826],
      "op": "POP",
      "path": "6"
    },
    "1437": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3818, 3826],
      "op": "POP",
      "path": "6"
    },
    "1438": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3818, 3826],
      "op": "POP",
      "path": "6"
    },
    "1439": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "SWAP1",
      "path": "6"
    },
    "1440": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "jump": "o",
      "offset": [3488, 3943],
      "op": "JUMP",
      "path": "6"
    },
    "1441": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3772, 3937],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1442": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3896, 3911],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x3"
    },
    "1444": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3896, 3911],
      "op": "SLOAD",
      "path": "6"
    },
    "1445": {
      "offset": [770, 775],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "1448": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [770, 775],
      "op": "SWAP1",
      "path": "6"
    },
    "1449": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3866, 3892],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B2"
    },
    "1452": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3881, 3892],
      "op": "DUP4",
      "path": "6"
    },
    "1453": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3866, 3878],
      "op": "DUP6",
      "path": "6"
    },
    "1454": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3866, 3892],
      "op": "PUSH2",
      "path": "6",
      "value": "0x191B"
    },
    "1457": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "jump": "i",
      "offset": [3866, 3892],
      "op": "JUMP",
      "path": "6"
    },
    "1458": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3866, 3892],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1459": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3865, 3911],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5BC"
    },
    "1462": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3865, 3911],
      "op": "SWAP2",
      "path": "6"
    },
    "1463": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3865, 3911],
      "op": "SWAP1",
      "path": "6"
    },
    "1464": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3865, 3911],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18FC"
    },
    "1467": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "jump": "i",
      "offset": [3865, 3911],
      "op": "JUMP",
      "path": "6"
    },
    "1468": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3865, 3911],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1469": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3864, 3926],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5C6"
    },
    "1472": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3864, 3926],
      "op": "SWAP2",
      "path": "6"
    },
    "1473": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3864, 3926],
      "op": "SWAP1",
      "path": "6"
    },
    "1474": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3864, 3926],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18DA"
    },
    "1477": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "jump": "i",
      "offset": [3864, 3926],
      "op": "JUMP",
      "path": "6"
    },
    "1478": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3864, 3926],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1479": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3857, 3926],
      "op": "SWAP5",
      "path": "6"
    },
    "1480": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3857, 3926],
      "op": "POP",
      "path": "6"
    },
    "1481": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3857, 3926],
      "op": "POP",
      "path": "6"
    },
    "1482": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3857, 3926],
      "op": "POP",
      "path": "6"
    },
    "1483": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3857, 3926],
      "op": "POP",
      "path": "6"
    },
    "1484": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3857, 3926],
      "op": "POP",
      "path": "6"
    },
    "1485": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "offset": [3488, 3943],
      "op": "SWAP1",
      "path": "6"
    },
    "1486": {
      "fn": "xPTPConvertor.maxAmountToBuy",
      "jump": "o",
      "offset": [3488, 3943],
      "op": "JUMP",
      "path": "6"
    },
    "1487": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2361, 2920],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1488": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2429, 2446],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1490": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2459, 2469],
      "op": "DUP1",
      "path": "6"
    },
    "1491": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2471, 2481],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1493": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2496, 2500],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1532": {
      "op": "SHL"
    },
    "1533": {
      "op": "SUB"
    },
    "1534": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2513],
      "op": "AND",
      "path": "6"
    },
    "1535": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2513],
      "op": "PUSH4",
      "path": "6",
      "value": "0x902F1AC"
    },
    "1540": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1542": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "MLOAD",
      "path": "6"
    },
    "1543": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP2",
      "path": "6"
    },
    "1544": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1549": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "AND",
      "path": "6"
    },
    "1550": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "1552": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "SHL",
      "path": "6"
    },
    "1553": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP2",
      "path": "6"
    },
    "1554": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "MSTORE",
      "path": "6"
    },
    "1555": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1557": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "ADD",
      "path": "6"
    },
    "1558": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1560": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1562": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "MLOAD",
      "path": "6"
    },
    "1563": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP1",
      "path": "6"
    },
    "1564": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP4",
      "path": "6"
    },
    "1565": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "SUB",
      "path": "6"
    },
    "1566": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP2",
      "path": "6"
    },
    "1567": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP7",
      "path": "6"
    },
    "1568": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP1",
      "path": "6"
    },
    "1569": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1570": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "ISZERO",
      "path": "6"
    },
    "1571": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP1",
      "path": "6"
    },
    "1572": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "ISZERO",
      "path": "6"
    },
    "1573": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH2",
      "path": "6",
      "value": "0x62D"
    },
    "1576": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "JUMPI",
      "path": "6"
    },
    "1577": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1579": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP1",
      "path": "6"
    },
    "1580": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "REVERT",
      "path": "6"
    },
    "1581": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1582": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "POP",
      "path": "6"
    },
    "1583": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "GAS",
      "path": "6"
    },
    "1584": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "STATICCALL",
      "path": "6"
    },
    "1585": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "ISZERO",
      "path": "6"
    },
    "1586": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP1",
      "path": "6"
    },
    "1587": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "ISZERO",
      "path": "6"
    },
    "1588": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH2",
      "path": "6",
      "value": "0x641"
    },
    "1591": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "JUMPI",
      "path": "6"
    },
    "1592": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1593": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1595": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP1",
      "path": "6"
    },
    "1596": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1597": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1598": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1600": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "REVERT",
      "path": "6"
    },
    "1601": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1602": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "POP",
      "path": "6"
    },
    "1603": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "POP",
      "path": "6"
    },
    "1604": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "POP",
      "path": "6"
    },
    "1605": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "POP",
      "path": "6"
    },
    "1606": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1608": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "MLOAD",
      "path": "6"
    },
    "1609": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1610": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1612": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "NOT",
      "path": "6"
    },
    "1613": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1615": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP3",
      "path": "6"
    },
    "1616": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "ADD",
      "path": "6"
    },
    "1617": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "AND",
      "path": "6"
    },
    "1618": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP3",
      "path": "6"
    },
    "1619": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "ADD",
      "path": "6"
    },
    "1620": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP1",
      "path": "6"
    },
    "1621": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1623": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "MSTORE",
      "path": "6"
    },
    "1624": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "POP",
      "path": "6"
    },
    "1625": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "DUP2",
      "path": "6"
    },
    "1626": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "ADD",
      "path": "6"
    },
    "1627": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "SWAP1",
      "path": "6"
    },
    "1628": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH2",
      "path": "6",
      "value": "0x665"
    },
    "1631": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "SWAP2",
      "path": "6"
    },
    "1632": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "SWAP1",
      "path": "6"
    },
    "1633": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16DC"
    },
    "1636": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "jump": "i",
      "offset": [2487, 2515],
      "op": "JUMP",
      "path": "6"
    },
    "1637": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2487, 2515],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1638": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2458, 2515],
      "op": "POP",
      "path": "6"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "op": "SUB"
    },
    "1647": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2458, 2515],
      "op": "AND",
      "path": "6"
    },
    "1648": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2458, 2515],
      "op": "SWAP2",
      "path": "6"
    },
    "1649": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2458, 2515],
      "op": "POP",
      "path": "6"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1656": {
      "op": "SHL"
    },
    "1657": {
      "op": "SUB"
    },
    "1658": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2458, 2515],
      "op": "AND",
      "path": "6"
    },
    "1659": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2458, 2515],
      "op": "SWAP2",
      "path": "6"
    },
    "1660": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2458, 2515],
      "op": "POP",
      "path": "6"
    },
    "1661": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2556, 2560],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1700": {
      "op": "SHL"
    },
    "1701": {
      "op": "SUB"
    },
    "1702": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2560],
      "op": "AND",
      "path": "6"
    },
    "1703": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2538, 2542],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1742": {
      "op": "SHL"
    },
    "1743": {
      "op": "SUB"
    },
    "1744": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2550],
      "op": "AND",
      "path": "6"
    },
    "1745": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2550],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD21220A7"
    },
    "1750": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1752": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "MLOAD",
      "path": "6"
    },
    "1753": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP2",
      "path": "6"
    },
    "1754": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1759": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "AND",
      "path": "6"
    },
    "1760": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "1762": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "SHL",
      "path": "6"
    },
    "1763": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP2",
      "path": "6"
    },
    "1764": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "MSTORE",
      "path": "6"
    },
    "1765": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1767": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "ADD",
      "path": "6"
    },
    "1768": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1770": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1772": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "MLOAD",
      "path": "6"
    },
    "1773": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP1",
      "path": "6"
    },
    "1774": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP4",
      "path": "6"
    },
    "1775": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "SUB",
      "path": "6"
    },
    "1776": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP2",
      "path": "6"
    },
    "1777": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP7",
      "path": "6"
    },
    "1778": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP1",
      "path": "6"
    },
    "1779": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1780": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "ISZERO",
      "path": "6"
    },
    "1781": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP1",
      "path": "6"
    },
    "1782": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "ISZERO",
      "path": "6"
    },
    "1783": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6FF"
    },
    "1786": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "JUMPI",
      "path": "6"
    },
    "1787": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1789": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP1",
      "path": "6"
    },
    "1790": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "REVERT",
      "path": "6"
    },
    "1791": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1792": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "POP",
      "path": "6"
    },
    "1793": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "GAS",
      "path": "6"
    },
    "1794": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "STATICCALL",
      "path": "6"
    },
    "1795": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "ISZERO",
      "path": "6"
    },
    "1796": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP1",
      "path": "6"
    },
    "1797": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "ISZERO",
      "path": "6"
    },
    "1798": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH2",
      "path": "6",
      "value": "0x713"
    },
    "1801": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "JUMPI",
      "path": "6"
    },
    "1802": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1803": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1805": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP1",
      "path": "6"
    },
    "1806": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1807": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1808": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1810": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "REVERT",
      "path": "6"
    },
    "1811": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1812": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "POP",
      "path": "6"
    },
    "1813": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "POP",
      "path": "6"
    },
    "1814": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "POP",
      "path": "6"
    },
    "1815": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "POP",
      "path": "6"
    },
    "1816": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1818": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "MLOAD",
      "path": "6"
    },
    "1819": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1820": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1822": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "NOT",
      "path": "6"
    },
    "1823": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1825": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP3",
      "path": "6"
    },
    "1826": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "ADD",
      "path": "6"
    },
    "1827": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "AND",
      "path": "6"
    },
    "1828": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP3",
      "path": "6"
    },
    "1829": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "ADD",
      "path": "6"
    },
    "1830": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP1",
      "path": "6"
    },
    "1831": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1833": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "MSTORE",
      "path": "6"
    },
    "1834": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "POP",
      "path": "6"
    },
    "1835": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "DUP2",
      "path": "6"
    },
    "1836": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "ADD",
      "path": "6"
    },
    "1837": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "SWAP1",
      "path": "6"
    },
    "1838": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH2",
      "path": "6",
      "value": "0x737"
    },
    "1841": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "SWAP2",
      "path": "6"
    },
    "1842": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "SWAP1",
      "path": "6"
    },
    "1843": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15D9"
    },
    "1846": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "jump": "i",
      "offset": [2529, 2552],
      "op": "JUMP",
      "path": "6"
    },
    "1847": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2552],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1854": {
      "op": "SHL"
    },
    "1855": {
      "op": "SUB"
    },
    "1856": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2560],
      "op": "AND",
      "path": "6"
    },
    "1857": {
      "branch": 54,
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2529, 2560],
      "op": "EQ",
      "path": "6"
    },
    "1858": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2525, 2914],
      "op": "ISZERO",
      "path": "6"
    },
    "1859": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2525, 2914],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F3"
    },
    "1862": {
      "branch": 54,
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2525, 2914],
      "op": "JUMPI",
      "path": "6"
    },
    "1863": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x40"
    },
    "1865": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "MLOAD",
      "path": "6"
    },
    "1866": {
      "op": "PUSH4",
      "value": "0x1535435"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1873": {
      "op": "SHL"
    },
    "1874": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP2",
      "path": "6"
    },
    "1875": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "MSTORE",
      "path": "6"
    },
    "1876": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1878": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP2",
      "path": "6"
    },
    "1879": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "ADD",
      "path": "6"
    },
    "1880": {
      "op": "DUP6"
    },
    "1881": {
      "op": "SWAP1"
    },
    "1882": {
      "op": "MSTORE"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1885": {
      "op": "DUP2"
    },
    "1886": {
      "op": "ADD"
    },
    "1887": {
      "op": "DUP4"
    },
    "1888": {
      "op": "SWAP1"
    },
    "1889": {
      "op": "MSTORE"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1892": {
      "op": "DUP2"
    },
    "1893": {
      "op": "ADD"
    },
    "1894": {
      "op": "DUP3"
    },
    "1895": {
      "op": "SWAP1"
    },
    "1896": {
      "op": "MSTORE"
    },
    "1897": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2601, 2607],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1936": {
      "op": "SHL"
    },
    "1937": {
      "op": "SUB"
    },
    "1938": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2621],
      "op": "AND",
      "path": "6"
    },
    "1939": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2621],
      "op": "SWAP1",
      "path": "6"
    },
    "1940": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2621],
      "op": "PUSH4",
      "path": "6",
      "value": "0x54D50D4"
    },
    "1945": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2621],
      "op": "SWAP1",
      "path": "6"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1948": {
      "op": "ADD"
    },
    "1949": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1951": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1953": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "MLOAD",
      "path": "6"
    },
    "1954": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP1",
      "path": "6"
    },
    "1955": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP4",
      "path": "6"
    },
    "1956": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "SUB",
      "path": "6"
    },
    "1957": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP2",
      "path": "6"
    },
    "1958": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP7",
      "path": "6"
    },
    "1959": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP1",
      "path": "6"
    },
    "1960": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1961": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "ISZERO",
      "path": "6"
    },
    "1962": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP1",
      "path": "6"
    },
    "1963": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "ISZERO",
      "path": "6"
    },
    "1964": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7B4"
    },
    "1967": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "JUMPI",
      "path": "6"
    },
    "1968": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1970": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP1",
      "path": "6"
    },
    "1971": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "REVERT",
      "path": "6"
    },
    "1972": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1973": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "POP",
      "path": "6"
    },
    "1974": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "GAS",
      "path": "6"
    },
    "1975": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "STATICCALL",
      "path": "6"
    },
    "1976": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "ISZERO",
      "path": "6"
    },
    "1977": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP1",
      "path": "6"
    },
    "1978": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "ISZERO",
      "path": "6"
    },
    "1979": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C8"
    },
    "1982": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "JUMPI",
      "path": "6"
    },
    "1983": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1984": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1986": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP1",
      "path": "6"
    },
    "1987": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1988": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1989": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1991": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "REVERT",
      "path": "6"
    },
    "1992": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1993": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "POP",
      "path": "6"
    },
    "1994": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "POP",
      "path": "6"
    },
    "1995": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "POP",
      "path": "6"
    },
    "1996": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "POP",
      "path": "6"
    },
    "1997": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1999": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "MLOAD",
      "path": "6"
    },
    "2000": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2001": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2003": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "NOT",
      "path": "6"
    },
    "2004": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2006": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP3",
      "path": "6"
    },
    "2007": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "ADD",
      "path": "6"
    },
    "2008": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "AND",
      "path": "6"
    },
    "2009": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP3",
      "path": "6"
    },
    "2010": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "ADD",
      "path": "6"
    },
    "2011": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP1",
      "path": "6"
    },
    "2012": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2014": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "MSTORE",
      "path": "6"
    },
    "2015": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "POP",
      "path": "6"
    },
    "2016": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "DUP2",
      "path": "6"
    },
    "2017": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "ADD",
      "path": "6"
    },
    "2018": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "SWAP1",
      "path": "6"
    },
    "2019": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7EC"
    },
    "2022": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "SWAP2",
      "path": "6"
    },
    "2023": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "SWAP1",
      "path": "6"
    },
    "2024": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1745"
    },
    "2027": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "jump": "i",
      "offset": [2588, 2641],
      "op": "JUMP",
      "path": "6"
    },
    "2028": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2588, 2641],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2029": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2576, 2641],
      "op": "SWAP3",
      "path": "6"
    },
    "2030": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2576, 2641],
      "op": "POP",
      "path": "6"
    },
    "2031": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2525, 2914],
      "op": "PUSH2",
      "path": "6",
      "value": "0x89C"
    },
    "2034": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2525, 2914],
      "op": "JUMP",
      "path": "6"
    },
    "2035": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2525, 2914],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2036": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x40"
    },
    "2038": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "MLOAD",
      "path": "6"
    },
    "2039": {
      "op": "PUSH4",
      "value": "0x1535435"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2046": {
      "op": "SHL"
    },
    "2047": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP2",
      "path": "6"
    },
    "2048": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "MSTORE",
      "path": "6"
    },
    "2049": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2051": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP2",
      "path": "6"
    },
    "2052": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "ADD",
      "path": "6"
    },
    "2053": {
      "op": "DUP6"
    },
    "2054": {
      "op": "SWAP1"
    },
    "2055": {
      "op": "MSTORE"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2058": {
      "op": "DUP2"
    },
    "2059": {
      "op": "ADD"
    },
    "2060": {
      "op": "DUP3"
    },
    "2061": {
      "op": "SWAP1"
    },
    "2062": {
      "op": "MSTORE"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2065": {
      "op": "DUP2"
    },
    "2066": {
      "op": "ADD"
    },
    "2067": {
      "op": "DUP4"
    },
    "2068": {
      "op": "SWAP1"
    },
    "2069": {
      "op": "MSTORE"
    },
    "2070": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2780, 2786],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "op": "SUB"
    },
    "2111": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2800],
      "op": "AND",
      "path": "6"
    },
    "2112": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2800],
      "op": "SWAP1",
      "path": "6"
    },
    "2113": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2800],
      "op": "PUSH4",
      "path": "6",
      "value": "0x54D50D4"
    },
    "2118": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2800],
      "op": "SWAP1",
      "path": "6"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2121": {
      "op": "ADD"
    },
    "2122": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2124": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2126": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "MLOAD",
      "path": "6"
    },
    "2127": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP1",
      "path": "6"
    },
    "2128": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP4",
      "path": "6"
    },
    "2129": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "SUB",
      "path": "6"
    },
    "2130": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP2",
      "path": "6"
    },
    "2131": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP7",
      "path": "6"
    },
    "2132": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP1",
      "path": "6"
    },
    "2133": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2134": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "ISZERO",
      "path": "6"
    },
    "2135": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP1",
      "path": "6"
    },
    "2136": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "ISZERO",
      "path": "6"
    },
    "2137": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH2",
      "path": "6",
      "value": "0x861"
    },
    "2140": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "JUMPI",
      "path": "6"
    },
    "2141": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2143": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP1",
      "path": "6"
    },
    "2144": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "REVERT",
      "path": "6"
    },
    "2145": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2146": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "POP",
      "path": "6"
    },
    "2147": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "GAS",
      "path": "6"
    },
    "2148": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "STATICCALL",
      "path": "6"
    },
    "2149": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "ISZERO",
      "path": "6"
    },
    "2150": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP1",
      "path": "6"
    },
    "2151": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "ISZERO",
      "path": "6"
    },
    "2152": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH2",
      "path": "6",
      "value": "0x875"
    },
    "2155": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "JUMPI",
      "path": "6"
    },
    "2156": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2157": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2159": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP1",
      "path": "6"
    },
    "2160": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2161": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2162": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2164": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "REVERT",
      "path": "6"
    },
    "2165": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2166": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "POP",
      "path": "6"
    },
    "2167": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "POP",
      "path": "6"
    },
    "2168": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "POP",
      "path": "6"
    },
    "2169": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "POP",
      "path": "6"
    },
    "2170": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2172": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "MLOAD",
      "path": "6"
    },
    "2173": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2174": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2176": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "NOT",
      "path": "6"
    },
    "2177": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2179": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP3",
      "path": "6"
    },
    "2180": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "ADD",
      "path": "6"
    },
    "2181": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "AND",
      "path": "6"
    },
    "2182": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP3",
      "path": "6"
    },
    "2183": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "ADD",
      "path": "6"
    },
    "2184": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP1",
      "path": "6"
    },
    "2185": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2187": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "MSTORE",
      "path": "6"
    },
    "2188": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "POP",
      "path": "6"
    },
    "2189": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "DUP2",
      "path": "6"
    },
    "2190": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "ADD",
      "path": "6"
    },
    "2191": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "SWAP1",
      "path": "6"
    },
    "2192": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH2",
      "path": "6",
      "value": "0x899"
    },
    "2195": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "SWAP2",
      "path": "6"
    },
    "2196": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "SWAP1",
      "path": "6"
    },
    "2197": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1745"
    },
    "2200": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "jump": "i",
      "offset": [2767, 2820],
      "op": "JUMP",
      "path": "6"
    },
    "2201": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2767, 2820],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2202": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2755, 2820],
      "op": "SWAP3",
      "path": "6"
    },
    "2203": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2755, 2820],
      "op": "POP",
      "path": "6"
    },
    "2204": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2525, 2914],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2205": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2448, 2920],
      "op": "POP",
      "path": "6"
    },
    "2206": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2448, 2920],
      "op": "POP",
      "path": "6"
    },
    "2207": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2361, 2920],
      "op": "SWAP2",
      "path": "6"
    },
    "2208": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2361, 2920],
      "op": "SWAP1",
      "path": "6"
    },
    "2209": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "offset": [2361, 2920],
      "op": "POP",
      "path": "6"
    },
    "2210": {
      "fn": "xPTPConvertor.estimateOutAmount",
      "jump": "o",
      "offset": [2361, 2920],
      "op": "JUMP",
      "path": "6"
    },
    "2211": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4184, 5093],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2212": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4281, 4310],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2214": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4326, 4343],
      "op": "DUP1",
      "path": "6"
    },
    "2215": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4346, 4360],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8AE"
    },
    "2218": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4346, 4358],
      "op": "PUSH2",
      "path": "6",
      "value": "0x965"
    },
    "2221": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "i",
      "offset": [4346, 4360],
      "op": "JUMP",
      "path": "6"
    },
    "2222": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4346, 4360],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2223": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4326, 4360],
      "op": "SWAP1",
      "path": "6"
    },
    "2224": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4326, 4360],
      "op": "POP",
      "path": "6"
    },
    "2225": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4394, 4401],
      "op": "DUP3",
      "path": "6",
      "statement": 7
    },
    "2226": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4370, 4401],
      "op": "SWAP2",
      "path": "6"
    },
    "2227": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4370, 4401],
      "op": "POP",
      "path": "6"
    },
    "2228": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4428, 4440],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2230": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4428, 4440],
      "op": "SLOAD",
      "path": "6"
    },
    "2231": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4415, 4424],
      "op": "DUP2",
      "path": "6"
    },
    "2232": {
      "branch": 55,
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4415, 4440],
      "op": "GT",
      "path": "6"
    },
    "2233": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4411, 5087],
      "op": "PUSH2",
      "path": "6",
      "value": "0x94C"
    },
    "2236": {
      "branch": 55,
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4411, 5087],
      "op": "JUMPI",
      "path": "6"
    },
    "2237": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4456, 4475],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2239": {
      "offset": [770, 775],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "2242": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4503, 4513],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2244": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4503, 4513],
      "op": "SLOAD",
      "path": "6"
    },
    "2245": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4479, 4500],
      "op": "DUP5",
      "path": "6"
    },
    "2246": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4479, 4513],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8CF"
    },
    "2249": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4479, 4513],
      "op": "SWAP2",
      "path": "6"
    },
    "2250": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4479, 4513],
      "op": "SWAP1",
      "path": "6"
    },
    "2251": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4479, 4513],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18FC"
    },
    "2254": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "i",
      "offset": [4479, 4513],
      "op": "JUMP",
      "path": "6"
    },
    "2255": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4479, 4513],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2256": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4478, 4528],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8D9"
    },
    "2259": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4478, 4528],
      "op": "SWAP2",
      "path": "6"
    },
    "2260": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4478, 4528],
      "op": "SWAP1",
      "path": "6"
    },
    "2261": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4478, 4528],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18DA"
    },
    "2264": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "i",
      "offset": [4478, 4528],
      "op": "JUMP",
      "path": "6"
    },
    "2265": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4478, 4528],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2266": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4456, 4528],
      "op": "SWAP1",
      "path": "6"
    },
    "2267": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4456, 4528],
      "op": "POP",
      "path": "6"
    },
    "2268": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4542, 4579],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2270": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4582, 4598],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8E5"
    },
    "2273": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4582, 4596],
      "op": "PUSH2",
      "path": "6",
      "value": "0x337"
    },
    "2276": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "i",
      "offset": [4582, 4598],
      "op": "JUMP",
      "path": "6"
    },
    "2277": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4582, 4598],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2278": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4542, 4598],
      "op": "SWAP1",
      "path": "6"
    },
    "2279": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4542, 4598],
      "op": "POP",
      "path": "6"
    },
    "2280": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4630, 4659],
      "op": "DUP1",
      "path": "6"
    },
    "2281": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4616, 4627],
      "op": "DUP3",
      "path": "6"
    },
    "2282": {
      "branch": 56,
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4616, 4659],
      "op": "GT",
      "path": "6"
    },
    "2283": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4612, 4737],
      "op": "ISZERO",
      "path": "6"
    },
    "2284": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4612, 4737],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F3"
    },
    "2287": {
      "branch": 56,
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4612, 4737],
      "op": "JUMPI",
      "path": "6"
    },
    "2288": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4693, 4722],
      "op": "DUP1",
      "path": "6",
      "statement": 8
    },
    "2289": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4679, 4722],
      "op": "SWAP2",
      "path": "6"
    },
    "2290": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4679, 4722],
      "op": "POP",
      "path": "6"
    },
    "2291": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4612, 4737],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2292": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4750, 4776],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2294": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4779, 4809],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FE"
    },
    "2297": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4797, 4808],
      "op": "DUP4",
      "path": "6"
    },
    "2298": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4779, 4796],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CF"
    },
    "2301": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "i",
      "offset": [4779, 4809],
      "op": "JUMP",
      "path": "6"
    },
    "2302": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4779, 4809],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2303": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4750, 4809],
      "op": "SWAP1",
      "path": "6"
    },
    "2304": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4750, 4809],
      "op": "POP",
      "path": "6"
    },
    "2305": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4841, 4859],
      "op": "DUP1",
      "path": "6"
    },
    "2306": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4827, 4838],
      "op": "DUP4",
      "path": "6"
    },
    "2307": {
      "branch": 57,
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4827, 4859],
      "op": "LT",
      "path": "6"
    },
    "2308": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4823, 5077],
      "op": "ISZERO",
      "path": "6"
    },
    "2309": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4823, 5077],
      "op": "PUSH2",
      "path": "6",
      "value": "0x948"
    },
    "2312": {
      "branch": 57,
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4823, 5077],
      "op": "JUMPI",
      "path": "6"
    },
    "2313": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4879, 4915],
      "op": "PUSH2",
      "path": "6",
      "statement": 9,
      "value": "0x912"
    },
    "2316": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4904, 4915],
      "op": "DUP4",
      "path": "6"
    },
    "2317": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4879, 4915],
      "op": "DUP7",
      "path": "6"
    },
    "2318": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4879, 4915],
      "op": "PUSH2",
      "path": "6",
      "value": "0x191B"
    },
    "2321": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "i",
      "offset": [4879, 4915],
      "op": "JUMP",
      "path": "6"
    },
    "2322": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4879, 4915],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2323": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4879, 4915],
      "op": "SWAP5",
      "path": "6"
    },
    "2324": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4879, 4915],
      "op": "POP",
      "path": "6"
    },
    "2325": {
      "offset": [770, 775],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "2328": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [5015, 5026],
      "op": "PUSH1",
      "path": "6",
      "statement": 10,
      "value": "0x4"
    },
    "2330": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [5015, 5026],
      "op": "SLOAD",
      "path": "6"
    },
    "2331": {
      "offset": [770, 775],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "2334": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [5001, 5026],
      "op": "PUSH2",
      "path": "6",
      "value": "0x927"
    },
    "2337": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [5001, 5026],
      "op": "SWAP2",
      "path": "6"
    },
    "2338": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [5001, 5026],
      "op": "SWAP1",
      "path": "6"
    },
    "2339": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [5001, 5026],
      "op": "PUSH2",
      "path": "6",
      "value": "0x191B"
    },
    "2342": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "i",
      "offset": [5001, 5026],
      "op": "JUMP",
      "path": "6"
    },
    "2343": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [5001, 5026],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2344": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4979, 5027],
      "op": "PUSH2",
      "path": "6",
      "value": "0x931"
    },
    "2347": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4979, 5027],
      "op": "SWAP1",
      "path": "6"
    },
    "2348": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4979, 4997],
      "op": "DUP4",
      "path": "6"
    },
    "2349": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4979, 5027],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18FC"
    },
    "2352": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "i",
      "offset": [4979, 5027],
      "op": "JUMP",
      "path": "6"
    },
    "2353": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4979, 5027],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2354": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4978, 5062],
      "op": "PUSH2",
      "path": "6",
      "value": "0x93B"
    },
    "2357": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4978, 5062],
      "op": "SWAP2",
      "path": "6"
    },
    "2358": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4978, 5062],
      "op": "SWAP1",
      "path": "6"
    },
    "2359": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4978, 5062],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18DA"
    },
    "2362": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "i",
      "offset": [4978, 5062],
      "op": "JUMP",
      "path": "6"
    },
    "2363": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4978, 5062],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2364": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4933, 5062],
      "op": "PUSH2",
      "path": "6",
      "value": "0x945"
    },
    "2367": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4933, 5062],
      "op": "SWAP1",
      "path": "6"
    },
    "2368": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4933, 5062],
      "op": "DUP7",
      "path": "6"
    },
    "2369": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4933, 5062],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18C2"
    },
    "2372": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "i",
      "offset": [4933, 5062],
      "op": "JUMP",
      "path": "6"
    },
    "2373": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4933, 5062],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2374": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4933, 5062],
      "op": "SWAP5",
      "path": "6"
    },
    "2375": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4933, 5062],
      "op": "POP",
      "path": "6"
    },
    "2376": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4823, 5077],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2377": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4442, 5087],
      "op": "POP",
      "path": "6"
    },
    "2378": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4442, 5087],
      "op": "POP",
      "path": "6"
    },
    "2379": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4442, 5087],
      "op": "POP",
      "path": "6"
    },
    "2380": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4411, 5087],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2381": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4316, 5093],
      "op": "POP",
      "path": "6"
    },
    "2382": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4184, 5093],
      "op": "SWAP2",
      "path": "6"
    },
    "2383": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4184, 5093],
      "op": "SWAP1",
      "path": "6"
    },
    "2384": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "offset": [4184, 5093],
      "op": "POP",
      "path": "6"
    },
    "2385": {
      "fn": "xPTPConvertor.estimateTotalConversion",
      "jump": "o",
      "offset": [4184, 5093],
      "op": "JUMP",
      "path": "6"
    },
    "2386": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [7917, 8098],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2387": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [8002, 8028],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2389": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [8065, 8091],
      "op": "PUSH2",
      "path": "6",
      "statement": 11,
      "value": "0x95E"
    },
    "2392": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [8077, 8084],
      "op": "DUP4",
      "path": "6"
    },
    "2393": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [8086, 8090],
      "op": "DUP4",
      "path": "6"
    },
    "2394": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [8065, 8076],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD05"
    },
    "2397": {
      "fn": "xPTPConvertor.depositFor",
      "jump": "i",
      "offset": [8065, 8091],
      "op": "JUMP",
      "path": "6"
    },
    "2398": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [8065, 8091],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2399": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [8044, 8091],
      "op": "SWAP4",
      "path": "6"
    },
    "2400": {
      "fn": "xPTPConvertor.depositFor",
      "offset": [7917, 8098],
      "op": "SWAP3",
      "path": "6"
    },
    "2401": {
      "op": "POP"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "op": "POP"
    },
    "2404": {
      "fn": "xPTPConvertor.depositFor",
      "jump": "o",
      "offset": [7917, 8098],
      "op": "JUMP",
      "path": "6"
    },
    "2405": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [1968, 2278],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2406": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2013, 2030],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2408": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2043, 2053],
      "op": "DUP1",
      "path": "6"
    },
    "2409": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2055, 2065],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2411": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2080, 2084],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2450": {
      "op": "SHL"
    },
    "2451": {
      "op": "SUB"
    },
    "2452": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2097],
      "op": "AND",
      "path": "6"
    },
    "2453": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2097],
      "op": "PUSH4",
      "path": "6",
      "value": "0x902F1AC"
    },
    "2458": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2460": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "MLOAD",
      "path": "6"
    },
    "2461": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP2",
      "path": "6"
    },
    "2462": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2467": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "AND",
      "path": "6"
    },
    "2468": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2470": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "SHL",
      "path": "6"
    },
    "2471": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP2",
      "path": "6"
    },
    "2472": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "MSTORE",
      "path": "6"
    },
    "2473": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2475": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "ADD",
      "path": "6"
    },
    "2476": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2478": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2480": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "MLOAD",
      "path": "6"
    },
    "2481": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP1",
      "path": "6"
    },
    "2482": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP4",
      "path": "6"
    },
    "2483": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "SUB",
      "path": "6"
    },
    "2484": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP2",
      "path": "6"
    },
    "2485": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP7",
      "path": "6"
    },
    "2486": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP1",
      "path": "6"
    },
    "2487": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2488": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "ISZERO",
      "path": "6"
    },
    "2489": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP1",
      "path": "6"
    },
    "2490": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "ISZERO",
      "path": "6"
    },
    "2491": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9C3"
    },
    "2494": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "JUMPI",
      "path": "6"
    },
    "2495": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2497": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP1",
      "path": "6"
    },
    "2498": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "REVERT",
      "path": "6"
    },
    "2499": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2500": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "POP",
      "path": "6"
    },
    "2501": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "GAS",
      "path": "6"
    },
    "2502": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "STATICCALL",
      "path": "6"
    },
    "2503": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "ISZERO",
      "path": "6"
    },
    "2504": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP1",
      "path": "6"
    },
    "2505": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "ISZERO",
      "path": "6"
    },
    "2506": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9D7"
    },
    "2509": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "JUMPI",
      "path": "6"
    },
    "2510": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2511": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2513": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP1",
      "path": "6"
    },
    "2514": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2515": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2516": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2518": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "REVERT",
      "path": "6"
    },
    "2519": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2520": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "POP",
      "path": "6"
    },
    "2521": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "POP",
      "path": "6"
    },
    "2522": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "POP",
      "path": "6"
    },
    "2523": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "POP",
      "path": "6"
    },
    "2524": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2526": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "MLOAD",
      "path": "6"
    },
    "2527": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2528": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2530": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "NOT",
      "path": "6"
    },
    "2531": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2533": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP3",
      "path": "6"
    },
    "2534": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "ADD",
      "path": "6"
    },
    "2535": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "AND",
      "path": "6"
    },
    "2536": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP3",
      "path": "6"
    },
    "2537": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "ADD",
      "path": "6"
    },
    "2538": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP1",
      "path": "6"
    },
    "2539": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2541": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "MSTORE",
      "path": "6"
    },
    "2542": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "POP",
      "path": "6"
    },
    "2543": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "DUP2",
      "path": "6"
    },
    "2544": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "ADD",
      "path": "6"
    },
    "2545": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "SWAP1",
      "path": "6"
    },
    "2546": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9FB"
    },
    "2549": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "SWAP2",
      "path": "6"
    },
    "2550": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "SWAP1",
      "path": "6"
    },
    "2551": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16DC"
    },
    "2554": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "jump": "i",
      "offset": [2071, 2099],
      "op": "JUMP",
      "path": "6"
    },
    "2555": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2071, 2099],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2556": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2042, 2099],
      "op": "POP",
      "path": "6"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2563": {
      "op": "SHL"
    },
    "2564": {
      "op": "SUB"
    },
    "2565": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2042, 2099],
      "op": "AND",
      "path": "6"
    },
    "2566": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2042, 2099],
      "op": "SWAP2",
      "path": "6"
    },
    "2567": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2042, 2099],
      "op": "POP",
      "path": "6"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2574": {
      "op": "SHL"
    },
    "2575": {
      "op": "SUB"
    },
    "2576": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2042, 2099],
      "op": "AND",
      "path": "6"
    },
    "2577": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2042, 2099],
      "op": "SWAP2",
      "path": "6"
    },
    "2578": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2042, 2099],
      "op": "POP",
      "path": "6"
    },
    "2579": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2140, 2144],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2618": {
      "op": "SHL"
    },
    "2619": {
      "op": "SUB"
    },
    "2620": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2144],
      "op": "AND",
      "path": "6"
    },
    "2621": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2122, 2126],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2660": {
      "op": "SHL"
    },
    "2661": {
      "op": "SUB"
    },
    "2662": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2134],
      "op": "AND",
      "path": "6"
    },
    "2663": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2134],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDFE1681"
    },
    "2668": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2670": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "MLOAD",
      "path": "6"
    },
    "2671": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP2",
      "path": "6"
    },
    "2672": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2677": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "AND",
      "path": "6"
    },
    "2678": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2680": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "SHL",
      "path": "6"
    },
    "2681": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP2",
      "path": "6"
    },
    "2682": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "MSTORE",
      "path": "6"
    },
    "2683": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2685": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "ADD",
      "path": "6"
    },
    "2686": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2688": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2690": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "MLOAD",
      "path": "6"
    },
    "2691": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP1",
      "path": "6"
    },
    "2692": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP4",
      "path": "6"
    },
    "2693": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "SUB",
      "path": "6"
    },
    "2694": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP2",
      "path": "6"
    },
    "2695": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP7",
      "path": "6"
    },
    "2696": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP1",
      "path": "6"
    },
    "2697": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2698": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "ISZERO",
      "path": "6"
    },
    "2699": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP1",
      "path": "6"
    },
    "2700": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "ISZERO",
      "path": "6"
    },
    "2701": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA95"
    },
    "2704": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "JUMPI",
      "path": "6"
    },
    "2705": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2707": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP1",
      "path": "6"
    },
    "2708": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "REVERT",
      "path": "6"
    },
    "2709": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2710": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "POP",
      "path": "6"
    },
    "2711": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "GAS",
      "path": "6"
    },
    "2712": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "STATICCALL",
      "path": "6"
    },
    "2713": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "ISZERO",
      "path": "6"
    },
    "2714": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP1",
      "path": "6"
    },
    "2715": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "ISZERO",
      "path": "6"
    },
    "2716": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAA9"
    },
    "2719": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "JUMPI",
      "path": "6"
    },
    "2720": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2721": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2723": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP1",
      "path": "6"
    },
    "2724": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2725": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2726": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2728": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "REVERT",
      "path": "6"
    },
    "2729": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2730": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "POP",
      "path": "6"
    },
    "2731": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "POP",
      "path": "6"
    },
    "2732": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "POP",
      "path": "6"
    },
    "2733": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "POP",
      "path": "6"
    },
    "2734": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2736": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "MLOAD",
      "path": "6"
    },
    "2737": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2738": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2740": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "NOT",
      "path": "6"
    },
    "2741": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2743": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP3",
      "path": "6"
    },
    "2744": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "ADD",
      "path": "6"
    },
    "2745": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "AND",
      "path": "6"
    },
    "2746": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP3",
      "path": "6"
    },
    "2747": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "ADD",
      "path": "6"
    },
    "2748": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP1",
      "path": "6"
    },
    "2749": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2751": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "MSTORE",
      "path": "6"
    },
    "2752": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "POP",
      "path": "6"
    },
    "2753": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "DUP2",
      "path": "6"
    },
    "2754": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "ADD",
      "path": "6"
    },
    "2755": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "SWAP1",
      "path": "6"
    },
    "2756": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH2",
      "path": "6",
      "value": "0xACD"
    },
    "2759": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "SWAP2",
      "path": "6"
    },
    "2760": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "SWAP1",
      "path": "6"
    },
    "2761": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15D9"
    },
    "2764": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "jump": "i",
      "offset": [2113, 2136],
      "op": "JUMP",
      "path": "6"
    },
    "2765": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2136],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2772": {
      "op": "SHL"
    },
    "2773": {
      "op": "SUB"
    },
    "2774": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2144],
      "op": "AND",
      "path": "6"
    },
    "2775": {
      "branch": 58,
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2113, 2144],
      "op": "EQ",
      "path": "6"
    },
    "2776": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2109, 2272],
      "op": "ISZERO",
      "path": "6"
    },
    "2777": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2109, 2272],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAFA"
    },
    "2780": {
      "branch": 58,
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2109, 2272],
      "op": "JUMPI",
      "path": "6"
    },
    "2781": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2193, 2195],
      "op": "DUP2",
      "path": "6",
      "statement": 12
    },
    "2782": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2173, 2189],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAE9"
    },
    "2785": {
      "offset": [770, 775],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "2788": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2173, 2175],
      "op": "DUP4",
      "path": "6"
    },
    "2789": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2173, 2189],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18FC"
    },
    "2792": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "jump": "i",
      "offset": [2173, 2189],
      "op": "JUMP",
      "path": "6"
    },
    "2793": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2173, 2189],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2794": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2172, 2195],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF3"
    },
    "2797": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2172, 2195],
      "op": "SWAP2",
      "path": "6"
    },
    "2798": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2172, 2195],
      "op": "SWAP1",
      "path": "6"
    },
    "2799": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2172, 2195],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18DA"
    },
    "2802": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "jump": "i",
      "offset": [2172, 2195],
      "op": "JUMP",
      "path": "6"
    },
    "2803": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2172, 2195],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2804": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2160, 2195],
      "op": "SWAP3",
      "path": "6"
    },
    "2805": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2160, 2195],
      "op": "POP",
      "path": "6"
    },
    "2806": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2032, 2278],
      "op": "POP",
      "path": "6"
    },
    "2807": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2032, 2278],
      "op": "POP",
      "path": "6"
    },
    "2808": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [1968, 2278],
      "op": "SWAP1",
      "path": "6"
    },
    "2809": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "jump": "o",
      "offset": [1968, 2278],
      "op": "JUMP",
      "path": "6"
    },
    "2810": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2109, 2272],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2811": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2259, 2261],
      "op": "DUP1",
      "path": "6",
      "statement": 13
    },
    "2812": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2239, 2255],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAE9"
    },
    "2815": {
      "offset": [770, 775],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "2818": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2239, 2241],
      "op": "DUP5",
      "path": "6"
    },
    "2819": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "offset": [2239, 2255],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18FC"
    },
    "2822": {
      "fn": "xPTPConvertor.getxPTPRatio",
      "jump": "i",
      "offset": [2239, 2255],
      "op": "JUMP",
      "path": "6"
    },
    "2823": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1191, 1362],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2824": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4"
    },
    "2825": {
      "offset": [1248, 1255],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB10"
    },
    "2828": {
      "offset": [1248, 1253],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB98"
    },
    "2831": {
      "jump": "i",
      "offset": [1248, 1255],
      "op": "JUMP",
      "path": "0"
    },
    "2832": {
      "fn": "Context._msgSender",
      "offset": [1248, 1255],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2839": {
      "op": "SHL"
    },
    "2840": {
      "op": "SUB"
    },
    "2841": {
      "offset": [1248, 1271],
      "op": "AND",
      "path": "0"
    },
    "2842": {
      "fn": "Context._msgSender",
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "2843": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB36"
    },
    "2846": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "2847": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2849": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "2850": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2856": {
      "op": "SHL"
    },
    "2857": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "2858": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "2859": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2861": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "2862": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x307"
    },
    "2865": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "2866": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181C"
    },
    "2869": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "2870": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2871": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1300, 1305],
      "op": "PUSH2",
      "path": "6",
      "statement": 14,
      "value": "0x2710"
    },
    "2874": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1288, 1296],
      "op": "DUP2",
      "path": "6"
    },
    "2875": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1288, 1305],
      "op": "GT",
      "path": "6"
    },
    "2876": {
      "branch": 59,
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1288, 1305],
      "op": "ISZERO",
      "path": "6"
    },
    "2877": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1263, 1322],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB58"
    },
    "2880": {
      "branch": 59,
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1263, 1322],
      "op": "JUMPI",
      "path": "6"
    },
    "2881": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1263, 1322],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2883": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1263, 1322],
      "op": "MLOAD",
      "path": "6"
    },
    "2884": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2890": {
      "op": "SHL"
    },
    "2891": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1263, 1322],
      "op": "DUP2",
      "path": "6"
    },
    "2892": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1263, 1322],
      "op": "MSTORE",
      "path": "6"
    },
    "2893": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1263, 1322],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2895": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1263, 1322],
      "op": "ADD",
      "path": "6"
    },
    "2896": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1263, 1322],
      "op": "PUSH2",
      "path": "6",
      "value": "0x307"
    },
    "2899": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1263, 1322],
      "op": "SWAP1",
      "path": "6"
    },
    "2900": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1263, 1322],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F6"
    },
    "2903": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "jump": "i",
      "offset": [1263, 1322],
      "op": "JUMP",
      "path": "6"
    },
    "2904": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1263, 1322],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2905": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1332, 1344],
      "op": "PUSH1",
      "path": "6",
      "statement": 15,
      "value": "0x1"
    },
    "2907": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "offset": [1332, 1355],
      "op": "SSTORE",
      "path": "6"
    },
    "2908": {
      "fn": "xPTPConvertor.setBuyThreshold",
      "jump": "o",
      "offset": [1191, 1362],
      "op": "JUMP",
      "path": "6"
    },
    "2909": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2910": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4"
    },
    "2911": {
      "offset": [1248, 1255],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB66"
    },
    "2914": {
      "offset": [1248, 1253],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB98"
    },
    "2917": {
      "jump": "i",
      "offset": [1248, 1255],
      "op": "JUMP",
      "path": "0"
    },
    "2918": {
      "fn": "Context._msgSender",
      "offset": [1248, 1255],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2925": {
      "op": "SHL"
    },
    "2926": {
      "op": "SUB"
    },
    "2927": {
      "offset": [1248, 1271],
      "op": "AND",
      "path": "0"
    },
    "2928": {
      "fn": "Context._msgSender",
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "2929": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8C"
    },
    "2932": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "2933": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2935": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "2936": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2942": {
      "op": "SHL"
    },
    "2943": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "2944": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "2945": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2947": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "2948": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x307"
    },
    "2951": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "2952": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181C"
    },
    "2955": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "2956": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2957": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1732, 1762],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0xB96"
    },
    "2960": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1759, 1760],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2962": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1732, 1750],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1167"
    },
    "2965": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1732, 1762],
      "op": "JUMP",
      "path": "0"
    },
    "2966": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1732, 1762],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2967": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [1668, 1769],
      "op": "JUMP",
      "path": "0"
    },
    "2968": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2969": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2971": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "0",
      "statement": 17
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2978": {
      "op": "SHL"
    },
    "2979": {
      "op": "SUB"
    },
    "2980": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "0"
    },
    "2981": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SWAP1",
      "path": "0"
    },
    "2982": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [1036, 1121],
      "op": "JUMP",
      "path": "0"
    },
    "2983": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7526, 7676],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2984": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7578, 7604],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2986": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7637, 7669],
      "op": "PUSH2",
      "path": "6",
      "statement": 18,
      "value": "0xBB3"
    },
    "2989": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7649, 7656],
      "op": "DUP3",
      "path": "6"
    },
    "2990": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7658, 7668],
      "op": "CALLER",
      "path": "6"
    },
    "2991": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7637, 7648],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD05"
    },
    "2994": {
      "fn": "xPTPConvertor.deposit",
      "jump": "i",
      "offset": [7637, 7669],
      "op": "JUMP",
      "path": "6"
    },
    "2995": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7637, 7669],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2996": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7616, 7669],
      "op": "SWAP3",
      "path": "6"
    },
    "2997": {
      "fn": "xPTPConvertor.deposit",
      "offset": [7526, 7676],
      "op": "SWAP2",
      "path": "6"
    },
    "2998": {
      "op": "POP"
    },
    "2999": {
      "op": "POP"
    },
    "3000": {
      "fn": "xPTPConvertor.deposit",
      "jump": "o",
      "offset": [7526, 7676],
      "op": "JUMP",
      "path": "6"
    },
    "3001": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1541, 1718],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3002": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4"
    },
    "3003": {
      "offset": [1248, 1255],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC2"
    },
    "3006": {
      "offset": [1248, 1253],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB98"
    },
    "3009": {
      "jump": "i",
      "offset": [1248, 1255],
      "op": "JUMP",
      "path": "0"
    },
    "3010": {
      "fn": "Context._msgSender",
      "offset": [1248, 1255],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3017": {
      "op": "SHL"
    },
    "3018": {
      "op": "SUB"
    },
    "3019": {
      "offset": [1248, 1271],
      "op": "AND",
      "path": "0"
    },
    "3020": {
      "fn": "Context._msgSender",
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "3021": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE8"
    },
    "3024": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "3025": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3027": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "3028": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3034": {
      "op": "SHL"
    },
    "3035": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "3036": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "3037": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3039": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "3040": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x307"
    },
    "3043": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "3044": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181C"
    },
    "3047": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "3048": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3049": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1653, 1658],
      "op": "PUSH2",
      "path": "6",
      "statement": 19,
      "value": "0x2710"
    },
    "3052": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1641, 1649],
      "op": "DUP2",
      "path": "6"
    },
    "3053": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1641, 1658],
      "op": "GT",
      "path": "6"
    },
    "3054": {
      "branch": 60,
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1641, 1658],
      "op": "ISZERO",
      "path": "6"
    },
    "3055": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1616, 1675],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC0A"
    },
    "3058": {
      "branch": 60,
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1616, 1675],
      "op": "JUMPI",
      "path": "6"
    },
    "3059": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1616, 1675],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3061": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1616, 1675],
      "op": "MLOAD",
      "path": "6"
    },
    "3062": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3068": {
      "op": "SHL"
    },
    "3069": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1616, 1675],
      "op": "DUP2",
      "path": "6"
    },
    "3070": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1616, 1675],
      "op": "MSTORE",
      "path": "6"
    },
    "3071": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1616, 1675],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3073": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1616, 1675],
      "op": "ADD",
      "path": "6"
    },
    "3074": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1616, 1675],
      "op": "PUSH2",
      "path": "6",
      "value": "0x307"
    },
    "3077": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1616, 1675],
      "op": "SWAP1",
      "path": "6"
    },
    "3078": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1616, 1675],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F6"
    },
    "3081": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "jump": "i",
      "offset": [1616, 1675],
      "op": "JUMP",
      "path": "6"
    },
    "3082": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1616, 1675],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3083": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1685, 1700],
      "op": "PUSH1",
      "path": "6",
      "statement": 20,
      "value": "0x3"
    },
    "3085": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "offset": [1685, 1711],
      "op": "SSTORE",
      "path": "6"
    },
    "3086": {
      "fn": "xPTPConvertor.setDeltaPercentage",
      "jump": "o",
      "offset": [1541, 1718],
      "op": "JUMP",
      "path": "6"
    },
    "3087": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1724, 1890],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3088": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4"
    },
    "3089": {
      "offset": [1248, 1255],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC18"
    },
    "3092": {
      "offset": [1248, 1253],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB98"
    },
    "3095": {
      "jump": "i",
      "offset": [1248, 1255],
      "op": "JUMP",
      "path": "0"
    },
    "3096": {
      "fn": "Context._msgSender",
      "offset": [1248, 1255],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3103": {
      "op": "SHL"
    },
    "3104": {
      "op": "SUB"
    },
    "3105": {
      "offset": [1248, 1271],
      "op": "AND",
      "path": "0"
    },
    "3106": {
      "fn": "Context._msgSender",
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "3107": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3E"
    },
    "3110": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "3111": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3113": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "3114": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3120": {
      "op": "SHL"
    },
    "3121": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "3122": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "3123": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3125": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "3126": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x307"
    },
    "3129": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "3130": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181C"
    },
    "3133": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "3134": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3135": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1829, 1834],
      "op": "PUSH2",
      "path": "6",
      "statement": 21,
      "value": "0x2710"
    },
    "3138": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1817, 1825],
      "op": "DUP2",
      "path": "6"
    },
    "3139": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1817, 1834],
      "op": "GT",
      "path": "6"
    },
    "3140": {
      "branch": 61,
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1817, 1834],
      "op": "ISZERO",
      "path": "6"
    },
    "3141": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1792, 1851],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC60"
    },
    "3144": {
      "branch": 61,
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1792, 1851],
      "op": "JUMPI",
      "path": "6"
    },
    "3145": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1792, 1851],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3147": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1792, 1851],
      "op": "MLOAD",
      "path": "6"
    },
    "3148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1792, 1851],
      "op": "DUP2",
      "path": "6"
    },
    "3156": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1792, 1851],
      "op": "MSTORE",
      "path": "6"
    },
    "3157": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1792, 1851],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3159": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1792, 1851],
      "op": "ADD",
      "path": "6"
    },
    "3160": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1792, 1851],
      "op": "PUSH2",
      "path": "6",
      "value": "0x307"
    },
    "3163": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1792, 1851],
      "op": "SWAP1",
      "path": "6"
    },
    "3164": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1792, 1851],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F6"
    },
    "3167": {
      "fn": "xPTPConvertor.setSlippage",
      "jump": "i",
      "offset": [1792, 1851],
      "op": "JUMP",
      "path": "6"
    },
    "3168": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1792, 1851],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3169": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1861, 1872],
      "op": "PUSH1",
      "path": "6",
      "statement": 22,
      "value": "0x4"
    },
    "3171": {
      "fn": "xPTPConvertor.setSlippage",
      "offset": [1861, 1883],
      "op": "SSTORE",
      "path": "6"
    },
    "3172": {
      "fn": "xPTPConvertor.setSlippage",
      "jump": "o",
      "offset": [1724, 1890],
      "op": "JUMP",
      "path": "6"
    },
    "3173": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3174": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4"
    },
    "3175": {
      "offset": [1248, 1255],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6E"
    },
    "3178": {
      "offset": [1248, 1253],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB98"
    },
    "3181": {
      "jump": "i",
      "offset": [1248, 1255],
      "op": "JUMP",
      "path": "0"
    },
    "3182": {
      "fn": "Context._msgSender",
      "offset": [1248, 1255],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3189": {
      "op": "SHL"
    },
    "3190": {
      "op": "SUB"
    },
    "3191": {
      "offset": [1248, 1271],
      "op": "AND",
      "path": "0"
    },
    "3192": {
      "branch": 72,
      "fn": "Context._msgSender",
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "3193": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC94"
    },
    "3196": {
      "branch": 72,
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "3197": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3199": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "3200": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3206": {
      "op": "SHL"
    },
    "3207": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "3208": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "3209": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3211": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "3212": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x307"
    },
    "3215": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "3216": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181C"
    },
    "3219": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "3220": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3227": {
      "op": "SHL"
    },
    "3228": {
      "op": "SUB"
    },
    "3229": {
      "fn": "Ownable.transferOwnership",
      "offset": [2006, 2028],
      "op": "DUP2",
      "path": "0",
      "statement": 23
    },
    "3230": {
      "branch": 73,
      "fn": "Ownable.transferOwnership",
      "offset": [2006, 2028],
      "op": "AND",
      "path": "0"
    },
    "3231": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF9"
    },
    "3234": {
      "branch": 73,
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "JUMPI",
      "path": "0"
    },
    "3235": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3237": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "MLOAD",
      "path": "0"
    },
    "3238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3244": {
      "op": "SHL"
    },
    "3245": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "DUP2",
      "path": "0"
    },
    "3246": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "MSTORE",
      "path": "0"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3249": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3251": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "DUP3",
      "path": "0"
    },
    "3252": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "ADD",
      "path": "0"
    },
    "3253": {
      "op": "MSTORE"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3258": {
      "op": "DUP3"
    },
    "3259": {
      "op": "ADD"
    },
    "3260": {
      "op": "MSTORE"
    },
    "3261": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3296": {
      "op": "DUP3"
    },
    "3297": {
      "op": "ADD"
    },
    "3298": {
      "op": "MSTORE"
    },
    "3299": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3308": {
      "op": "SHL"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3311": {
      "op": "DUP3"
    },
    "3312": {
      "op": "ADD"
    },
    "3313": {
      "op": "MSTORE"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3316": {
      "op": "ADD"
    },
    "3317": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH2",
      "path": "0",
      "value": "0x307"
    },
    "3320": {
      "op": "JUMP"
    },
    "3321": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3322": {
      "fn": "Ownable.transferOwnership",
      "offset": [2081, 2109],
      "op": "PUSH2",
      "path": "0",
      "statement": 24,
      "value": "0xD02"
    },
    "3325": {
      "fn": "Ownable.transferOwnership",
      "offset": [2100, 2108],
      "op": "DUP2",
      "path": "0"
    },
    "3326": {
      "fn": "Ownable.transferOwnership",
      "offset": [2081, 2099],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1167"
    },
    "3329": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [2081, 2109],
      "op": "JUMP",
      "path": "0"
    },
    "3330": {
      "fn": "Ownable.transferOwnership",
      "offset": [2081, 2109],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3331": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "POP",
      "path": "0"
    },
    "3332": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [1918, 2116],
      "op": "JUMP",
      "path": "0"
    },
    "3333": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5376, 7285],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3334": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5462, 5488],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3336": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5504, 5568],
      "op": "PUSH2",
      "path": "6",
      "statement": 25,
      "value": "0xD3C"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3345": {
      "op": "SHL"
    },
    "3346": {
      "op": "SUB"
    },
    "3347": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5511, 5514],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "3380": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5504, 5532],
      "op": "AND",
      "path": "6"
    },
    "3381": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5533, 5543],
      "op": "CALLER",
      "path": "6"
    },
    "3382": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5553, 5557],
      "op": "ADDRESS",
      "path": "6"
    },
    "3383": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5560, 5567],
      "op": "DUP7",
      "path": "6"
    },
    "3384": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5504, 5532],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11B7"
    },
    "3387": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [5504, 5568],
      "op": "JUMP",
      "path": "6"
    },
    "3388": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5504, 5568],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3389": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5578, 5595],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3391": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5598, 5612],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD46"
    },
    "3394": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5598, 5610],
      "op": "PUSH2",
      "path": "6",
      "value": "0x965"
    },
    "3397": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [5598, 5612],
      "op": "JUMP",
      "path": "6"
    },
    "3398": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5598, 5612],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3399": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5682, 5694],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3401": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5682, 5694],
      "op": "SLOAD",
      "path": "6"
    },
    "3402": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5578, 5612],
      "op": "SWAP1",
      "path": "6"
    },
    "3403": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5578, 5612],
      "op": "SWAP2",
      "path": "6"
    },
    "3404": {
      "op": "POP"
    },
    "3405": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5648, 5655],
      "op": "DUP5",
      "path": "6"
    },
    "3406": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5648, 5655],
      "op": "SWAP1",
      "path": "6"
    },
    "3407": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5669, 5694],
      "op": "DUP3",
      "path": "6"
    },
    "3408": {
      "branch": 62,
      "fn": "xPTPConvertor._depositFor",
      "offset": [5669, 5694],
      "op": "GT",
      "path": "6"
    },
    "3409": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5665, 6887],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1008"
    },
    "3412": {
      "branch": 62,
      "fn": "xPTPConvertor._depositFor",
      "offset": [5665, 6887],
      "op": "JUMPI",
      "path": "6"
    },
    "3413": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5710, 5729],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3415": {
      "offset": [770, 775],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "3418": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5751, 5761],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3420": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5751, 5761],
      "op": "SLOAD",
      "path": "6"
    },
    "3421": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5733, 5748],
      "op": "DUP4",
      "path": "6"
    },
    "3422": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5733, 5761],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD67"
    },
    "3425": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5733, 5761],
      "op": "SWAP2",
      "path": "6"
    },
    "3426": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5733, 5761],
      "op": "SWAP1",
      "path": "6"
    },
    "3427": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5733, 5761],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18FC"
    },
    "3430": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [5733, 5761],
      "op": "JUMP",
      "path": "6"
    },
    "3431": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5733, 5761],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3432": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5732, 5776],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD71"
    },
    "3435": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5732, 5776],
      "op": "SWAP2",
      "path": "6"
    },
    "3436": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5732, 5776],
      "op": "SWAP1",
      "path": "6"
    },
    "3437": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5732, 5776],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18DA"
    },
    "3440": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [5732, 5776],
      "op": "JUMP",
      "path": "6"
    },
    "3441": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5732, 5776],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3442": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5710, 5776],
      "op": "SWAP1",
      "path": "6"
    },
    "3443": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5710, 5776],
      "op": "POP",
      "path": "6"
    },
    "3444": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5790, 5827],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3446": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5830, 5846],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD7D"
    },
    "3449": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5830, 5844],
      "op": "PUSH2",
      "path": "6",
      "value": "0x337"
    },
    "3452": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [5830, 5846],
      "op": "JUMP",
      "path": "6"
    },
    "3453": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5830, 5846],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3454": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5790, 5846],
      "op": "SWAP1",
      "path": "6"
    },
    "3455": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5790, 5846],
      "op": "POP",
      "path": "6"
    },
    "3456": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5878, 5907],
      "op": "DUP1",
      "path": "6"
    },
    "3457": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5864, 5875],
      "op": "DUP3",
      "path": "6"
    },
    "3458": {
      "branch": 63,
      "fn": "xPTPConvertor._depositFor",
      "offset": [5864, 5907],
      "op": "GT",
      "path": "6"
    },
    "3459": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5860, 5985],
      "op": "ISZERO",
      "path": "6"
    },
    "3460": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5860, 5985],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD8B"
    },
    "3463": {
      "branch": 63,
      "fn": "xPTPConvertor._depositFor",
      "offset": [5860, 5985],
      "op": "JUMPI",
      "path": "6"
    },
    "3464": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5941, 5970],
      "op": "DUP1",
      "path": "6",
      "statement": 26
    },
    "3465": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5927, 5970],
      "op": "SWAP2",
      "path": "6"
    },
    "3466": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5927, 5970],
      "op": "POP",
      "path": "6"
    },
    "3467": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5860, 5985],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3468": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6002, 6017],
      "op": "DUP2",
      "path": "6"
    },
    "3469": {
      "branch": 64,
      "fn": "xPTPConvertor._depositFor",
      "offset": [6002, 6017],
      "op": "ISZERO",
      "path": "6"
    },
    "3470": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5998, 6877],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1005"
    },
    "3473": {
      "branch": 64,
      "fn": "xPTPConvertor._depositFor",
      "offset": [5998, 6877],
      "op": "JUMPI",
      "path": "6"
    },
    "3474": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6037, 6063],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3476": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6066, 6096],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD9C"
    },
    "3479": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6084, 6095],
      "op": "DUP4",
      "path": "6"
    },
    "3480": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6066, 6083],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CF"
    },
    "3483": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6066, 6096],
      "op": "JUMP",
      "path": "6"
    },
    "3484": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6066, 6096],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3485": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6037, 6096],
      "op": "SWAP1",
      "path": "6"
    },
    "3486": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6037, 6096],
      "op": "POP",
      "path": "6"
    },
    "3487": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6132, 6150],
      "op": "DUP1",
      "path": "6"
    },
    "3488": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6118, 6129],
      "op": "DUP4",
      "path": "6"
    },
    "3489": {
      "branch": 65,
      "fn": "xPTPConvertor._depositFor",
      "offset": [6118, 6150],
      "op": "LT",
      "path": "6"
    },
    "3490": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6114, 6863],
      "op": "ISZERO",
      "path": "6"
    },
    "3491": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6114, 6863],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1003"
    },
    "3494": {
      "branch": 65,
      "fn": "xPTPConvertor._depositFor",
      "offset": [6114, 6863],
      "op": "JUMPI",
      "path": "6"
    },
    "3495": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6174, 6221],
      "op": "PUSH2",
      "path": "6",
      "statement": 27,
      "value": "0xDF1"
    },
    "3498": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6196, 6199],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "3531": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6201, 6207],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "3564": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6209, 6220],
      "op": "DUP6",
      "path": "6"
    },
    "3565": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6174, 6195],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1228"
    },
    "3568": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6174, 6221],
      "op": "JUMP",
      "path": "6"
    },
    "3569": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6174, 6221],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3570": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3572": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "DUP1",
      "path": "6"
    },
    "3573": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "MLOAD",
      "path": "6"
    },
    "3574": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6281, 6282],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3576": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "DUP1",
      "path": "6"
    },
    "3577": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "DUP3",
      "path": "6"
    },
    "3578": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "MSTORE",
      "path": "6"
    },
    "3579": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "3581": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "DUP3",
      "path": "6"
    },
    "3582": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "ADD",
      "path": "6"
    },
    "3583": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "DUP4",
      "path": "6"
    },
    "3584": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "MSTORE",
      "path": "6"
    },
    "3585": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6243, 6264],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3587": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6243, 6264],
      "op": "SWAP3",
      "path": "6"
    },
    "3588": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3590": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "DUP4",
      "path": "6"
    },
    "3591": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "ADD",
      "path": "6"
    },
    "3592": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "SWAP1",
      "path": "6"
    },
    "3593": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "DUP1",
      "path": "6"
    },
    "3594": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "3595": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "DUP4",
      "path": "6"
    },
    "3596": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "3597": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "ADD",
      "path": "6"
    },
    "3598": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "SWAP1",
      "path": "6"
    },
    "3599": {
      "op": "POP"
    },
    "3600": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6267, 6283],
      "op": "POP",
      "path": "6"
    },
    "3601": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6243, 6283],
      "op": "SWAP1",
      "path": "6"
    },
    "3602": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6243, 6283],
      "op": "POP",
      "path": "6"
    },
    "3603": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6315, 6318],
      "op": "PUSH32",
      "path": "6",
      "statement": 28,
      "value": "0x0"
    },
    "3636": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6309],
      "op": "DUP2",
      "path": "6"
    },
    "3637": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6310, 6311],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3639": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "DUP2",
      "path": "6"
    },
    "3640": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "MLOAD",
      "path": "6"
    },
    "3641": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "DUP2",
      "path": "6"
    },
    "3642": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "LT",
      "path": "6"
    },
    "3643": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE46"
    },
    "3646": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "JUMPI",
      "path": "6"
    },
    "3647": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE46"
    },
    "3650": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1974"
    },
    "3653": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6305, 6312],
      "op": "JUMP",
      "path": "6"
    },
    "3654": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3655": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3657": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "MUL",
      "path": "6"
    },
    "3658": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3660": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "ADD",
      "path": "6"
    },
    "3661": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6312],
      "op": "ADD",
      "path": "6"
    },
    "3662": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6318],
      "op": "SWAP1",
      "path": "6"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3669": {
      "op": "SHL"
    },
    "3670": {
      "op": "SUB"
    },
    "3671": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6318],
      "op": "AND",
      "path": "6"
    },
    "3672": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6318],
      "op": "SWAP1",
      "path": "6"
    },
    "3673": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6318],
      "op": "DUP2",
      "path": "6"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3680": {
      "op": "SHL"
    },
    "3681": {
      "op": "SUB"
    },
    "3682": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6318],
      "op": "AND",
      "path": "6"
    },
    "3683": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6318],
      "op": "DUP2",
      "path": "6"
    },
    "3684": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6318],
      "op": "MSTORE",
      "path": "6"
    },
    "3685": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6318],
      "op": "POP",
      "path": "6"
    },
    "3686": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6305, 6318],
      "op": "POP",
      "path": "6"
    },
    "3687": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6350, 6354],
      "op": "PUSH32",
      "path": "6",
      "statement": 29,
      "value": "0x0"
    },
    "3720": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6344],
      "op": "DUP2",
      "path": "6"
    },
    "3721": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6345, 6346],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3723": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "DUP2",
      "path": "6"
    },
    "3724": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "MLOAD",
      "path": "6"
    },
    "3725": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "DUP2",
      "path": "6"
    },
    "3726": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "LT",
      "path": "6"
    },
    "3727": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE9A"
    },
    "3730": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "JUMPI",
      "path": "6"
    },
    "3731": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE9A"
    },
    "3734": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1974"
    },
    "3737": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6340, 6347],
      "op": "JUMP",
      "path": "6"
    },
    "3738": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3739": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3741": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "MUL",
      "path": "6"
    },
    "3742": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3744": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "ADD",
      "path": "6"
    },
    "3745": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6347],
      "op": "ADD",
      "path": "6"
    },
    "3746": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6354],
      "op": "SWAP1",
      "path": "6"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3753": {
      "op": "SHL"
    },
    "3754": {
      "op": "SUB"
    },
    "3755": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6354],
      "op": "AND",
      "path": "6"
    },
    "3756": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6354],
      "op": "SWAP1",
      "path": "6"
    },
    "3757": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6354],
      "op": "DUP2",
      "path": "6"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3764": {
      "op": "SHL"
    },
    "3765": {
      "op": "SUB"
    },
    "3766": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6354],
      "op": "AND",
      "path": "6"
    },
    "3767": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6354],
      "op": "DUP2",
      "path": "6"
    },
    "3768": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6354],
      "op": "MSTORE",
      "path": "6"
    },
    "3769": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6354],
      "op": "POP",
      "path": "6"
    },
    "3770": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6340, 6354],
      "op": "POP",
      "path": "6"
    },
    "3771": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6410, 6416],
      "op": "PUSH32",
      "path": "6",
      "statement": 30,
      "value": "0x0"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3810": {
      "op": "SHL"
    },
    "3811": {
      "op": "SUB"
    },
    "3812": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6442],
      "op": "AND",
      "path": "6"
    },
    "3813": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6442],
      "op": "PUSH4",
      "path": "6",
      "value": "0x38ED1739"
    },
    "3818": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6468, 6479],
      "op": "DUP6",
      "path": "6"
    },
    "3819": {
      "offset": [770, 775],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "3822": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6542, 6553],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3824": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6542, 6553],
      "op": "SLOAD",
      "path": "6"
    },
    "3825": {
      "offset": [770, 775],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "3828": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6528, 6553],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEFD"
    },
    "3831": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6528, 6553],
      "op": "SWAP2",
      "path": "6"
    },
    "3832": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6528, 6553],
      "op": "SWAP1",
      "path": "6"
    },
    "3833": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6528, 6553],
      "op": "PUSH2",
      "path": "6",
      "value": "0x191B"
    },
    "3836": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6528, 6553],
      "op": "JUMP",
      "path": "6"
    },
    "3837": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6528, 6553],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3838": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6506, 6554],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF07"
    },
    "3841": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6506, 6554],
      "op": "SWAP1",
      "path": "6"
    },
    "3842": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6506, 6524],
      "op": "DUP8",
      "path": "6"
    },
    "3843": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6506, 6554],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18FC"
    },
    "3846": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6506, 6554],
      "op": "JUMP",
      "path": "6"
    },
    "3847": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6506, 6554],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3848": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6505, 6569],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "3851": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6505, 6569],
      "op": "SWAP2",
      "path": "6"
    },
    "3852": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6505, 6569],
      "op": "SWAP1",
      "path": "6"
    },
    "3853": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6505, 6569],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18DA"
    },
    "3856": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6505, 6569],
      "op": "JUMP",
      "path": "6"
    },
    "3857": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6505, 6569],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3858": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6595, 6599],
      "op": "DUP5",
      "path": "6"
    },
    "3859": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6625, 6629],
      "op": "DUP13",
      "path": "6"
    },
    "3860": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6655, 6670],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "3861": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3863": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "MLOAD",
      "path": "6"
    },
    "3864": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP7",
      "path": "6"
    },
    "3865": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3870": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "AND",
      "path": "6"
    },
    "3871": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "3873": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "SHL",
      "path": "6"
    },
    "3874": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP2",
      "path": "6"
    },
    "3875": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "MSTORE",
      "path": "6"
    },
    "3876": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3878": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "ADD",
      "path": "6"
    },
    "3879": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF34"
    },
    "3882": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "SWAP6",
      "path": "6"
    },
    "3883": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "SWAP5",
      "path": "6"
    },
    "3884": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "SWAP4",
      "path": "6"
    },
    "3885": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "SWAP3",
      "path": "6"
    },
    "3886": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "SWAP2",
      "path": "6"
    },
    "3887": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "SWAP1",
      "path": "6"
    },
    "3888": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1851"
    },
    "3891": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6397, 6692],
      "op": "JUMP",
      "path": "6"
    },
    "3892": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3893": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3895": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3897": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "MLOAD",
      "path": "6"
    },
    "3898": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP1",
      "path": "6"
    },
    "3899": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP4",
      "path": "6"
    },
    "3900": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "SUB",
      "path": "6"
    },
    "3901": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP2",
      "path": "6"
    },
    "3902": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3904": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP8",
      "path": "6"
    },
    "3905": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP1",
      "path": "6"
    },
    "3906": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "3907": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "ISZERO",
      "path": "6"
    },
    "3908": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP1",
      "path": "6"
    },
    "3909": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "ISZERO",
      "path": "6"
    },
    "3910": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF4E"
    },
    "3913": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "JUMPI",
      "path": "6"
    },
    "3914": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3916": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP1",
      "path": "6"
    },
    "3917": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "REVERT",
      "path": "6"
    },
    "3918": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3919": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "POP",
      "path": "6"
    },
    "3920": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "GAS",
      "path": "6"
    },
    "3921": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "CALL",
      "path": "6"
    },
    "3922": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "ISZERO",
      "path": "6"
    },
    "3923": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP1",
      "path": "6"
    },
    "3924": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "ISZERO",
      "path": "6"
    },
    "3925": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF62"
    },
    "3928": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "JUMPI",
      "path": "6"
    },
    "3929": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3930": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3932": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP1",
      "path": "6"
    },
    "3933": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3934": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3935": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3937": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "REVERT",
      "path": "6"
    },
    "3938": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3939": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "POP",
      "path": "6"
    },
    "3940": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "POP",
      "path": "6"
    },
    "3941": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "POP",
      "path": "6"
    },
    "3942": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "POP",
      "path": "6"
    },
    "3943": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3945": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "MLOAD",
      "path": "6"
    },
    "3946": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3947": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3949": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP3",
      "path": "6"
    },
    "3950": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3951": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3953": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3954": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "SWAP1",
      "path": "6"
    },
    "3955": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP2",
      "path": "6"
    },
    "3956": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "ADD",
      "path": "6"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3959": {
      "op": "NOT"
    },
    "3960": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "AND",
      "path": "6"
    },
    "3961": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP3",
      "path": "6"
    },
    "3962": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "ADD",
      "path": "6"
    },
    "3963": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3965": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "MSTORE",
      "path": "6"
    },
    "3966": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF8A"
    },
    "3969": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "SWAP2",
      "path": "6"
    },
    "3970": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "SWAP1",
      "path": "6"
    },
    "3971": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "DUP2",
      "path": "6"
    },
    "3972": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "ADD",
      "path": "6"
    },
    "3973": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "SWAP1",
      "path": "6"
    },
    "3974": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15F6"
    },
    "3977": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6397, 6692],
      "op": "JUMP",
      "path": "6"
    },
    "3978": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6692],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3979": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6693, 6694],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3981": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "DUP2",
      "path": "6"
    },
    "3982": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "MLOAD",
      "path": "6"
    },
    "3983": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "DUP2",
      "path": "6"
    },
    "3984": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "LT",
      "path": "6"
    },
    "3985": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF9C"
    },
    "3988": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "JUMPI",
      "path": "6"
    },
    "3989": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF9C"
    },
    "3992": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1974"
    },
    "3995": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6397, 6695],
      "op": "JUMP",
      "path": "6"
    },
    "3996": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3997": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3999": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "MUL",
      "path": "6"
    },
    "4000": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4002": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "ADD",
      "path": "6"
    },
    "4003": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "ADD",
      "path": "6"
    },
    "4004": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6397, 6695],
      "op": "MLOAD",
      "path": "6"
    },
    "4005": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6376, 6695],
      "op": "SWAP7",
      "path": "6"
    },
    "4006": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6376, 6695],
      "op": "POP",
      "path": "6"
    },
    "4007": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6746, 6757],
      "op": "DUP4",
      "path": "6",
      "statement": 31
    },
    "4008": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6725, 6743],
      "op": "DUP8",
      "path": "6"
    },
    "4009": {
      "branch": 66,
      "fn": "xPTPConvertor._depositFor",
      "offset": [6725, 6757],
      "op": "GT",
      "path": "6"
    },
    "4010": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6717, 6792],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFF5"
    },
    "4013": {
      "branch": 66,
      "fn": "xPTPConvertor._depositFor",
      "offset": [6717, 6792],
      "op": "JUMPI",
      "path": "6"
    },
    "4014": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6717, 6792],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4016": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6717, 6792],
      "op": "MLOAD",
      "path": "6"
    },
    "4017": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4023": {
      "op": "SHL"
    },
    "4024": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6717, 6792],
      "op": "DUP2",
      "path": "6"
    },
    "4025": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6717, 6792],
      "op": "MSTORE",
      "path": "6"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4028": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6717, 6792],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4030": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6717, 6792],
      "op": "DUP3",
      "path": "6"
    },
    "4031": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6717, 6792],
      "op": "ADD",
      "path": "6"
    },
    "4032": {
      "op": "MSTORE"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4037": {
      "op": "DUP3"
    },
    "4038": {
      "op": "ADD"
    },
    "4039": {
      "op": "MSTORE"
    },
    "4040": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E20697320646973616476616E746167656F75730000"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4075": {
      "op": "DUP3"
    },
    "4076": {
      "op": "ADD"
    },
    "4077": {
      "op": "MSTORE"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4080": {
      "op": "ADD"
    },
    "4081": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6717, 6792],
      "op": "PUSH2",
      "path": "6",
      "value": "0x307"
    },
    "4084": {
      "op": "JUMP"
    },
    "4085": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6717, 6792],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4086": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6814, 6844],
      "op": "PUSH2",
      "path": "6",
      "statement": 32,
      "value": "0xFFF"
    },
    "4089": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6833, 6844],
      "op": "DUP5",
      "path": "6"
    },
    "4090": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6814, 6844],
      "op": "DUP7",
      "path": "6"
    },
    "4091": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6814, 6844],
      "op": "PUSH2",
      "path": "6",
      "value": "0x191B"
    },
    "4094": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6814, 6844],
      "op": "JUMP",
      "path": "6"
    },
    "4095": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6814, 6844],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4096": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6814, 6844],
      "op": "SWAP5",
      "path": "6"
    },
    "4097": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6814, 6844],
      "op": "POP",
      "path": "6"
    },
    "4098": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6152, 6863],
      "op": "POP",
      "path": "6"
    },
    "4099": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6114, 6863],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4100": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6019, 6877],
      "op": "POP",
      "path": "6"
    },
    "4101": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5998, 6877],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4102": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5696, 6887],
      "op": "POP",
      "path": "6"
    },
    "4103": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5696, 6887],
      "op": "POP",
      "path": "6"
    },
    "4104": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5665, 6887],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4105": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6900, 6919],
      "op": "DUP1",
      "path": "6"
    },
    "4106": {
      "branch": 67,
      "fn": "xPTPConvertor._depositFor",
      "offset": [6900, 6919],
      "op": "ISZERO",
      "path": "6"
    },
    "4107": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6896, 7217],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1115"
    },
    "4110": {
      "branch": 67,
      "fn": "xPTPConvertor._depositFor",
      "offset": [6896, 7217],
      "op": "JUMPI",
      "path": "6"
    },
    "4111": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6935, 6972],
      "op": "PUSH2",
      "path": "6",
      "statement": 33,
      "value": "0x1018"
    },
    "4114": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6957, 6972],
      "op": "DUP2",
      "path": "6"
    },
    "4115": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6935, 6972],
      "op": "DUP5",
      "path": "6"
    },
    "4116": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6935, 6972],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18C2"
    },
    "4119": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6935, 6972],
      "op": "JUMP",
      "path": "6"
    },
    "4120": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6935, 6972],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4121": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6935, 6972],
      "op": "SWAP3",
      "path": "6"
    },
    "4122": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6935, 6972],
      "op": "POP",
      "path": "6"
    },
    "4123": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6986, 7035],
      "op": "PUSH2",
      "path": "6",
      "statement": 34,
      "value": "0x1065"
    },
    "4126": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7008, 7011],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4159": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7013, 7017],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4192": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7019, 7034],
      "op": "DUP4",
      "path": "6"
    },
    "4193": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6986, 7007],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1228"
    },
    "4196": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [6986, 7035],
      "op": "JUMP",
      "path": "6"
    },
    "4197": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [6986, 7035],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4198": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "PUSH1",
      "path": "6",
      "statement": 35,
      "value": "0x40"
    },
    "4200": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "MLOAD",
      "path": "6"
    },
    "4201": {
      "op": "PUSH4",
      "value": "0xB6B55F25"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4208": {
      "op": "SHL"
    },
    "4209": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "DUP2",
      "path": "6"
    },
    "4210": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "MSTORE",
      "path": "6"
    },
    "4211": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4213": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "DUP2",
      "path": "6"
    },
    "4214": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "ADD",
      "path": "6"
    },
    "4215": {
      "op": "DUP3"
    },
    "4216": {
      "op": "SWAP1"
    },
    "4217": {
      "op": "MSTORE"
    },
    "4218": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7114, 7118],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4257": {
      "op": "SHL"
    },
    "4258": {
      "op": "SUB"
    },
    "4259": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7127],
      "op": "AND",
      "path": "6"
    },
    "4260": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7127],
      "op": "SWAP1",
      "path": "6"
    },
    "4261": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7127],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB6B55F25"
    },
    "4266": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7127],
      "op": "SWAP1",
      "path": "6"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4269": {
      "op": "ADD"
    },
    "4270": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4272": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4274": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "MLOAD",
      "path": "6"
    },
    "4275": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "DUP1",
      "path": "6"
    },
    "4276": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "DUP4",
      "path": "6"
    },
    "4277": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "SUB",
      "path": "6"
    },
    "4278": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "DUP2",
      "path": "6"
    },
    "4279": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4281": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "DUP8",
      "path": "6"
    },
    "4282": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "DUP1",
      "path": "6"
    },
    "4283": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4284": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "ISZERO",
      "path": "6"
    },
    "4285": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "DUP1",
      "path": "6"
    },
    "4286": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "ISZERO",
      "path": "6"
    },
    "4287": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10C7"
    },
    "4290": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "JUMPI",
      "path": "6"
    },
    "4291": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4293": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "DUP1",
      "path": "6"
    },
    "4294": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "REVERT",
      "path": "6"
    },
    "4295": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4296": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "POP",
      "path": "6"
    },
    "4297": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "GAS",
      "path": "6"
    },
    "4298": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "CALL",
      "path": "6"
    },
    "4299": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "ISZERO",
      "path": "6"
    },
    "4300": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "DUP1",
      "path": "6"
    },
    "4301": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "ISZERO",
      "path": "6"
    },
    "4302": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10DB"
    },
    "4305": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "JUMPI",
      "path": "6"
    },
    "4306": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4307": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4309": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "DUP1",
      "path": "6"
    },
    "4310": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "4311": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4312": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4314": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "REVERT",
      "path": "6"
    },
    "4315": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7108, 7144],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4316": {
      "op": "POP"
    },
    "4317": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7158, 7206],
      "op": "PUSH2",
      "path": "6",
      "statement": 36,
      "value": "0x1115"
    },
    "4320": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7158, 7206],
      "op": "SWAP3",
      "path": "6"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "op": "POP"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4329": {
      "op": "SHL"
    },
    "4330": {
      "op": "SUB"
    },
    "4331": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7165, 7169],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4364": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7158, 7183],
      "op": "AND",
      "path": "6"
    },
    "4365": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7158, 7183],
      "op": "SWAP1",
      "path": "6"
    },
    "4366": {
      "op": "POP"
    },
    "4367": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7184, 7188],
      "op": "DUP6",
      "path": "6"
    },
    "4368": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7190, 7205],
      "op": "DUP4",
      "path": "6"
    },
    "4369": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7158, 7183],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1337"
    },
    "4372": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "i",
      "offset": [7158, 7206],
      "op": "JUMP",
      "path": "6"
    },
    "4373": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7158, 7206],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4374": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7231, 7278],
      "op": "PUSH1",
      "path": "6",
      "statement": 37,
      "value": "0x40"
    },
    "4376": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7231, 7278],
      "op": "DUP1",
      "path": "6"
    },
    "4377": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7231, 7278],
      "op": "MLOAD",
      "path": "6"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4384": {
      "op": "SHL"
    },
    "4385": {
      "op": "SUB"
    },
    "4386": {
      "op": "DUP7"
    },
    "4387": {
      "op": "AND"
    },
    "4388": {
      "op": "DUP2"
    },
    "4389": {
      "op": "MSTORE"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4392": {
      "op": "DUP2"
    },
    "4393": {
      "op": "ADD"
    },
    "4394": {
      "op": "DUP8"
    },
    "4395": {
      "op": "SWAP1"
    },
    "4396": {
      "op": "MSTORE"
    },
    "4397": {
      "op": "SWAP1"
    },
    "4398": {
      "op": "DUP2"
    },
    "4399": {
      "op": "ADD"
    },
    "4400": {
      "op": "DUP5"
    },
    "4401": {
      "op": "SWAP1"
    },
    "4402": {
      "op": "MSTORE"
    },
    "4403": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7231, 7278],
      "op": "PUSH32",
      "path": "6",
      "value": "0xA91037BA08E3C8B150648A5AD60512DCEDE6FF057DFB3CB89BBDF11ED528F42C"
    },
    "4436": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7231, 7278],
      "op": "SWAP1",
      "path": "6"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4439": {
      "op": "ADD"
    },
    "4440": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7231, 7278],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4442": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7231, 7278],
      "op": "MLOAD",
      "path": "6"
    },
    "4443": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7231, 7278],
      "op": "DUP1",
      "path": "6"
    },
    "4444": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7231, 7278],
      "op": "SWAP2",
      "path": "6"
    },
    "4445": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7231, 7278],
      "op": "SUB",
      "path": "6"
    },
    "4446": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7231, 7278],
      "op": "SWAP1",
      "path": "6"
    },
    "4447": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [7231, 7278],
      "op": "LOG1",
      "path": "6"
    },
    "4448": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5494, 7285],
      "op": "POP",
      "path": "6"
    },
    "4449": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5494, 7285],
      "op": "POP",
      "path": "6"
    },
    "4450": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5376, 7285],
      "op": "SWAP3",
      "path": "6"
    },
    "4451": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5376, 7285],
      "op": "SWAP2",
      "path": "6"
    },
    "4452": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5376, 7285],
      "op": "POP",
      "path": "6"
    },
    "4453": {
      "fn": "xPTPConvertor._depositFor",
      "offset": [5376, 7285],
      "op": "POP",
      "path": "6"
    },
    "4454": {
      "fn": "xPTPConvertor._depositFor",
      "jump": "o",
      "offset": [5376, 7285],
      "op": "JUMP",
      "path": "6"
    },
    "4455": {
      "fn": "Ownable._transferOwnership",
      "offset": [2270, 2457],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4456": {
      "fn": "Ownable._transferOwnership",
      "offset": [2343, 2359],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4458": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "DUP1",
      "path": "0"
    },
    "4459": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SLOAD",
      "path": "0"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4466": {
      "op": "SHL"
    },
    "4467": {
      "op": "SUB"
    },
    "4468": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP4",
      "path": "0",
      "statement": 38
    },
    "4469": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP2",
      "path": "0"
    },
    "4470": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "AND",
      "path": "0"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4477": {
      "op": "SHL"
    },
    "4478": {
      "op": "SUB"
    },
    "4479": {
      "op": "NOT"
    },
    "4480": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP4",
      "path": "0"
    },
    "4481": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "AND",
      "path": "0"
    },
    "4482": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP2",
      "path": "0"
    },
    "4483": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "OR",
      "path": "0"
    },
    "4484": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP5",
      "path": "0"
    },
    "4485": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "SSTORE",
      "path": "0"
    },
    "4486": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x40"
    },
    "4488": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "MLOAD",
      "path": "0"
    },
    "4489": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP2",
      "path": "0"
    },
    "4490": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP1",
      "path": "0"
    },
    "4491": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP3",
      "path": "0"
    },
    "4492": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "AND",
      "path": "0"
    },
    "4493": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP3",
      "path": "0"
    },
    "4494": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "DUP4",
      "path": "0"
    },
    "4495": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP2",
      "path": "0"
    },
    "4496": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4529": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "SWAP2",
      "path": "0"
    },
    "4530": {
      "fn": "Ownable._transferOwnership",
      "offset": [2343, 2359],
      "op": "SWAP1",
      "path": "0"
    },
    "4531": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "LOG3",
      "path": "0"
    },
    "4532": {
      "fn": "Ownable._transferOwnership",
      "offset": [2333, 2457],
      "op": "POP",
      "path": "0"
    },
    "4533": {
      "fn": "Ownable._transferOwnership",
      "offset": [2270, 2457],
      "op": "POP",
      "path": "0"
    },
    "4534": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [2270, 2457],
      "op": "JUMP",
      "path": "0"
    },
    "4535": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [912, 1153],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4536": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "PUSH1",
      "path": "2",
      "statement": 40,
      "value": "0x40"
    },
    "4538": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "MLOAD",
      "path": "2"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4545": {
      "op": "SHL"
    },
    "4546": {
      "op": "SUB"
    },
    "4547": {
      "op": "DUP1"
    },
    "4548": {
      "op": "DUP6"
    },
    "4549": {
      "op": "AND"
    },
    "4550": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4552": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "DUP4",
      "path": "2"
    },
    "4553": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "ADD",
      "path": "2"
    },
    "4554": {
      "op": "MSTORE"
    },
    "4555": {
      "op": "DUP4"
    },
    "4556": {
      "op": "AND"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4559": {
      "op": "DUP3"
    },
    "4560": {
      "op": "ADD"
    },
    "4561": {
      "op": "MSTORE"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4564": {
      "op": "DUP2"
    },
    "4565": {
      "op": "ADD"
    },
    "4566": {
      "op": "DUP3"
    },
    "4567": {
      "op": "SWAP1"
    },
    "4568": {
      "op": "MSTORE"
    },
    "4569": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1050, 1146],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1222"
    },
    "4572": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1050, 1146],
      "op": "SWAP1",
      "path": "2"
    },
    "4573": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1070, 1075],
      "op": "DUP6",
      "path": "2"
    },
    "4574": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1070, 1075],
      "op": "SWAP1",
      "path": "2"
    },
    "4575": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4582": {
      "op": "SHL"
    },
    "4583": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1100, 1127],
      "op": "SWAP1",
      "path": "2"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4586": {
      "op": "ADD"
    },
    "4587": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4588": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4590": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "DUP1",
      "path": "2"
    },
    "4591": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "MLOAD",
      "path": "2"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4594": {
      "op": "NOT"
    },
    "4595": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "DUP2",
      "path": "2"
    },
    "4596": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "DUP5",
      "path": "2"
    },
    "4597": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "SUB",
      "path": "2"
    },
    "4598": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "ADD",
      "path": "2"
    },
    "4599": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "DUP2",
      "path": "2"
    },
    "4600": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "MSTORE",
      "path": "2"
    },
    "4601": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "SWAP2",
      "path": "2"
    },
    "4602": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "SWAP1",
      "path": "2"
    },
    "4603": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "MSTORE",
      "path": "2"
    },
    "4604": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4606": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "DUP2",
      "path": "2"
    },
    "4607": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "ADD",
      "path": "2"
    },
    "4608": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "DUP1",
      "path": "2"
    },
    "4609": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "MLOAD",
      "path": "2"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4616": {
      "op": "SHL"
    },
    "4617": {
      "op": "SUB"
    },
    "4618": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "AND",
      "path": "2"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4625": {
      "op": "SHL"
    },
    "4626": {
      "op": "SUB"
    },
    "4627": {
      "op": "NOT"
    },
    "4628": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "SWAP1",
      "path": "2"
    },
    "4629": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "SWAP4",
      "path": "2"
    },
    "4630": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "AND",
      "path": "2"
    },
    "4631": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "SWAP3",
      "path": "2"
    },
    "4632": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "SWAP1",
      "path": "2"
    },
    "4633": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "SWAP3",
      "path": "2"
    },
    "4634": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "OR",
      "path": "2"
    },
    "4635": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "SWAP1",
      "path": "2"
    },
    "4636": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "SWAP2",
      "path": "2"
    },
    "4637": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "MSTORE",
      "path": "2"
    },
    "4638": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1050, 1069],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1356"
    },
    "4641": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [1050, 1146],
      "op": "JUMP",
      "path": "2"
    },
    "4642": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1050, 1146],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4643": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [912, 1153],
      "op": "POP",
      "path": "2"
    },
    "4644": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [912, 1153],
      "op": "POP",
      "path": "2"
    },
    "4645": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [912, 1153],
      "op": "POP",
      "path": "2"
    },
    "4646": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [912, 1153],
      "op": "POP",
      "path": "2"
    },
    "4647": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [912, 1153],
      "op": "JUMP",
      "path": "2"
    },
    "4648": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3223, 3482],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4649": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4651": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "MLOAD",
      "path": "6"
    },
    "4652": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4659": {
      "op": "SHL"
    },
    "4660": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP2",
      "path": "6"
    },
    "4661": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "MSTORE",
      "path": "6"
    },
    "4662": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3383, 3387],
      "op": "ADDRESS",
      "path": "6"
    },
    "4663": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4665": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP3",
      "path": "6"
    },
    "4666": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "ADD",
      "path": "6"
    },
    "4667": {
      "op": "MSTORE"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4674": {
      "op": "SHL"
    },
    "4675": {
      "op": "SUB"
    },
    "4676": {
      "op": "DUP4"
    },
    "4677": {
      "op": "DUP2"
    },
    "4678": {
      "op": "AND"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4681": {
      "op": "DUP4"
    },
    "4682": {
      "op": "ADD"
    },
    "4683": {
      "op": "MSTORE"
    },
    "4684": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3397, 3404],
      "op": "DUP3",
      "path": "6"
    },
    "4685": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3397, 3404],
      "op": "SWAP2",
      "path": "6"
    },
    "4686": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3374],
      "op": "SWAP1",
      "path": "6"
    },
    "4687": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3374],
      "op": "DUP6",
      "path": "6"
    },
    "4688": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3374],
      "op": "AND",
      "path": "6"
    },
    "4689": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3374],
      "op": "SWAP1",
      "path": "6"
    },
    "4690": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3374],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "4695": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3374],
      "op": "SWAP1",
      "path": "6"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4698": {
      "op": "ADD"
    },
    "4699": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4701": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4703": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "MLOAD",
      "path": "6"
    },
    "4704": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP1",
      "path": "6"
    },
    "4705": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP4",
      "path": "6"
    },
    "4706": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "SUB",
      "path": "6"
    },
    "4707": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP2",
      "path": "6"
    },
    "4708": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP7",
      "path": "6"
    },
    "4709": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP1",
      "path": "6"
    },
    "4710": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4711": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "ISZERO",
      "path": "6"
    },
    "4712": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP1",
      "path": "6"
    },
    "4713": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "ISZERO",
      "path": "6"
    },
    "4714": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1272"
    },
    "4717": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "JUMPI",
      "path": "6"
    },
    "4718": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4720": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP1",
      "path": "6"
    },
    "4721": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "REVERT",
      "path": "6"
    },
    "4722": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4723": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "POP",
      "path": "6"
    },
    "4724": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "GAS",
      "path": "6"
    },
    "4725": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "STATICCALL",
      "path": "6"
    },
    "4726": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "ISZERO",
      "path": "6"
    },
    "4727": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP1",
      "path": "6"
    },
    "4728": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "ISZERO",
      "path": "6"
    },
    "4729": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1286"
    },
    "4732": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "JUMPI",
      "path": "6"
    },
    "4733": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4734": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4736": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP1",
      "path": "6"
    },
    "4737": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "4738": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4739": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4741": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "REVERT",
      "path": "6"
    },
    "4742": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4743": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "POP",
      "path": "6"
    },
    "4744": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "POP",
      "path": "6"
    },
    "4745": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "POP",
      "path": "6"
    },
    "4746": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "POP",
      "path": "6"
    },
    "4747": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4749": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "MLOAD",
      "path": "6"
    },
    "4750": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4751": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4753": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "NOT",
      "path": "6"
    },
    "4754": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4756": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP3",
      "path": "6"
    },
    "4757": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "ADD",
      "path": "6"
    },
    "4758": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "AND",
      "path": "6"
    },
    "4759": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP3",
      "path": "6"
    },
    "4760": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "ADD",
      "path": "6"
    },
    "4761": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP1",
      "path": "6"
    },
    "4762": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4764": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "MSTORE",
      "path": "6"
    },
    "4765": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "POP",
      "path": "6"
    },
    "4766": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "DUP2",
      "path": "6"
    },
    "4767": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "ADD",
      "path": "6"
    },
    "4768": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "SWAP1",
      "path": "6"
    },
    "4769": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12AA"
    },
    "4772": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "SWAP2",
      "path": "6"
    },
    "4773": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "SWAP1",
      "path": "6"
    },
    "4774": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1745"
    },
    "4777": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "jump": "i",
      "offset": [3351, 3394],
      "op": "JUMP",
      "path": "6"
    },
    "4778": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3394],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4779": {
      "branch": 68,
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3351, 3404],
      "op": "LT",
      "path": "6"
    },
    "4780": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3347, 3476],
      "op": "ISZERO",
      "path": "6"
    },
    "4781": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3347, 3476],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1332"
    },
    "4784": {
      "branch": 68,
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3347, 3476],
      "op": "JUMPI",
      "path": "6"
    },
    "4785": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH1",
      "path": "6",
      "statement": 41,
      "value": "0x40"
    },
    "4787": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "MLOAD",
      "path": "6"
    },
    "4788": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4795": {
      "op": "SHL"
    },
    "4796": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP2",
      "path": "6"
    },
    "4797": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "MSTORE",
      "path": "6"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4804": {
      "op": "SHL"
    },
    "4805": {
      "op": "SUB"
    },
    "4806": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3441],
      "op": "DUP5",
      "path": "6"
    },
    "4807": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3441],
      "op": "AND",
      "path": "6"
    },
    "4808": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3441],
      "op": "SWAP1",
      "path": "6"
    },
    "4809": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3441],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95EA7B3"
    },
    "4814": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3441],
      "op": "SWAP1",
      "path": "6"
    },
    "4815": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12E0"
    },
    "4818": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "SWAP1",
      "path": "6"
    },
    "4819": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3442, 3445],
      "op": "DUP6",
      "path": "6"
    },
    "4820": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3442, 3445],
      "op": "SWAP1",
      "path": "6"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4823": {
      "op": "NOT"
    },
    "4824": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3447, 3464],
      "op": "SWAP1",
      "path": "6"
    },
    "4825": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4827": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "ADD",
      "path": "6"
    },
    "4828": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17AA"
    },
    "4831": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "jump": "i",
      "offset": [3420, 3465],
      "op": "JUMP",
      "path": "6"
    },
    "4832": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4833": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4835": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4837": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "MLOAD",
      "path": "6"
    },
    "4838": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP1",
      "path": "6"
    },
    "4839": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP4",
      "path": "6"
    },
    "4840": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "SUB",
      "path": "6"
    },
    "4841": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP2",
      "path": "6"
    },
    "4842": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4844": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP8",
      "path": "6"
    },
    "4845": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP1",
      "path": "6"
    },
    "4846": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4847": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "ISZERO",
      "path": "6"
    },
    "4848": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP1",
      "path": "6"
    },
    "4849": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "ISZERO",
      "path": "6"
    },
    "4850": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12FA"
    },
    "4853": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "JUMPI",
      "path": "6"
    },
    "4854": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4856": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP1",
      "path": "6"
    },
    "4857": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "REVERT",
      "path": "6"
    },
    "4858": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4859": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "POP",
      "path": "6"
    },
    "4860": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "GAS",
      "path": "6"
    },
    "4861": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "CALL",
      "path": "6"
    },
    "4862": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "ISZERO",
      "path": "6"
    },
    "4863": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP1",
      "path": "6"
    },
    "4864": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "ISZERO",
      "path": "6"
    },
    "4865": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH2",
      "path": "6",
      "value": "0x130E"
    },
    "4868": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "JUMPI",
      "path": "6"
    },
    "4869": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4870": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4872": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP1",
      "path": "6"
    },
    "4873": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "4874": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4875": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4877": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "REVERT",
      "path": "6"
    },
    "4878": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4879": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "POP",
      "path": "6"
    },
    "4880": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "POP",
      "path": "6"
    },
    "4881": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "POP",
      "path": "6"
    },
    "4882": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "POP",
      "path": "6"
    },
    "4883": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4885": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "MLOAD",
      "path": "6"
    },
    "4886": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4887": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4889": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "NOT",
      "path": "6"
    },
    "4890": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4892": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP3",
      "path": "6"
    },
    "4893": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "ADD",
      "path": "6"
    },
    "4894": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "AND",
      "path": "6"
    },
    "4895": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP3",
      "path": "6"
    },
    "4896": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "ADD",
      "path": "6"
    },
    "4897": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP1",
      "path": "6"
    },
    "4898": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4900": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "MSTORE",
      "path": "6"
    },
    "4901": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "POP",
      "path": "6"
    },
    "4902": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "DUP2",
      "path": "6"
    },
    "4903": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "ADD",
      "path": "6"
    },
    "4904": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "SWAP1",
      "path": "6"
    },
    "4905": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1222"
    },
    "4908": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "SWAP2",
      "path": "6"
    },
    "4909": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "SWAP1",
      "path": "6"
    },
    "4910": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3420, 3465],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16BA"
    },
    "4913": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "jump": "i",
      "offset": [3420, 3465],
      "op": "JUMP",
      "path": "6"
    },
    "4914": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3347, 3476],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4915": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3223, 3482],
      "op": "POP",
      "path": "6"
    },
    "4916": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3223, 3482],
      "op": "POP",
      "path": "6"
    },
    "4917": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "offset": [3223, 3482],
      "op": "POP",
      "path": "6"
    },
    "4918": {
      "fn": "xPTPConvertor._approveTokenIfNeeded",
      "jump": "o",
      "offset": [3223, 3482],
      "op": "JUMP",
      "path": "6"
    },
    "4919": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [701, 906],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4920": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 899],
      "op": "PUSH2",
      "path": "2",
      "statement": 42,
      "value": "0x1332"
    },
    "4923": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [833, 838],
      "op": "DUP4",
      "path": "2"
    },
    "4924": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [863, 886],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "4929": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [863, 886],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "4931": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [863, 886],
      "op": "SHL",
      "path": "2"
    },
    "4932": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [888, 890],
      "op": "DUP5",
      "path": "2"
    },
    "4933": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [892, 897],
      "op": "DUP5",
      "path": "2"
    },
    "4934": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4936": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MLOAD",
      "path": "2"
    },
    "4937": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4939": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "ADD",
      "path": "2"
    },
    "4940": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11EB"
    },
    "4943": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP3",
      "path": "2"
    },
    "4944": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP2",
      "path": "2"
    },
    "4945": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP1",
      "path": "2"
    },
    "4946": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17AA"
    },
    "4949": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [840, 898],
      "op": "JUMP",
      "path": "2"
    },
    "4950": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3207, 3913],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4951": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3626, 3649],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4953": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13AB"
    },
    "4956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3680, 3684],
      "op": "DUP3",
      "path": "2"
    },
    "4957": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4959": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MLOAD",
      "path": "2"
    },
    "4960": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP1",
      "path": "2"
    },
    "4961": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4963": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "ADD",
      "path": "2"
    },
    "4964": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4966": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MSTORE",
      "path": "2"
    },
    "4967": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP1",
      "path": "2"
    },
    "4968": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4970": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP2",
      "path": "2"
    },
    "4971": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MSTORE",
      "path": "2"
    },
    "4972": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4974": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "ADD",
      "path": "2"
    },
    "4975": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "5008": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP2",
      "path": "2"
    },
    "5009": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MSTORE",
      "path": "2"
    },
    "5010": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "POP",
      "path": "2"
    },
    "5011": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3660, 3665],
      "op": "DUP6",
      "path": "2"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5018": {
      "op": "SHL"
    },
    "5019": {
      "op": "SUB"
    },
    "5020": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3679],
      "op": "AND",
      "path": "2"
    },
    "5021": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3679],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1428"
    },
    "5024": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3679],
      "op": "SWAP1",
      "path": "2"
    },
    "5025": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "SWAP3",
      "path": "2"
    },
    "5026": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "SWAP2",
      "path": "2"
    },
    "5027": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "SWAP1",
      "path": "2"
    },
    "5028": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5033": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "AND",
      "path": "2"
    },
    "5034": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [3652, 3721],
      "op": "JUMP",
      "path": "2"
    },
    "5035": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5036": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3735, 3752],
      "op": "DUP1",
      "path": "2"
    },
    "5037": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3735, 3752],
      "op": "MLOAD",
      "path": "2"
    },
    "5038": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3626, 3721],
      "op": "SWAP1",
      "path": "2"
    },
    "5039": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3626, 3721],
      "op": "SWAP2",
      "path": "2"
    },
    "5040": {
      "op": "POP"
    },
    "5041": {
      "branch": 74,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3735, 3756],
      "op": "ISZERO",
      "path": "2"
    },
    "5042": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3731, 3907],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1332"
    },
    "5045": {
      "branch": 74,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3731, 3907],
      "op": "JUMPI",
      "path": "2"
    },
    "5046": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3830, 3840],
      "op": "DUP1",
      "path": "2",
      "statement": 43
    },
    "5047": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "DUP1",
      "path": "2"
    },
    "5048": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5050": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "ADD",
      "path": "2"
    },
    "5051": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP1",
      "path": "2"
    },
    "5052": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "MLOAD",
      "path": "2"
    },
    "5053": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "DUP2",
      "path": "2"
    },
    "5054": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "ADD",
      "path": "2"
    },
    "5055": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP1",
      "path": "2"
    },
    "5056": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C9"
    },
    "5059": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP2",
      "path": "2"
    },
    "5060": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP1",
      "path": "2"
    },
    "5061": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16BA"
    },
    "5064": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [3819, 3849],
      "op": "JUMP",
      "path": "2"
    },
    "5065": {
      "branch": 75,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5066": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1332"
    },
    "5069": {
      "branch": 75,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "JUMPI",
      "path": "2"
    },
    "5070": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5072": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "MLOAD",
      "path": "2"
    },
    "5073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5079": {
      "op": "SHL"
    },
    "5080": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "DUP2",
      "path": "2"
    },
    "5081": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "MSTORE",
      "path": "2"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5084": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5086": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "DUP3",
      "path": "2"
    },
    "5087": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "ADD",
      "path": "2"
    },
    "5088": {
      "op": "MSTORE"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5093": {
      "op": "DUP3"
    },
    "5094": {
      "op": "ADD"
    },
    "5095": {
      "op": "MSTORE"
    },
    "5096": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5131": {
      "op": "DUP3"
    },
    "5132": {
      "op": "ADD"
    },
    "5133": {
      "op": "MSTORE"
    },
    "5134": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "5145": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "5147": {
      "op": "SHL"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5150": {
      "op": "DUP3"
    },
    "5151": {
      "op": "ADD"
    },
    "5152": {
      "op": "MSTORE"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5155": {
      "op": "ADD"
    },
    "5156": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH2",
      "path": "2",
      "value": "0x307"
    },
    "5159": {
      "op": "JUMP"
    },
    "5160": {
      "fn": "Address.functionCall",
      "offset": [3514, 3737],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5161": {
      "fn": "Address.functionCall",
      "offset": [3647, 3659],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5163": {
      "fn": "Address.functionCall",
      "offset": [3678, 3730],
      "op": "PUSH2",
      "path": "3",
      "statement": 44,
      "value": "0x1437"
    },
    "5166": {
      "fn": "Address.functionCall",
      "offset": [3700, 3706],
      "op": "DUP5",
      "path": "3"
    },
    "5167": {
      "fn": "Address.functionCall",
      "offset": [3708, 3712],
      "op": "DUP5",
      "path": "3"
    },
    "5168": {
      "fn": "Address.functionCall",
      "offset": [3714, 3715],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5170": {
      "fn": "Address.functionCall",
      "offset": [3717, 3729],
      "op": "DUP6",
      "path": "3"
    },
    "5171": {
      "fn": "Address.functionCall",
      "offset": [3678, 3699],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143F"
    },
    "5174": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [3678, 3730],
      "op": "JUMP",
      "path": "3"
    },
    "5175": {
      "fn": "Address.functionCall",
      "offset": [3678, 3730],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5176": {
      "fn": "Address.functionCall",
      "offset": [3671, 3730],
      "op": "SWAP5",
      "path": "3"
    },
    "5177": {
      "fn": "Address.functionCall",
      "offset": [3514, 3737],
      "op": "SWAP4",
      "path": "3"
    },
    "5178": {
      "op": "POP"
    },
    "5179": {
      "op": "POP"
    },
    "5180": {
      "op": "POP"
    },
    "5181": {
      "op": "POP"
    },
    "5182": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [3514, 3737],
      "op": "JUMP",
      "path": "3"
    },
    "5183": {
      "fn": "Address.functionCallWithValue",
      "offset": [4601, 5100],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5184": {
      "fn": "Address.functionCallWithValue",
      "offset": [4766, 4778],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5186": {
      "fn": "Address.functionCallWithValue",
      "offset": [4823, 4828],
      "op": "DUP3",
      "path": "3",
      "statement": 45
    },
    "5187": {
      "fn": "Address.functionCallWithValue",
      "offset": [4798, 4819],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "5188": {
      "fn": "Address.functionCallWithValue",
      "offset": [4798, 4828],
      "op": "LT",
      "path": "3"
    },
    "5189": {
      "branch": 69,
      "fn": "Address.functionCallWithValue",
      "offset": [4798, 4828],
      "op": "ISZERO",
      "path": "3"
    },
    "5190": {
      "fn": "Address.functionCallWithValue",
      "offset": [4790, 4871],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14A0"
    },
    "5193": {
      "branch": 69,
      "fn": "Address.functionCallWithValue",
      "offset": [4790, 4871],
      "op": "JUMPI",
      "path": "3"
    },
    "5194": {
      "fn": "Address.functionCallWithValue",
      "offset": [4790, 4871],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5196": {
      "fn": "Address.functionCallWithValue",
      "offset": [4790, 4871],
      "op": "MLOAD",
      "path": "3"
    },
    "5197": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5203": {
      "op": "SHL"
    },
    "5204": {
      "fn": "Address.functionCallWithValue",
      "offset": [4790, 4871],
      "op": "DUP2",
      "path": "3"
    },
    "5205": {
      "fn": "Address.functionCallWithValue",
      "offset": [4790, 4871],
      "op": "MSTORE",
      "path": "3"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5208": {
      "fn": "Address.functionCallWithValue",
      "offset": [4790, 4871],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5210": {
      "fn": "Address.functionCallWithValue",
      "offset": [4790, 4871],
      "op": "DUP3",
      "path": "3"
    },
    "5211": {
      "fn": "Address.functionCallWithValue",
      "offset": [4790, 4871],
      "op": "ADD",
      "path": "3"
    },
    "5212": {
      "op": "MSTORE"
    },
    "5213": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5215": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5217": {
      "op": "DUP3"
    },
    "5218": {
      "op": "ADD"
    },
    "5219": {
      "op": "MSTORE"
    },
    "5220": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5255": {
      "op": "DUP3"
    },
    "5256": {
      "op": "ADD"
    },
    "5257": {
      "op": "MSTORE"
    },
    "5258": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "5267": {
      "op": "SHL"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5270": {
      "op": "DUP3"
    },
    "5271": {
      "op": "ADD"
    },
    "5272": {
      "op": "MSTORE"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5275": {
      "op": "ADD"
    },
    "5276": {
      "fn": "Address.functionCallWithValue",
      "offset": [4790, 4871],
      "op": "PUSH2",
      "path": "3",
      "value": "0x307"
    },
    "5279": {
      "op": "JUMP"
    },
    "5280": {
      "fn": "Address.functionCallWithValue",
      "offset": [4790, 4871],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5281": {
      "fn": "Address.isContract",
      "offset": [1087, 1107],
      "op": "DUP5",
      "path": "3"
    },
    "5282": {
      "fn": "Address.isContract",
      "offset": [1087, 1107],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "5283": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "PUSH2",
      "path": "3",
      "statement": 46,
      "value": "0x14EE"
    },
    "5286": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "JUMPI",
      "path": "3"
    },
    "5287": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5289": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "MLOAD",
      "path": "3"
    },
    "5290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5296": {
      "op": "SHL"
    },
    "5297": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "DUP2",
      "path": "3"
    },
    "5298": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "MSTORE",
      "path": "3"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5301": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5303": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "DUP3",
      "path": "3"
    },
    "5304": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "ADD",
      "path": "3"
    },
    "5305": {
      "op": "MSTORE"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5310": {
      "op": "DUP3"
    },
    "5311": {
      "op": "ADD"
    },
    "5312": {
      "op": "MSTORE"
    },
    "5313": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5348": {
      "op": "DUP3"
    },
    "5349": {
      "op": "ADD"
    },
    "5350": {
      "op": "MSTORE"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5353": {
      "op": "ADD"
    },
    "5354": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "PUSH2",
      "path": "3",
      "value": "0x307"
    },
    "5357": {
      "op": "JUMP"
    },
    "5358": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5359": {
      "fn": "Address.functionCallWithValue",
      "offset": [4953, 4965],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5361": {
      "fn": "Address.functionCallWithValue",
      "offset": [4967, 4990],
      "op": "DUP1",
      "path": "3"
    },
    "5362": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5000],
      "op": "DUP7",
      "path": "3"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5369": {
      "op": "SHL"
    },
    "5370": {
      "op": "SUB"
    },
    "5371": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5005],
      "op": "AND",
      "path": "3"
    },
    "5372": {
      "fn": "Address.functionCallWithValue",
      "offset": [5013, 5018],
      "op": "DUP6",
      "path": "3"
    },
    "5373": {
      "fn": "Address.functionCallWithValue",
      "offset": [5020, 5024],
      "op": "DUP8",
      "path": "3"
    },
    "5374": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5376": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "MLOAD",
      "path": "3"
    },
    "5377": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH2",
      "path": "3",
      "value": "0x150A"
    },
    "5380": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "SWAP2",
      "path": "3"
    },
    "5381": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "SWAP1",
      "path": "3"
    },
    "5382": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH2",
      "path": "3",
      "value": "0x178E"
    },
    "5385": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [4994, 5025],
      "op": "JUMP",
      "path": "3"
    },
    "5386": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5387": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5389": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5391": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "MLOAD",
      "path": "3"
    },
    "5392": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP1",
      "path": "3"
    },
    "5393": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP4",
      "path": "3"
    },
    "5394": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "SUB",
      "path": "3"
    },
    "5395": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP2",
      "path": "3"
    },
    "5396": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP6",
      "path": "3"
    },
    "5397": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP8",
      "path": "3"
    },
    "5398": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "GAS",
      "path": "3"
    },
    "5399": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "CALL",
      "path": "3"
    },
    "5400": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "SWAP3",
      "path": "3"
    },
    "5401": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "POP",
      "path": "3"
    },
    "5402": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "POP",
      "path": "3"
    },
    "5403": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "POP",
      "path": "3"
    },
    "5404": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5405": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP1",
      "path": "3"
    },
    "5406": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5408": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP2",
      "path": "3"
    },
    "5409": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "EQ",
      "path": "3"
    },
    "5410": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1547"
    },
    "5413": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "JUMPI",
      "path": "3"
    },
    "5414": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5416": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "MLOAD",
      "path": "3"
    },
    "5417": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "SWAP2",
      "path": "3"
    },
    "5418": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "POP",
      "path": "3"
    },
    "5419": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5421": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "NOT",
      "path": "3"
    },
    "5422": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "5424": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5425": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "ADD",
      "path": "3"
    },
    "5426": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "AND",
      "path": "3"
    },
    "5427": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP3",
      "path": "3"
    },
    "5428": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "ADD",
      "path": "3"
    },
    "5429": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5431": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "MSTORE",
      "path": "3"
    },
    "5432": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5433": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP3",
      "path": "3"
    },
    "5434": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "MSTORE",
      "path": "3"
    },
    "5435": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5436": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5438": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5440": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP5",
      "path": "3"
    },
    "5441": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "ADD",
      "path": "3"
    },
    "5442": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5443": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH2",
      "path": "3",
      "value": "0x154C"
    },
    "5446": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "JUMP",
      "path": "3"
    },
    "5447": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5448": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5450": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "SWAP2",
      "path": "3"
    },
    "5451": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "POP",
      "path": "3"
    },
    "5452": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5453": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "POP",
      "path": "3"
    },
    "5454": {
      "fn": "Address.functionCallWithValue",
      "offset": [4952, 5025],
      "op": "SWAP2",
      "path": "3"
    },
    "5455": {
      "fn": "Address.functionCallWithValue",
      "offset": [4952, 5025],
      "op": "POP",
      "path": "3"
    },
    "5456": {
      "fn": "Address.functionCallWithValue",
      "offset": [4952, 5025],
      "op": "SWAP2",
      "path": "3"
    },
    "5457": {
      "fn": "Address.functionCallWithValue",
      "offset": [4952, 5025],
      "op": "POP",
      "path": "3"
    },
    "5458": {
      "fn": "Address.functionCallWithValue",
      "offset": [5042, 5093],
      "op": "PUSH2",
      "path": "3",
      "statement": 47,
      "value": "0x155C"
    },
    "5461": {
      "fn": "Address.functionCallWithValue",
      "offset": [5059, 5066],
      "op": "DUP3",
      "path": "3"
    },
    "5462": {
      "fn": "Address.functionCallWithValue",
      "offset": [5068, 5078],
      "op": "DUP3",
      "path": "3"
    },
    "5463": {
      "fn": "Address.functionCallWithValue",
      "offset": [5080, 5092],
      "op": "DUP7",
      "path": "3"
    },
    "5464": {
      "fn": "Address.functionCallWithValue",
      "offset": [5042, 5058],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1567"
    },
    "5467": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [5042, 5093],
      "op": "JUMP",
      "path": "3"
    },
    "5468": {
      "fn": "Address.functionCallWithValue",
      "offset": [5042, 5093],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5469": {
      "fn": "Address.functionCallWithValue",
      "offset": [5035, 5093],
      "op": "SWAP8",
      "path": "3"
    },
    "5470": {
      "fn": "Address.functionCallWithValue",
      "offset": [4601, 5100],
      "op": "SWAP7",
      "path": "3"
    },
    "5471": {
      "op": "POP"
    },
    "5472": {
      "op": "POP"
    },
    "5473": {
      "op": "POP"
    },
    "5474": {
      "op": "POP"
    },
    "5475": {
      "op": "POP"
    },
    "5476": {
      "op": "POP"
    },
    "5477": {
      "op": "POP"
    },
    "5478": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [4601, 5100],
      "op": "JUMP",
      "path": "3"
    },
    "5479": {
      "fn": "Address.verifyCallResult",
      "offset": [7214, 7906],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5480": {
      "fn": "Address.verifyCallResult",
      "offset": [7360, 7372],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5482": {
      "branch": 70,
      "fn": "Address.verifyCallResult",
      "offset": [7388, 7395],
      "op": "DUP4",
      "path": "3"
    },
    "5483": {
      "fn": "Address.verifyCallResult",
      "offset": [7384, 7900],
      "op": "ISZERO",
      "path": "3"
    },
    "5484": {
      "fn": "Address.verifyCallResult",
      "offset": [7384, 7900],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1576"
    },
    "5487": {
      "branch": 70,
      "fn": "Address.verifyCallResult",
      "offset": [7384, 7900],
      "op": "JUMPI",
      "path": "3"
    },
    "5488": {
      "op": "POP"
    },
    "5489": {
      "fn": "Address.verifyCallResult",
      "offset": [7418, 7428],
      "op": "DUP2",
      "path": "3",
      "statement": 48
    },
    "5490": {
      "fn": "Address.verifyCallResult",
      "offset": [7411, 7428],
      "op": "PUSH2",
      "path": "3",
      "value": "0x95E"
    },
    "5493": {
      "fn": "Address.verifyCallResult",
      "offset": [7411, 7428],
      "op": "JUMP",
      "path": "3"
    },
    "5494": {
      "fn": "Address.verifyCallResult",
      "offset": [7384, 7900],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5495": {
      "fn": "Address.verifyCallResult",
      "offset": [7529, 7546],
      "op": "DUP3",
      "path": "3"
    },
    "5496": {
      "fn": "Address.verifyCallResult",
      "offset": [7529, 7546],
      "op": "MLOAD",
      "path": "3"
    },
    "5497": {
      "branch": 71,
      "fn": "Address.verifyCallResult",
      "offset": [7529, 7550],
      "op": "ISZERO",
      "path": "3"
    },
    "5498": {
      "fn": "Address.verifyCallResult",
      "offset": [7525, 7890],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1586"
    },
    "5501": {
      "branch": 71,
      "fn": "Address.verifyCallResult",
      "offset": [7525, 7890],
      "op": "JUMPI",
      "path": "3"
    },
    "5502": {
      "fn": "Address.verifyCallResult",
      "offset": [7723, 7733],
      "op": "DUP3",
      "path": "3"
    },
    "5503": {
      "fn": "Address.verifyCallResult",
      "offset": [7717, 7734],
      "op": "MLOAD",
      "path": "3"
    },
    "5504": {
      "fn": "Address.verifyCallResult",
      "offset": [7783, 7798],
      "op": "DUP1",
      "path": "3"
    },
    "5505": {
      "fn": "Address.verifyCallResult",
      "offset": [7770, 7780],
      "op": "DUP5",
      "path": "3"
    },
    "5506": {
      "fn": "Address.verifyCallResult",
      "offset": [7766, 7768],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5508": {
      "fn": "Address.verifyCallResult",
      "offset": [7762, 7781],
      "op": "ADD",
      "path": "3"
    },
    "5509": {
      "fn": "Address.verifyCallResult",
      "offset": [7755, 7799],
      "op": "REVERT",
      "path": "3"
    },
    "5510": {
      "fn": "Address.verifyCallResult",
      "offset": [7525, 7890],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5511": {
      "fn": "Address.verifyCallResult",
      "offset": [7862, 7874],
      "op": "DUP2",
      "path": "3",
      "statement": 49
    },
    "5512": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5514": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "MLOAD",
      "path": "3"
    },
    "5515": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5521": {
      "op": "SHL"
    },
    "5522": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "DUP2",
      "path": "3"
    },
    "5523": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "MSTORE",
      "path": "3"
    },
    "5524": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5526": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "ADD",
      "path": "3"
    },
    "5527": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "PUSH2",
      "path": "3",
      "value": "0x307"
    },
    "5530": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "SWAP2",
      "path": "3"
    },
    "5531": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "SWAP1",
      "path": "3"
    },
    "5532": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17C3"
    },
    "5535": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [7855, 7875],
      "op": "JUMP",
      "path": "3"
    },
    "5536": {
      "op": "JUMPDEST"
    },
    "5537": {
      "op": "DUP1"
    },
    "5538": {
      "op": "MLOAD"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5545": {
      "op": "SHL"
    },
    "5546": {
      "op": "SUB"
    },
    "5547": {
      "op": "DUP2"
    },
    "5548": {
      "op": "AND"
    },
    "5549": {
      "op": "DUP2"
    },
    "5550": {
      "op": "EQ"
    },
    "5551": {
      "op": "PUSH2",
      "value": "0x15B7"
    },
    "5554": {
      "op": "JUMPI"
    },
    "5555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5557": {
      "op": "DUP1"
    },
    "5558": {
      "op": "REVERT"
    },
    "5559": {
      "op": "JUMPDEST"
    },
    "5560": {
      "op": "SWAP2"
    },
    "5561": {
      "op": "SWAP1"
    },
    "5562": {
      "op": "POP"
    },
    "5563": {
      "jump": "o",
      "op": "JUMP"
    },
    "5564": {
      "op": "JUMPDEST"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5569": {
      "op": "DUP3"
    },
    "5570": {
      "op": "DUP5"
    },
    "5571": {
      "op": "SUB"
    },
    "5572": {
      "op": "SLT"
    },
    "5573": {
      "op": "ISZERO"
    },
    "5574": {
      "op": "PUSH2",
      "value": "0x15CE"
    },
    "5577": {
      "op": "JUMPI"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5580": {
      "op": "DUP1"
    },
    "5581": {
      "op": "REVERT"
    },
    "5582": {
      "op": "JUMPDEST"
    },
    "5583": {
      "op": "DUP2"
    },
    "5584": {
      "op": "CALLDATALOAD"
    },
    "5585": {
      "op": "PUSH2",
      "value": "0x95E"
    },
    "5588": {
      "op": "DUP2"
    },
    "5589": {
      "op": "PUSH2",
      "value": "0x19A0"
    },
    "5592": {
      "jump": "i",
      "op": "JUMP"
    },
    "5593": {
      "op": "JUMPDEST"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5598": {
      "op": "DUP3"
    },
    "5599": {
      "op": "DUP5"
    },
    "5600": {
      "op": "SUB"
    },
    "5601": {
      "op": "SLT"
    },
    "5602": {
      "op": "ISZERO"
    },
    "5603": {
      "op": "PUSH2",
      "value": "0x15EB"
    },
    "5606": {
      "op": "JUMPI"
    },
    "5607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5609": {
      "op": "DUP1"
    },
    "5610": {
      "op": "REVERT"
    },
    "5611": {
      "op": "JUMPDEST"
    },
    "5612": {
      "op": "DUP2"
    },
    "5613": {
      "op": "MLOAD"
    },
    "5614": {
      "op": "PUSH2",
      "value": "0x95E"
    },
    "5617": {
      "op": "DUP2"
    },
    "5618": {
      "op": "PUSH2",
      "value": "0x19A0"
    },
    "5621": {
      "jump": "i",
      "op": "JUMP"
    },
    "5622": {
      "op": "JUMPDEST"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5627": {
      "op": "DUP1"
    },
    "5628": {
      "op": "DUP4"
    },
    "5629": {
      "op": "DUP6"
    },
    "5630": {
      "op": "SUB"
    },
    "5631": {
      "op": "SLT"
    },
    "5632": {
      "op": "ISZERO"
    },
    "5633": {
      "op": "PUSH2",
      "value": "0x1609"
    },
    "5636": {
      "op": "JUMPI"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5639": {
      "op": "DUP1"
    },
    "5640": {
      "op": "REVERT"
    },
    "5641": {
      "op": "JUMPDEST"
    },
    "5642": {
      "op": "DUP3"
    },
    "5643": {
      "op": "MLOAD"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5650": {
      "op": "SHL"
    },
    "5651": {
      "op": "SUB"
    },
    "5652": {
      "op": "DUP1"
    },
    "5653": {
      "op": "DUP3"
    },
    "5654": {
      "op": "GT"
    },
    "5655": {
      "op": "ISZERO"
    },
    "5656": {
      "op": "PUSH2",
      "value": "0x1620"
    },
    "5659": {
      "op": "JUMPI"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5662": {
      "op": "DUP1"
    },
    "5663": {
      "op": "REVERT"
    },
    "5664": {
      "op": "JUMPDEST"
    },
    "5665": {
      "op": "DUP2"
    },
    "5666": {
      "op": "DUP6"
    },
    "5667": {
      "op": "ADD"
    },
    "5668": {
      "op": "SWAP2"
    },
    "5669": {
      "op": "POP"
    },
    "5670": {
      "op": "DUP6"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5673": {
      "op": "DUP4"
    },
    "5674": {
      "op": "ADD"
    },
    "5675": {
      "op": "SLT"
    },
    "5676": {
      "op": "PUSH2",
      "value": "0x1634"
    },
    "5679": {
      "op": "JUMPI"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5682": {
      "op": "DUP1"
    },
    "5683": {
      "op": "REVERT"
    },
    "5684": {
      "op": "JUMPDEST"
    },
    "5685": {
      "op": "DUP2"
    },
    "5686": {
      "op": "MLOAD"
    },
    "5687": {
      "op": "DUP2"
    },
    "5688": {
      "op": "DUP2"
    },
    "5689": {
      "op": "GT"
    },
    "5690": {
      "op": "ISZERO"
    },
    "5691": {
      "op": "PUSH2",
      "value": "0x1646"
    },
    "5694": {
      "op": "JUMPI"
    },
    "5695": {
      "op": "PUSH2",
      "value": "0x1646"
    },
    "5698": {
      "op": "PUSH2",
      "value": "0x198A"
    },
    "5701": {
      "jump": "i",
      "op": "JUMP"
    },
    "5702": {
      "op": "JUMPDEST"
    },
    "5703": {
      "op": "DUP1"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5706": {
      "op": "SHL"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5709": {
      "op": "MLOAD"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5712": {
      "op": "NOT"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5715": {
      "op": "DUP4"
    },
    "5716": {
      "op": "ADD"
    },
    "5717": {
      "op": "AND"
    },
    "5718": {
      "op": "DUP2"
    },
    "5719": {
      "op": "ADD"
    },
    "5720": {
      "op": "DUP2"
    },
    "5721": {
      "op": "DUP2"
    },
    "5722": {
      "op": "LT"
    },
    "5723": {
      "op": "DUP6"
    },
    "5724": {
      "op": "DUP3"
    },
    "5725": {
      "op": "GT"
    },
    "5726": {
      "op": "OR"
    },
    "5727": {
      "op": "ISZERO"
    },
    "5728": {
      "op": "PUSH2",
      "value": "0x166B"
    },
    "5731": {
      "op": "JUMPI"
    },
    "5732": {
      "op": "PUSH2",
      "value": "0x166B"
    },
    "5735": {
      "op": "PUSH2",
      "value": "0x198A"
    },
    "5738": {
      "jump": "i",
      "op": "JUMP"
    },
    "5739": {
      "op": "JUMPDEST"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5742": {
      "op": "MSTORE"
    },
    "5743": {
      "op": "DUP3"
    },
    "5744": {
      "op": "DUP2"
    },
    "5745": {
      "op": "MSTORE"
    },
    "5746": {
      "op": "DUP6"
    },
    "5747": {
      "op": "DUP2"
    },
    "5748": {
      "op": "ADD"
    },
    "5749": {
      "op": "SWAP4"
    },
    "5750": {
      "op": "POP"
    },
    "5751": {
      "op": "DUP5"
    },
    "5752": {
      "op": "DUP7"
    },
    "5753": {
      "op": "ADD"
    },
    "5754": {
      "op": "DUP3"
    },
    "5755": {
      "op": "DUP7"
    },
    "5756": {
      "op": "ADD"
    },
    "5757": {
      "op": "DUP8"
    },
    "5758": {
      "op": "ADD"
    },
    "5759": {
      "op": "DUP11"
    },
    "5760": {
      "op": "LT"
    },
    "5761": {
      "op": "ISZERO"
    },
    "5762": {
      "op": "PUSH2",
      "value": "0x168A"
    },
    "5765": {
      "op": "JUMPI"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5768": {
      "op": "DUP1"
    },
    "5769": {
      "op": "REVERT"
    },
    "5770": {
      "op": "JUMPDEST"
    },
    "5771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5773": {
      "op": "SWAP6"
    },
    "5774": {
      "op": "POP"
    },
    "5775": {
      "op": "JUMPDEST"
    },
    "5776": {
      "op": "DUP4"
    },
    "5777": {
      "op": "DUP7"
    },
    "5778": {
      "op": "LT"
    },
    "5779": {
      "op": "ISZERO"
    },
    "5780": {
      "op": "PUSH2",
      "value": "0x16AD"
    },
    "5783": {
      "op": "JUMPI"
    },
    "5784": {
      "op": "DUP1"
    },
    "5785": {
      "op": "MLOAD"
    },
    "5786": {
      "op": "DUP6"
    },
    "5787": {
      "op": "MSTORE"
    },
    "5788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5790": {
      "op": "SWAP6"
    },
    "5791": {
      "op": "SWAP1"
    },
    "5792": {
      "op": "SWAP6"
    },
    "5793": {
      "op": "ADD"
    },
    "5794": {
      "op": "SWAP5"
    },
    "5795": {
      "op": "SWAP4"
    },
    "5796": {
      "op": "DUP7"
    },
    "5797": {
      "op": "ADD"
    },
    "5798": {
      "op": "SWAP4"
    },
    "5799": {
      "op": "DUP7"
    },
    "5800": {
      "op": "ADD"
    },
    "5801": {
      "op": "PUSH2",
      "value": "0x168F"
    },
    "5804": {
      "op": "JUMP"
    },
    "5805": {
      "op": "JUMPDEST"
    },
    "5806": {
      "op": "POP"
    },
    "5807": {
      "op": "SWAP9"
    },
    "5808": {
      "op": "SWAP8"
    },
    "5809": {
      "op": "POP"
    },
    "5810": {
      "op": "POP"
    },
    "5811": {
      "op": "POP"
    },
    "5812": {
      "op": "POP"
    },
    "5813": {
      "op": "POP"
    },
    "5814": {
      "op": "POP"
    },
    "5815": {
      "op": "POP"
    },
    "5816": {
      "op": "POP"
    },
    "5817": {
      "jump": "o",
      "op": "JUMP"
    },
    "5818": {
      "op": "JUMPDEST"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5823": {
      "op": "DUP3"
    },
    "5824": {
      "op": "DUP5"
    },
    "5825": {
      "op": "SUB"
    },
    "5826": {
      "op": "SLT"
    },
    "5827": {
      "op": "ISZERO"
    },
    "5828": {
      "op": "PUSH2",
      "value": "0x16CC"
    },
    "5831": {
      "op": "JUMPI"
    },
    "5832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5834": {
      "op": "DUP1"
    },
    "5835": {
      "op": "REVERT"
    },
    "5836": {
      "op": "JUMPDEST"
    },
    "5837": {
      "op": "DUP2"
    },
    "5838": {
      "op": "MLOAD"
    },
    "5839": {
      "op": "DUP1"
    },
    "5840": {
      "op": "ISZERO"
    },
    "5841": {
      "op": "ISZERO"
    },
    "5842": {
      "op": "DUP2"
    },
    "5843": {
      "op": "EQ"
    },
    "5844": {
      "op": "PUSH2",
      "value": "0x95E"
    },
    "5847": {
      "op": "JUMPI"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5850": {
      "op": "DUP1"
    },
    "5851": {
      "op": "REVERT"
    },
    "5852": {
      "op": "JUMPDEST"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5855": {
      "op": "DUP1"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5860": {
      "op": "DUP5"
    },
    "5861": {
      "op": "DUP7"
    },
    "5862": {
      "op": "SUB"
    },
    "5863": {
      "op": "SLT"
    },
    "5864": {
      "op": "ISZERO"
    },
    "5865": {
      "op": "PUSH2",
      "value": "0x16F1"
    },
    "5868": {
      "op": "JUMPI"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5871": {
      "op": "DUP1"
    },
    "5872": {
      "op": "REVERT"
    },
    "5873": {
      "op": "JUMPDEST"
    },
    "5874": {
      "op": "PUSH2",
      "value": "0x16FA"
    },
    "5877": {
      "op": "DUP5"
    },
    "5878": {
      "op": "PUSH2",
      "value": "0x15A0"
    },
    "5881": {
      "jump": "i",
      "op": "JUMP"
    },
    "5882": {
      "op": "JUMPDEST"
    },
    "5883": {
      "op": "SWAP3"
    },
    "5884": {
      "op": "POP"
    },
    "5885": {
      "op": "PUSH2",
      "value": "0x1708"
    },
    "5888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5890": {
      "op": "DUP6"
    },
    "5891": {
      "op": "ADD"
    },
    "5892": {
      "op": "PUSH2",
      "value": "0x15A0"
    },
    "5895": {
      "jump": "i",
      "op": "JUMP"
    },
    "5896": {
      "op": "JUMPDEST"
    },
    "5897": {
      "op": "SWAP2"
    },
    "5898": {
      "op": "POP"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5901": {
      "op": "DUP5"
    },
    "5902": {
      "op": "ADD"
    },
    "5903": {
      "op": "MLOAD"
    },
    "5904": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5909": {
      "op": "DUP2"
    },
    "5910": {
      "op": "AND"
    },
    "5911": {
      "op": "DUP2"
    },
    "5912": {
      "op": "EQ"
    },
    "5913": {
      "op": "PUSH2",
      "value": "0x1721"
    },
    "5916": {
      "op": "JUMPI"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5919": {
      "op": "DUP1"
    },
    "5920": {
      "op": "REVERT"
    },
    "5921": {
      "op": "JUMPDEST"
    },
    "5922": {
      "op": "DUP1"
    },
    "5923": {
      "op": "SWAP2"
    },
    "5924": {
      "op": "POP"
    },
    "5925": {
      "op": "POP"
    },
    "5926": {
      "op": "SWAP3"
    },
    "5927": {
      "op": "POP"
    },
    "5928": {
      "op": "SWAP3"
    },
    "5929": {
      "op": "POP"
    },
    "5930": {
      "op": "SWAP3"
    },
    "5931": {
      "jump": "o",
      "op": "JUMP"
    },
    "5932": {
      "op": "JUMPDEST"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5937": {
      "op": "DUP3"
    },
    "5938": {
      "op": "DUP5"
    },
    "5939": {
      "op": "SUB"
    },
    "5940": {
      "op": "SLT"
    },
    "5941": {
      "op": "ISZERO"
    },
    "5942": {
      "op": "PUSH2",
      "value": "0x173E"
    },
    "5945": {
      "op": "JUMPI"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5948": {
      "op": "DUP1"
    },
    "5949": {
      "op": "REVERT"
    },
    "5950": {
      "op": "JUMPDEST"
    },
    "5951": {
      "op": "POP"
    },
    "5952": {
      "op": "CALLDATALOAD"
    },
    "5953": {
      "op": "SWAP2"
    },
    "5954": {
      "op": "SWAP1"
    },
    "5955": {
      "op": "POP"
    },
    "5956": {
      "jump": "o",
      "op": "JUMP"
    },
    "5957": {
      "op": "JUMPDEST"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5962": {
      "op": "DUP3"
    },
    "5963": {
      "op": "DUP5"
    },
    "5964": {
      "op": "SUB"
    },
    "5965": {
      "op": "SLT"
    },
    "5966": {
      "op": "ISZERO"
    },
    "5967": {
      "op": "PUSH2",
      "value": "0x1757"
    },
    "5970": {
      "op": "JUMPI"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5973": {
      "op": "DUP1"
    },
    "5974": {
      "op": "REVERT"
    },
    "5975": {
      "op": "JUMPDEST"
    },
    "5976": {
      "op": "POP"
    },
    "5977": {
      "op": "MLOAD"
    },
    "5978": {
      "op": "SWAP2"
    },
    "5979": {
      "op": "SWAP1"
    },
    "5980": {
      "op": "POP"
    },
    "5981": {
      "jump": "o",
      "op": "JUMP"
    },
    "5982": {
      "op": "JUMPDEST"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5985": {
      "op": "DUP1"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5988": {
      "op": "DUP4"
    },
    "5989": {
      "op": "DUP6"
    },
    "5990": {
      "op": "SUB"
    },
    "5991": {
      "op": "SLT"
    },
    "5992": {
      "op": "ISZERO"
    },
    "5993": {
      "op": "PUSH2",
      "value": "0x1771"
    },
    "5996": {
      "op": "JUMPI"
    },
    "5997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5999": {
      "op": "DUP1"
    },
    "6000": {
      "op": "REVERT"
    },
    "6001": {
      "op": "JUMPDEST"
    },
    "6002": {
      "op": "DUP3"
    },
    "6003": {
      "op": "CALLDATALOAD"
    },
    "6004": {
      "op": "SWAP2"
    },
    "6005": {
      "op": "POP"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6008": {
      "op": "DUP4"
    },
    "6009": {
      "op": "ADD"
    },
    "6010": {
      "op": "CALLDATALOAD"
    },
    "6011": {
      "op": "PUSH2",
      "value": "0x1783"
    },
    "6014": {
      "op": "DUP2"
    },
    "6015": {
      "op": "PUSH2",
      "value": "0x19A0"
    },
    "6018": {
      "jump": "i",
      "op": "JUMP"
    },
    "6019": {
      "op": "JUMPDEST"
    },
    "6020": {
      "op": "DUP1"
    },
    "6021": {
      "op": "SWAP2"
    },
    "6022": {
      "op": "POP"
    },
    "6023": {
      "op": "POP"
    },
    "6024": {
      "op": "SWAP3"
    },
    "6025": {
      "op": "POP"
    },
    "6026": {
      "op": "SWAP3"
    },
    "6027": {
      "op": "SWAP1"
    },
    "6028": {
      "op": "POP"
    },
    "6029": {
      "jump": "o",
      "op": "JUMP"
    },
    "6030": {
      "op": "JUMPDEST"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6033": {
      "op": "DUP3"
    },
    "6034": {
      "op": "MLOAD"
    },
    "6035": {
      "op": "PUSH2",
      "value": "0x17A0"
    },
    "6038": {
      "op": "DUP2"
    },
    "6039": {
      "op": "DUP5"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6042": {
      "op": "DUP8"
    },
    "6043": {
      "op": "ADD"
    },
    "6044": {
      "op": "PUSH2",
      "value": "0x1932"
    },
    "6047": {
      "jump": "i",
      "op": "JUMP"
    },
    "6048": {
      "op": "JUMPDEST"
    },
    "6049": {
      "op": "SWAP2"
    },
    "6050": {
      "op": "SWAP1"
    },
    "6051": {
      "op": "SWAP2"
    },
    "6052": {
      "op": "ADD"
    },
    "6053": {
      "op": "SWAP3"
    },
    "6054": {
      "op": "SWAP2"
    },
    "6055": {
      "op": "POP"
    },
    "6056": {
      "op": "POP"
    },
    "6057": {
      "jump": "o",
      "op": "JUMP"
    },
    "6058": {
      "op": "JUMPDEST"
    },
    "6059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6065": {
      "op": "SHL"
    },
    "6066": {
      "op": "SUB"
    },
    "6067": {
      "op": "SWAP3"
    },
    "6068": {
      "op": "SWAP1"
    },
    "6069": {
      "op": "SWAP3"
    },
    "6070": {
      "op": "AND"
    },
    "6071": {
      "op": "DUP3"
    },
    "6072": {
      "op": "MSTORE"
    },
    "6073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6075": {
      "op": "DUP3"
    },
    "6076": {
      "op": "ADD"
    },
    "6077": {
      "op": "MSTORE"
    },
    "6078": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6080": {
      "op": "ADD"
    },
    "6081": {
      "op": "SWAP1"
    },
    "6082": {
      "jump": "o",
      "op": "JUMP"
    },
    "6083": {
      "op": "JUMPDEST"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6086": {
      "op": "DUP2"
    },
    "6087": {
      "op": "MSTORE"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6090": {
      "op": "DUP3"
    },
    "6091": {
      "op": "MLOAD"
    },
    "6092": {
      "op": "DUP1"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6095": {
      "op": "DUP5"
    },
    "6096": {
      "op": "ADD"
    },
    "6097": {
      "op": "MSTORE"
    },
    "6098": {
      "op": "PUSH2",
      "value": "0x17E2"
    },
    "6101": {
      "op": "DUP2"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6104": {
      "op": "DUP6"
    },
    "6105": {
      "op": "ADD"
    },
    "6106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6108": {
      "op": "DUP8"
    },
    "6109": {
      "op": "ADD"
    },
    "6110": {
      "op": "PUSH2",
      "value": "0x1932"
    },
    "6113": {
      "jump": "i",
      "op": "JUMP"
    },
    "6114": {
      "op": "JUMPDEST"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6117": {
      "op": "ADD"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6120": {
      "op": "NOT"
    },
    "6121": {
      "op": "AND"
    },
    "6122": {
      "op": "SWAP2"
    },
    "6123": {
      "op": "SWAP1"
    },
    "6124": {
      "op": "SWAP2"
    },
    "6125": {
      "op": "ADD"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6128": {
      "op": "ADD"
    },
    "6129": {
      "op": "SWAP3"
    },
    "6130": {
      "op": "SWAP2"
    },
    "6131": {
      "op": "POP"
    },
    "6132": {
      "op": "POP"
    },
    "6133": {
      "jump": "o",
      "op": "JUMP"
    },
    "6134": {
      "op": "JUMPDEST"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6137": {
      "op": "DUP1"
    },
    "6138": {
      "op": "DUP3"
    },
    "6139": {
      "op": "MSTORE"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "6142": {
      "op": "SWAP1"
    },
    "6143": {
      "op": "DUP3"
    },
    "6144": {
      "op": "ADD"
    },
    "6145": {
      "op": "MSTORE"
    },
    "6146": {
      "op": "PUSH12",
      "value": "0x4E6F7420696E2072616E6765"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6161": {
      "op": "SHL"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6164": {
      "op": "DUP3"
    },
    "6165": {
      "op": "ADD"
    },
    "6166": {
      "op": "MSTORE"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6169": {
      "op": "ADD"
    },
    "6170": {
      "op": "SWAP1"
    },
    "6171": {
      "jump": "o",
      "op": "JUMP"
    },
    "6172": {
      "op": "JUMPDEST"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6175": {
      "op": "DUP1"
    },
    "6176": {
      "op": "DUP3"
    },
    "6177": {
      "op": "MSTORE"
    },
    "6178": {
      "op": "DUP2"
    },
    "6179": {
      "op": "DUP2"
    },
    "6180": {
      "op": "ADD"
    },
    "6181": {
      "op": "MSTORE"
    },
    "6182": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6217": {
      "op": "DUP3"
    },
    "6218": {
      "op": "ADD"
    },
    "6219": {
      "op": "MSTORE"
    },
    "6220": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6222": {
      "op": "ADD"
    },
    "6223": {
      "op": "SWAP1"
    },
    "6224": {
      "jump": "o",
      "op": "JUMP"
    },
    "6225": {
      "op": "JUMPDEST"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6230": {
      "op": "DUP3"
    },
    "6231": {
      "op": "ADD"
    },
    "6232": {
      "op": "DUP8"
    },
    "6233": {
      "op": "DUP4"
    },
    "6234": {
      "op": "MSTORE"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6237": {
      "op": "DUP8"
    },
    "6238": {
      "op": "DUP2"
    },
    "6239": {
      "op": "DUP6"
    },
    "6240": {
      "op": "ADD"
    },
    "6241": {
      "op": "MSTORE"
    },
    "6242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6246": {
      "op": "DUP6"
    },
    "6247": {
      "op": "ADD"
    },
    "6248": {
      "op": "MSTORE"
    },
    "6249": {
      "op": "DUP2"
    },
    "6250": {
      "op": "DUP8"
    },
    "6251": {
      "op": "MLOAD"
    },
    "6252": {
      "op": "DUP1"
    },
    "6253": {
      "op": "DUP5"
    },
    "6254": {
      "op": "MSTORE"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6257": {
      "op": "DUP7"
    },
    "6258": {
      "op": "ADD"
    },
    "6259": {
      "op": "SWAP2"
    },
    "6260": {
      "op": "POP"
    },
    "6261": {
      "op": "DUP3"
    },
    "6262": {
      "op": "DUP10"
    },
    "6263": {
      "op": "ADD"
    },
    "6264": {
      "op": "SWAP4"
    },
    "6265": {
      "op": "POP"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6268": {
      "op": "JUMPDEST"
    },
    "6269": {
      "op": "DUP2"
    },
    "6270": {
      "op": "DUP2"
    },
    "6271": {
      "op": "LT"
    },
    "6272": {
      "op": "ISZERO"
    },
    "6273": {
      "op": "PUSH2",
      "value": "0x18A1"
    },
    "6276": {
      "op": "JUMPI"
    },
    "6277": {
      "op": "DUP5"
    },
    "6278": {
      "op": "MLOAD"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6285": {
      "op": "SHL"
    },
    "6286": {
      "op": "SUB"
    },
    "6287": {
      "op": "AND"
    },
    "6288": {
      "op": "DUP4"
    },
    "6289": {
      "op": "MSTORE"
    },
    "6290": {
      "op": "SWAP4"
    },
    "6291": {
      "op": "DUP4"
    },
    "6292": {
      "op": "ADD"
    },
    "6293": {
      "op": "SWAP4"
    },
    "6294": {
      "op": "SWAP2"
    },
    "6295": {
      "op": "DUP4"
    },
    "6296": {
      "op": "ADD"
    },
    "6297": {
      "op": "SWAP2"
    },
    "6298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6300": {
      "op": "ADD"
    },
    "6301": {
      "op": "PUSH2",
      "value": "0x187C"
    },
    "6304": {
      "op": "JUMP"
    },
    "6305": {
      "op": "JUMPDEST"
    },
    "6306": {
      "op": "POP"
    },
    "6307": {
      "op": "POP"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6314": {
      "op": "SHL"
    },
    "6315": {
      "op": "SUB"
    },
    "6316": {
      "op": "SWAP7"
    },
    "6317": {
      "op": "SWAP1"
    },
    "6318": {
      "op": "SWAP7"
    },
    "6319": {
      "op": "AND"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6322": {
      "op": "DUP6"
    },
    "6323": {
      "op": "ADD"
    },
    "6324": {
      "op": "MSTORE"
    },
    "6325": {
      "op": "POP"
    },
    "6326": {
      "op": "POP"
    },
    "6327": {
      "op": "POP"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6330": {
      "op": "ADD"
    },
    "6331": {
      "op": "MSTORE"
    },
    "6332": {
      "op": "SWAP4"
    },
    "6333": {
      "op": "SWAP3"
    },
    "6334": {
      "op": "POP"
    },
    "6335": {
      "op": "POP"
    },
    "6336": {
      "op": "POP"
    },
    "6337": {
      "jump": "o",
      "op": "JUMP"
    },
    "6338": {
      "op": "JUMPDEST"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6341": {
      "op": "DUP3"
    },
    "6342": {
      "op": "NOT"
    },
    "6343": {
      "op": "DUP3"
    },
    "6344": {
      "op": "GT"
    },
    "6345": {
      "op": "ISZERO"
    },
    "6346": {
      "op": "PUSH2",
      "value": "0x18D5"
    },
    "6349": {
      "op": "JUMPI"
    },
    "6350": {
      "op": "PUSH2",
      "value": "0x18D5"
    },
    "6353": {
      "op": "PUSH2",
      "value": "0x195E"
    },
    "6356": {
      "jump": "i",
      "op": "JUMP"
    },
    "6357": {
      "op": "JUMPDEST"
    },
    "6358": {
      "op": "POP"
    },
    "6359": {
      "op": "ADD"
    },
    "6360": {
      "op": "SWAP1"
    },
    "6361": {
      "jump": "o",
      "op": "JUMP"
    },
    "6362": {
      "op": "JUMPDEST"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6365": {
      "op": "DUP3"
    },
    "6366": {
      "op": "PUSH2",
      "value": "0x18F7"
    },
    "6369": {
      "op": "JUMPI"
    },
    "6370": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6375": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6377": {
      "op": "SHL"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6380": {
      "op": "MSTORE"
    },
    "6381": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6385": {
      "op": "MSTORE"
    },
    "6386": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6390": {
      "op": "REVERT"
    },
    "6391": {
      "op": "JUMPDEST"
    },
    "6392": {
      "op": "POP"
    },
    "6393": {
      "op": "DIV"
    },
    "6394": {
      "op": "SWAP1"
    },
    "6395": {
      "jump": "o",
      "op": "JUMP"
    },
    "6396": {
      "op": "JUMPDEST"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6399": {
      "op": "DUP2"
    },
    "6400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6402": {
      "op": "NOT"
    },
    "6403": {
      "op": "DIV"
    },
    "6404": {
      "op": "DUP4"
    },
    "6405": {
      "op": "GT"
    },
    "6406": {
      "op": "DUP3"
    },
    "6407": {
      "op": "ISZERO"
    },
    "6408": {
      "op": "ISZERO"
    },
    "6409": {
      "op": "AND"
    },
    "6410": {
      "op": "ISZERO"
    },
    "6411": {
      "op": "PUSH2",
      "value": "0x1916"
    },
    "6414": {
      "op": "JUMPI"
    },
    "6415": {
      "op": "PUSH2",
      "value": "0x1916"
    },
    "6418": {
      "op": "PUSH2",
      "value": "0x195E"
    },
    "6421": {
      "jump": "i",
      "op": "JUMP"
    },
    "6422": {
      "op": "JUMPDEST"
    },
    "6423": {
      "op": "POP"
    },
    "6424": {
      "op": "MUL"
    },
    "6425": {
      "op": "SWAP1"
    },
    "6426": {
      "jump": "o",
      "op": "JUMP"
    },
    "6427": {
      "op": "JUMPDEST"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6430": {
      "op": "DUP3"
    },
    "6431": {
      "op": "DUP3"
    },
    "6432": {
      "op": "LT"
    },
    "6433": {
      "op": "ISZERO"
    },
    "6434": {
      "op": "PUSH2",
      "value": "0x192D"
    },
    "6437": {
      "op": "JUMPI"
    },
    "6438": {
      "op": "PUSH2",
      "value": "0x192D"
    },
    "6441": {
      "op": "PUSH2",
      "value": "0x195E"
    },
    "6444": {
      "jump": "i",
      "op": "JUMP"
    },
    "6445": {
      "op": "JUMPDEST"
    },
    "6446": {
      "op": "POP"
    },
    "6447": {
      "op": "SUB"
    },
    "6448": {
      "op": "SWAP1"
    },
    "6449": {
      "jump": "o",
      "op": "JUMP"
    },
    "6450": {
      "op": "JUMPDEST"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6453": {
      "op": "JUMPDEST"
    },
    "6454": {
      "op": "DUP4"
    },
    "6455": {
      "op": "DUP2"
    },
    "6456": {
      "op": "LT"
    },
    "6457": {
      "op": "ISZERO"
    },
    "6458": {
      "op": "PUSH2",
      "value": "0x194D"
    },
    "6461": {
      "op": "JUMPI"
    },
    "6462": {
      "op": "DUP2"
    },
    "6463": {
      "op": "DUP2"
    },
    "6464": {
      "op": "ADD"
    },
    "6465": {
      "op": "MLOAD"
    },
    "6466": {
      "op": "DUP4"
    },
    "6467": {
      "op": "DUP3"
    },
    "6468": {
      "op": "ADD"
    },
    "6469": {
      "op": "MSTORE"
    },
    "6470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6472": {
      "op": "ADD"
    },
    "6473": {
      "op": "PUSH2",
      "value": "0x1935"
    },
    "6476": {
      "op": "JUMP"
    },
    "6477": {
      "op": "JUMPDEST"
    },
    "6478": {
      "op": "DUP4"
    },
    "6479": {
      "op": "DUP2"
    },
    "6480": {
      "op": "GT"
    },
    "6481": {
      "op": "ISZERO"
    },
    "6482": {
      "op": "PUSH2",
      "value": "0x1222"
    },
    "6485": {
      "op": "JUMPI"
    },
    "6486": {
      "op": "POP"
    },
    "6487": {
      "op": "POP"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6490": {
      "op": "SWAP2"
    },
    "6491": {
      "op": "ADD"
    },
    "6492": {
      "op": "MSTORE"
    },
    "6493": {
      "jump": "o",
      "op": "JUMP"
    },
    "6494": {
      "op": "JUMPDEST"
    },
    "6495": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6502": {
      "op": "SHL"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6505": {
      "op": "MSTORE"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6510": {
      "op": "MSTORE"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6515": {
      "op": "REVERT"
    },
    "6516": {
      "op": "JUMPDEST"
    },
    "6517": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6522": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6524": {
      "op": "SHL"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6527": {
      "op": "MSTORE"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6530": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6532": {
      "op": "MSTORE"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6537": {
      "op": "REVERT"
    },
    "6538": {
      "op": "JUMPDEST"
    },
    "6539": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6544": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6546": {
      "op": "SHL"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6549": {
      "op": "MSTORE"
    },
    "6550": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6552": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6554": {
      "op": "MSTORE"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6559": {
      "op": "REVERT"
    },
    "6560": {
      "op": "JUMPDEST"
    },
    "6561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6567": {
      "op": "SHL"
    },
    "6568": {
      "op": "SUB"
    },
    "6569": {
      "op": "DUP2"
    },
    "6570": {
      "op": "AND"
    },
    "6571": {
      "op": "DUP2"
    },
    "6572": {
      "op": "EQ"
    },
    "6573": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "6576": {
      "op": "JUMPI"
    },
    "6577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6579": {
      "op": "DUP1"
    },
    "6580": {
      "op": "REVERT"
    }
  },
  "sha1": "14aa1700d27339b34be007f570f15aa6c6c0227b",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/IxPTP.sol\";\nimport \"../interfaces/IJoeRouter01.sol\";\nimport \"../interfaces/IJoePair.sol\";\n\n/// @title Smart Convertor\n/// @author Vector Team\n/// @notice Smart Convertor is a convertor to manage conversion or buying on trader Joe\ncontract xPTPConvertor is Ownable {\n    using SafeERC20 for IERC20;\n    address public immutable xptp;\n    address public immutable ptp;\n    address public immutable router;\n    address public immutable pair;\n\n    uint256 public buyThreshold;\n    uint256 public constant DENOMINATOR = 10000;\n    uint256 public buyPercent;\n    uint256 public deltaPercentage = 9500;\n    uint256 public slippagePct = 500;\n\n    event xPTPObtained(address user, uint256 depositedPTP, uint256 obtainedxPTP);\n\n    constructor(\n        address _xptp,\n        address _ptp,\n        address _router,\n        address _pair\n    ) {\n        xptp = _xptp;\n        ptp = _ptp;\n        router = _router;\n        pair = _pair;\n    }\n\n    function setBuyThreshold(uint256 newValue) external onlyOwner {\n        require(newValue >= 0 && newValue <= 10000, \"Not in range\");\n        buyThreshold = newValue;\n    }\n\n    function setBuyPercent(uint256 newValue) external onlyOwner {\n        require(newValue >= 0 && newValue <= 10000, \"Not in range\");\n        buyPercent = newValue;\n    }\n\n    function setDeltaPercentage(uint256 newValue) external onlyOwner {\n        require(newValue >= 0 && newValue <= 10000, \"Not in range\");\n        deltaPercentage = newValue;\n    }\n\n    function setSlippage(uint256 newValue) external onlyOwner {\n        require(newValue >= 0 && newValue <= 10000, \"Not in range\");\n        slippagePct = newValue;\n    }\n\n    /// @notice returns the ratio between xPTP and PTP. 10000= 1:1 rate\n    function getxPTPRatio() public view returns (uint256 xPTPRatio) {\n        (uint256 r0, uint256 r1, ) = IJoePair(pair).getReserves();\n        if (IJoePair(pair).token0() == xptp) {\n            xPTPRatio = (r1 * DENOMINATOR) / r0;\n        } else {\n            xPTPRatio = (r0 * DENOMINATOR) / r1;\n        }\n    }\n\n    /// @notice estimates the amount of xPTP recieved if bought on traderJoe\n    function estimateOutAmount(uint256 amountSold) public view returns (uint256 amountOut) {\n        (uint256 r0, uint256 r1, ) = IJoePair(pair).getReserves();\n        if (IJoePair(pair).token1() == xptp) {\n            amountOut = IJoeRouter01(router).getAmountOut(amountSold, r0, r1);\n            // amountOut = (((r1 * amountSold) / (r0 + amountSold)) * 997) / 1000;\n        } else {\n            amountOut = IJoeRouter01(router).getAmountOut(amountSold, r1, r0);\n            // amountOut = (((r0 * amountSold) / (r1 + amountSold)) * 997) / 1000;\n        }\n    }\n\n    /// @notice increase allowance to a contract to the maximum amount for a specific token if it is needed\n    /// @param token the token to increase the allowance of\n    /// @param _to the contract to increase the allowance\n    /// @param _amount the amount of allowance that the contract needs\n    function _approveTokenIfNeeded(\n        address token,\n        address _to,\n        uint256 _amount\n    ) private {\n        if (IERC20(token).allowance(address(this), _to) < _amount) {\n            IERC20(token).approve(_to, type(uint256).max);\n        }\n    }\n\n    function maxAmountToBuy() public view returns (uint256) {\n        (uint256 r0, uint256 r1, ) = IJoePair(pair).getReserves();\n        uint256 xptpReserves = (IJoePair(pair).token0() == xptp ? r0 : r1);\n        uint256 ptpReserves = (IJoePair(pair).token0() == xptp ? r1 : r0);\n        if (ptpReserves > xptpReserves) {\n            return 0;\n        } else {\n            return ((xptpReserves - ptpReserves) * deltaPercentage) / DENOMINATOR;\n        }\n    }\n\n    /// @notice deposit PTP in vector protocol and get xPTP\n    /// @dev if xPTPRation < buyThreshold, will buy in open market a % of the deposit\n    /// @dev this % is determined by buyPercent\n    /// @param _amount the amount of PTP\n    function estimateTotalConversion(uint256 _amount)\n        external\n        view\n        returns (uint256 minimumEstimatedTotal)\n    {\n        uint256 xPTPRatio = getxPTPRatio();\n        minimumEstimatedTotal = _amount;\n        if (xPTPRatio <= buyThreshold) {\n            uint256 amountToBuy = (minimumEstimatedTotal * buyPercent) / DENOMINATOR;\n            uint256 maxAmountToRespectPriceImpact = maxAmountToBuy();\n            if (amountToBuy > maxAmountToRespectPriceImpact) {\n                amountToBuy = maxAmountToRespectPriceImpact;\n            }\n            uint256 estimatedOutAmount = estimateOutAmount(amountToBuy);\n            if (amountToBuy < estimatedOutAmount) {\n                minimumEstimatedTotal -= amountToBuy;\n                minimumEstimatedTotal +=\n                    (estimatedOutAmount * (DENOMINATOR - slippagePct)) /\n                    DENOMINATOR;\n            }\n        }\n    }\n\n    /// @notice deposit PTP in vector protocol and get xPTP\n    /// @dev if xPTPRation < buyThreshold, will buy in open market a % of the deposit\n    /// @dev this % is determined by buyPercent\n    /// @param _amount the amount of PTP\n    /// @param _for, receiver of the xPTP\n    function _depositFor(uint256 _amount, address _for)\n        internal\n        returns (uint256 obtainedxPtpAmount)\n    {\n        IERC20(ptp).safeTransferFrom(msg.sender, address(this), _amount);\n        uint256 xPTPRatio = getxPTPRatio();\n        uint256 amountToConvert = _amount;\n        if (xPTPRatio <= buyThreshold) {\n            uint256 amountToBuy = (amountToConvert * buyPercent) / DENOMINATOR;\n            uint256 maxAmountToRespectPriceImpact = maxAmountToBuy();\n            if (amountToBuy > maxAmountToRespectPriceImpact) {\n                amountToBuy = maxAmountToRespectPriceImpact;\n            }\n            if (amountToBuy > 0) {\n                uint256 estimatedOutAmount = estimateOutAmount(amountToBuy);\n                if (amountToBuy < estimatedOutAmount) {\n                    _approveTokenIfNeeded(ptp, router, amountToBuy);\n                    address[] memory path = new address[](2);\n                    path[0] = ptp;\n                    path[1] = xptp;\n                    obtainedxPtpAmount = IJoeRouter01(router).swapExactTokensForTokens(\n                        amountToBuy,\n                        (estimatedOutAmount * (DENOMINATOR - slippagePct)) / DENOMINATOR,\n                        path,\n                        _for,\n                        block.timestamp\n                    )[1];\n                    require(obtainedxPtpAmount > amountToBuy, \"Transaction is disadvantageous\");\n                    amountToConvert -= amountToBuy;\n                }\n            }\n        }\n        if (amountToConvert > 0) {\n            obtainedxPtpAmount += amountToConvert;\n            _approveTokenIfNeeded(ptp, xptp, amountToConvert);\n            // IERC20(ptp).approve(xptp, amountToConvert);\n            IxPTP(xptp).deposit(amountToConvert);\n            IERC20(xptp).safeTransfer(_for, amountToConvert);\n        }\n        emit xPTPObtained(_for, _amount, obtainedxPtpAmount);\n    }\n\n    /// @notice deposit PTP in vector protocol and get xPTP\n    /// @dev if xPTPRation < buyThreshold, will buy in open market a % of the deposit\n    /// @dev this % is determined by buyPercent\n    /// @param _amount the amount of PTP\n    function deposit(uint256 _amount) external returns (uint256 obtainedxPtpAmount) {\n        obtainedxPtpAmount = _depositFor(_amount, msg.sender);\n    }\n\n    /// @notice deposit PTP in vector protocol and get xPTP\n    /// @dev if xPTPRation < buyThreshold, will buy in open market a % of the deposit\n    /// @dev this % is determined by buyPercent\n    /// @param _amount the amount of PTP\n    function depositFor(uint256 _amount, address _for)\n        external\n        returns (uint256 obtainedxPtpAmount)\n    {\n        obtainedxPtpAmount = _depositFor(_amount, _for);\n    }\n}\n",
  "sourceMap": "485:7615:6:-:0;;;845:4;812:37;;884:3;855:32;;977:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;-1:-1:-1;;;;;;1098:12:6;;;;;;;;1120:10;;;;;;;1140:16;;;;;;;1166:12;;;;;;485:7615;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:11:-;93:13;;-1:-1:-1;;;;;135:31:11;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:464::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;527:59;;605:49;650:2;639:9;635:18;605:49;:::i;:::-;595:59;;196:464;;;;;;;:::o;:::-;485:7615:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/xPTPConvertor.sol",
  "type": "contract"
}
